[{"C:\\Users\\User\\Desktop\\a-move\\src\\index.js":"1","C:\\Users\\User\\Desktop\\a-move\\src\\App.js":"2","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\KlientDashboard.jsx":"3","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\ProtectedRoutes.jsx":"4","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\AdminDashboard.jsx":"5","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\FormLogin.jsx":"6","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoState.jsx":"7","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientState.jsx":"8","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertState.jsx":"9","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\types.js":"10","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\types.js":"11","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\types.js":"12","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\Alert.jsx":"13","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientContext.jsx":"14","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoContext.jsx":"15","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoReducer.jsx":"16","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientReducer.jsx":"17","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertContext.jsx":"18","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertReducer.jsx":"19","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Porosite.jsx":"20","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Header.jsx":"21","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Sidebar.jsx":"22","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Shporta.jsx":"23","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Home.jsx":"24","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Produktet.jsx":"25","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Wishlist.jsx":"26","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\SingleProduct.jsx":"27","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Header.jsx":"28","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Home.jsx":"29","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Oferta.jsx":"30","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Klient.jsx":"31","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Produkte.jsx":"32","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Porosite.jsx":"33","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriProduktesh.jsx":"34","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoZonaKlientesh.jsx":"35","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriKlientesh.jsx":"36","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoAttributes.jsx":"37","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoProduktPopup.jsx":"38","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKlientPopup.jsx":"39","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseState.jsx":"40","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\types.js":"41","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollapseReducer.jsx":"42","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseContext.jsx":"43","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoOfertePop.jsx":"44","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\AccountDetails.jsx":"45","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertaSingleProductForm.jsx":"46","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\CategoryProductOfertaForm.jsx":"47","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\ClientSpecifikOfertaForm.jsx":"48","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\CategoryClientOfertaForm.jsx":"49","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertSetForm.jsx":"50","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertaGrupForm.jsx":"51"},{"size":244,"mtime":1611153731996,"results":"52","hashOfConfig":"53"},{"size":1086,"mtime":1612537604769,"results":"54","hashOfConfig":"53"},{"size":2463,"mtime":1612539803623,"results":"55","hashOfConfig":"53"},{"size":442,"mtime":1601629298684,"results":"56","hashOfConfig":"53"},{"size":7092,"mtime":1611141933753,"results":"57","hashOfConfig":"53"},{"size":3053,"mtime":1613656952348,"results":"58","hashOfConfig":"53"},{"size":6449,"mtime":1613571628057,"results":"59","hashOfConfig":"53"},{"size":6486,"mtime":1613570909790,"results":"60","hashOfConfig":"53"},{"size":769,"mtime":1608284703555,"results":"61","hashOfConfig":"53"},{"size":633,"mtime":1612258677955,"results":"62","hashOfConfig":"53"},{"size":530,"mtime":1612436163863,"results":"63","hashOfConfig":"53"},{"size":80,"mtime":1608220546675,"results":"64","hashOfConfig":"53"},{"size":913,"mtime":1608284826165,"results":"65","hashOfConfig":"53"},{"size":111,"mtime":1605518101889,"results":"66","hashOfConfig":"53"},{"size":107,"mtime":1606839892052,"results":"67","hashOfConfig":"53"},{"size":1389,"mtime":1612258869156,"results":"68","hashOfConfig":"53"},{"size":803,"mtime":1612436255025,"results":"69","hashOfConfig":"53"},{"size":109,"mtime":1608214944739,"results":"70","hashOfConfig":"53"},{"size":255,"mtime":1611752885111,"results":"71","hashOfConfig":"53"},{"size":30959,"mtime":1613655421724,"results":"72","hashOfConfig":"53"},{"size":9783,"mtime":1613484076465,"results":"73","hashOfConfig":"53"},{"size":2312,"mtime":1612539441943,"results":"74","hashOfConfig":"53"},{"size":4663,"mtime":1611747057855,"results":"75","hashOfConfig":"53"},{"size":145,"mtime":1604931601960,"results":"76","hashOfConfig":"53"},{"size":20880,"mtime":1613663056337,"results":"77","hashOfConfig":"53"},{"size":3439,"mtime":1611747110456,"results":"78","hashOfConfig":"53"},{"size":4612,"mtime":1611747101984,"results":"79","hashOfConfig":"53"},{"size":3214,"mtime":1613744444453,"results":"80","hashOfConfig":"53"},{"size":1802,"mtime":1612194792473,"results":"81","hashOfConfig":"53"},{"size":2299,"mtime":1611063343977,"results":"82","hashOfConfig":"53"},{"size":30623,"mtime":1613747239301,"results":"83","hashOfConfig":"53"},{"size":28428,"mtime":1613746288834,"results":"84","hashOfConfig":"53"},{"size":32193,"mtime":1613728834756,"results":"85","hashOfConfig":"53"},{"size":13370,"mtime":1613744405672,"results":"86","hashOfConfig":"53"},{"size":13448,"mtime":1611746876277,"results":"87","hashOfConfig":"53"},{"size":13984,"mtime":1611746721042,"results":"88","hashOfConfig":"53"},{"size":21510,"mtime":1613749490069,"results":"89","hashOfConfig":"53"},{"size":16272,"mtime":1612963623728,"results":"90","hashOfConfig":"53"},{"size":6366,"mtime":1611746792152,"results":"91","hashOfConfig":"53"},{"size":753,"mtime":1610730641601,"results":"92","hashOfConfig":"53"},{"size":111,"mtime":1610730192730,"results":"93","hashOfConfig":"53"},{"size":295,"mtime":1610730504309,"results":"94","hashOfConfig":"53"},{"size":121,"mtime":1610730041373,"results":"95","hashOfConfig":"53"},{"size":3094,"mtime":1611226842508,"results":"96","hashOfConfig":"53"},{"size":8611,"mtime":1612968907148,"results":"97","hashOfConfig":"53"},{"size":7083,"mtime":1612353168167,"results":"98","hashOfConfig":"53"},{"size":5753,"mtime":1611853006308,"results":"99","hashOfConfig":"53"},{"size":7301,"mtime":1612368017690,"results":"100","hashOfConfig":"53"},{"size":7408,"mtime":1612370610285,"results":"101","hashOfConfig":"53"},{"size":3871,"mtime":1612365746373,"results":"102","hashOfConfig":"53"},{"size":10555,"mtime":1612358940290,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"z82e08",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"106"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"106"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"106"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"106"},"C:\\Users\\User\\Desktop\\a-move\\src\\index.js",[],["236","237"],"C:\\Users\\User\\Desktop\\a-move\\src\\App.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\KlientDashboard.jsx",["238"],"import React, { useContext, useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ProtectedRoutes from \"../components/ProtectedRoutes\";\r\nimport Home from \"./components/Home\";\r\nimport Porosite from \"./components/Porosite\";\r\nimport Produktet from \"./components/Produktet\";\r\nimport SingleProduct from \"./components/SingleProduct\";\r\nimport KlientContext from \"../../context/klientContext/KlientContext\";\r\nimport Shporta from \"./components/Shporta\";\r\nimport Wishlist from \"./components/Wishlist\";\r\nimport Alert from \"../components/Alert\";\r\nimport CollapseContext from \"../../context/collpaseContext/CollpaseContext\";\r\n\r\nexport default function KlientDashboard({ history }) {\r\n  const klientContext = useContext(KlientContext);\r\n  const { name, image_profile } = klientContext.user;\r\n  const collpaseContext = useContext(CollapseContext);\r\n  const { value } = collpaseContext;\r\n\r\n  const handleLogout = () => {\r\n    localStorage.setItem(\"auth\", false);\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/\");\r\n  };\r\n  useEffect(() => {\r\n    klientContext.getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Alert />\r\n      <div className=\"klient-dashboard\">\r\n        <Sidebar />\r\n        <Header\r\n          name={name}\r\n          userImg={image_profile}\r\n          handleLogout={() => handleLogout()}\r\n        />\r\n\r\n        <div\r\n          className={\r\n            value === true\r\n              ? \"klient-dashboard-body klient-dashboard-body-collapse\"\r\n              : \"klient-dashboard-body\"\r\n          }\r\n        >\r\n          <Switch>\r\n            <ProtectedRoutes exact path=\"/klient\" component={Home} />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/klient/porosite\"\r\n              component={Porosite}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/klient/produktet\"\r\n              render={(props) => <Produktet {...props} />}\r\n            />\r\n            <ProtectedRoutes exact path=\"/klient/shporta\" component={Shporta} />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/klient/wishlist\"\r\n              component={Wishlist}\r\n            />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/klient/:id\"\r\n              component={SingleProduct}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\ProtectedRoutes.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\AdminDashboard.jsx",["239"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport Porosite from \"./components/Porosite\";\r\nimport ProtectedRoutes from \"../components/ProtectedRoutes\";\r\nimport Home from \"./components/Home\";\r\nimport Produkte from \"./components/Produkte\";\r\nimport Oferta from \"./components/Oferta\";\r\nimport Klient from \"./components/Klient\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport ArrowDropUpOutlinedIcon from \"@material-ui/icons/ArrowDropUpOutlined\";\r\nimport DepoContext from \"../../context/depoContext/DepoContext\";\r\nimport Alerts from \"../components/Alert\";\r\nimport ShtoAttributes from \"./components/ShtoAttributes\";\r\nimport ShtoKategoriProduktesh from \"./components/ShtoKategoriProduktesh\";\r\nimport ShtoKategoriKlientesh from \"./components/ShtoKategoriKlientesh\";\r\nimport ShtoZonaKlientesh from \"./components/ShtoZonaKlientesh\";\r\nimport CollapseContext from \"../../context/collpaseContext/CollpaseContext\";\r\nimport AccountDetails from \"./components/AccountDetails\";\r\n\r\nexport default function AdminDashboard({ history }) {\r\n  const [dropdownKlient, Showklientdropdown] = useState(false);\r\n  const [dropdownProdukt, showProduktDropdown] = useState(false);\r\n  const depoContext = useContext(DepoContext);\r\n  const { user } = depoContext;\r\n  const collpaseContext = useContext(CollapseContext);\r\n  const { value } = collpaseContext;\r\n\r\n  useEffect(() => {\r\n    depoContext.getUser();\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.setItem(\"auth\", false);\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Alerts />\r\n      <Header\r\n        name={user.name}\r\n        userImg={user.image_profile}\r\n        handleLogout={() => handleLogout()}\r\n      />\r\n      <div className=\"sidebar\">\r\n        <div\r\n          className={\r\n            value === true\r\n              ? \"sidebar-dashboard sidebar-dashboard-collapse\"\r\n              : \"sidebar-dashboard\"\r\n          }\r\n        >\r\n          <div className=\"sidebar-dashboard-image\">\r\n            <img\r\n              src=\"/move-logo.png\"\r\n              style={{ display: value === true ? \"none\" : \"\" }}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Link className=\"link\" to=\"/admin\">\r\n              <HomeIcon style={{ fontSize: \"40px\" }} />{\" \"}\r\n              <p style={{ display: value === true ? \"none\" : \"\" }}>Kreu</p>\r\n            </Link>\r\n            <Link className=\"link\" to=\"/admin/porosite\">\r\n              <LocalMallIcon style={{ fontSize: \"40px\" }} />{\" \"}\r\n              <p style={{ display: value === true ? \"none\" : \"\" }}>Porosite</p>\r\n            </Link>\r\n            <Link\r\n              className=\"link\"\r\n              to=\"/admin/produktet\"\r\n              onClick={() => showProduktDropdown(!dropdownProdukt)}\r\n            >\r\n              <FormatListNumberedIcon style={{ fontSize: \"40px\" }} />\r\n              <p style={{ display: value === true ? \"none\" : \"\" }}>\r\n                Produkte\r\n                {!dropdownProdukt ? (\r\n                  <ArrowDropDownOutlinedIcon\r\n                    onClick={() => showProduktDropdown(!dropdownProdukt)}\r\n                  />\r\n                ) : (\r\n                  <ArrowDropUpOutlinedIcon\r\n                    onClick={() => showProduktDropdown(!dropdownProdukt)}\r\n                  />\r\n                )}\r\n              </p>\r\n            </Link>\r\n            {dropdownProdukt && (\r\n              <div>\r\n                <Link className=\"link\" to=\"/admin/produktet/attributes\">\r\n                  Shto attribut\r\n                </Link>\r\n                <Link className=\"link\" to=\"/admin/produktet/kategori\">\r\n                  Shto kategori\r\n                </Link>\r\n              </div>\r\n            )}\r\n            <Link className=\"link\" to=\"/admin/oferta\">\r\n              <LocalOfferIcon style={{ fontSize: \"40px\" }} />{\" \"}\r\n              <p style={{ display: value === true ? \"none\" : \"\" }}>Oferta</p>\r\n            </Link>\r\n            <Link\r\n              className=\"link\"\r\n              to=\"/admin/klient\"\r\n              onClick={() => Showklientdropdown(!dropdownKlient)}\r\n            >\r\n              <PersonIcon style={{ fontSize: \"40px\" }} />\r\n              <p style={{ display: value === true ? \"none\" : \"\" }}>\r\n                Kliente{\" \"}\r\n                {!dropdownKlient ? (\r\n                  <ArrowDropDownOutlinedIcon\r\n                    onClick={() => Showklientdropdown(!dropdownKlient)}\r\n                  />\r\n                ) : (\r\n                  <ArrowDropUpOutlinedIcon\r\n                    onClick={() => Showklientdropdown(!dropdownKlient)}\r\n                  />\r\n                )}\r\n              </p>\r\n            </Link>\r\n            {dropdownKlient && (\r\n              <div>\r\n                <Link className=\"link\" to=\"/admin/klient\">\r\n                  Te gjithe\r\n                </Link>\r\n                <Link className=\"link\" to=\"/admin/klient/kategori\">\r\n                  Shto kategori\r\n                </Link>\r\n                <Link className=\"link\" to=\"/admin/klient/zona\">\r\n                  Shto zone\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            value === true\r\n              ? \"sidebar-right sidebar-right-collapse\"\r\n              : \"sidebar-right\"\r\n          }\r\n        >\r\n          <Switch>\r\n            <ProtectedRoutes exact path=\"/admin\" component={Home} />\r\n            <ProtectedRoutes path=\"/admin/porosite\" component={Porosite} />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/admin/produktet\"\r\n              component={Produkte}\r\n            />\r\n            <ProtectedRoutes\r\n              path=\"/admin/produktet/attributes\"\r\n              component={ShtoAttributes}\r\n            />\r\n            <ProtectedRoutes\r\n              path=\"/admin/produktet/kategori\"\r\n              component={ShtoKategoriProduktesh}\r\n            />\r\n            <ProtectedRoutes path=\"/admin/oferta\" component={Oferta} />\r\n            <ProtectedRoutes exact path=\"/admin/klient\" component={Klient} />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/admin/klient/kategori\"\r\n              component={ShtoKategoriKlientesh}\r\n            />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/admin/klient/zona\"\r\n              component={ShtoZonaKlientesh}\r\n            />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/admin/account\"\r\n              component={AccountDetails}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\FormLogin.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\Alert.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientContext.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoContext.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoReducer.jsx",["240"],"import {\r\n  GET_ALL_CLIENTS,\r\n  GET_ORDER_DETAILS,\r\n  GET_ALL_ORDERS,\r\n  GET_USER,\r\n  GET_ALL_PRODUCTS,\r\n  EMPTY_ORDER_DETAILS,\r\n  GET_ATTR_VALUES,\r\n  GET_ATTR_NAMES,\r\n  GET_CATEGORY_PRODUCTS,\r\n  GET_CATEGORY_CLIENTS,\r\n  GET_ZONA_CLIENTS,\r\n  GET_PRODUKT_ATTR,\r\n} from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      return { ...state, user: action.payload };\r\n    case GET_ALL_CLIENTS:\r\n      return { ...state, klientet: action.payload };\r\n    case GET_ALL_PRODUCTS:\r\n      return { ...state, produktet: action.payload };\r\n    case GET_ALL_ORDERS:\r\n      return { ...state, porosite: action.payload };\r\n    case GET_ORDER_DETAILS:\r\n      return { ...state, orderDetails: action.payload };\r\n    case EMPTY_ORDER_DETAILS:\r\n      return { ...state, orderDetails: [] };\r\n    case GET_ATTR_NAMES:\r\n      return { ...state, attrNames: action.payload };\r\n    case GET_ATTR_VALUES:\r\n      return { ...state, attrValues: action.payload };\r\n    case GET_CATEGORY_PRODUCTS:\r\n      return { ...state, categoryProducts: action.payload };\r\n    case GET_CATEGORY_CLIENTS:\r\n      return { ...state, categoryClients: action.payload };\r\n    case GET_ZONA_CLIENTS:\r\n      return { ...state, zonaClients: action.payload };\r\n    case GET_PRODUKT_ATTR:\r\n      return { ...state, produktAttr: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientReducer.jsx",["241"],"import {\r\n  GET_ALL_PRODUCTS,\r\n  GET_CART_PRODUCTS,\r\n  GET_USER,\r\n  GET_WISHLIST_PRODUCTS,\r\n  GET_ORDERS_SINGLE_USER,\r\n  GET_PRODUCTS_CATEGORIES,\r\n} from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      return { ...state, user: action.payload };\r\n    case GET_ALL_PRODUCTS:\r\n      return { ...state, products: action.payload };\r\n    case GET_CART_PRODUCTS:\r\n      return { ...state, cartProducts: action.payload };\r\n    case GET_WISHLIST_PRODUCTS:\r\n      return { ...state, wishlistProducts: action.payload };\r\n    case GET_ORDERS_SINGLE_USER:\r\n      return { ...state, ordersSingleUser: action.payload };\r\n    case GET_PRODUCTS_CATEGORIES:\r\n      return { ...state, produktCategories: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertContext.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertReducer.jsx",["242"],"import { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Porosite.jsx",["243"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddShoppingCartOutlinedIcon from \"@material-ui/icons/AddShoppingCartOutlined\";\r\nimport axios from \"axios\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport KlientContext from \"../../../context/klientContext/KlientContext\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport ShoppingBasketOutlinedIcon from \"@material-ui/icons/ShoppingBasketOutlined\";\r\n\r\nexport default function Porosite() {\r\n  const alertContext = useContext(AlertContext);\r\n  const klientConext = useContext(KlientContext);\r\n  const { ordersSingleUser, products } = klientConext;\r\n  const [orderDetails, showOrderDetails] = useState(false);\r\n  const [orderDeletePop, setOrderDeletePop] = useState(false);\r\n  const [resetActiveOrder, setActiveOrder] = useState(false);\r\n  const [orderEditPop, setOrderEditPop] = useState(false);\r\n  const [orderDeleteID, setOrderDeleteID] = useState(\"\");\r\n  const [orderContentDetails, setOrderDetailsContent] = useState([]);\r\n  const [orderEditDetails, setEditOrderDetails] = useState([]);\r\n  const [resetOrderID, setResetOrderID] = useState(\"\");\r\n  const [resetOrderKlientID, setResetKlientID] = useState(\"\");\r\n  const [searchFilter, setSearchFilter] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [itemPage, setItempage] = useState(5);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"ID\",\r\n    direction: \"descending\",\r\n  });\r\n  const [disabledButton, setDisabledButton] = useState({});\r\n  const ordersIDProdukt = orderEditDetails.map((order) => order.produktID);\r\n  const [editOrderID, setEditOrderID] = useState(\"\");\r\n  const [editOrderKlientID, setEditOrderKlientID] = useState(\"\");\r\n  const filteredOrders = ordersSingleUser.filter(\r\n    (order) =>\r\n      order.ID.toString().toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.orderDate\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(searchFilter.toLowerCase()) ||\r\n      order.totali.toString().toLowerCase().includes(searchFilter.toLowerCase())\r\n  );\r\n\r\n  if (propertyName !== null) {\r\n    filteredOrders.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n\r\n  useEffect(() => {\r\n    klientConext.getAllOrders();\r\n    klientConext.getAllProducts();\r\n  }, []);\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const renderButtonStatus = (status) => {\r\n    if (status === 1) {\r\n      return \"Aktive\";\r\n    } else if (status === 2) {\r\n      return \"Ne Pritje\";\r\n    } else if (status === 3) {\r\n      return \"Anulluar\";\r\n    } else {\r\n      return \"Perfunduar\";\r\n    }\r\n  };\r\n\r\n  const renderButtonColorsStatus = (status) => {\r\n    if (status === 1) {\r\n      return \"#73C850\";\r\n    } else if (status === 3) {\r\n      return \"#FF0000\";\r\n    }\r\n  };\r\n  const increaseQty = (produktID) => {\r\n    const orders = [...orderEditDetails];\r\n    const findProduct = orders.find((order) => order.produktID === produktID);\r\n    findProduct.qty += 1;\r\n    setEditOrderDetails(orders);\r\n  };\r\n\r\n  const decreaseQty = (produktID) => {\r\n    const orders = [...orderEditDetails];\r\n    const findProduct = orders.find((order) => order.produktID === produktID);\r\n    findProduct.qty -= 1;\r\n    setEditOrderDetails(orders);\r\n  };\r\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n  const cmimetPorosise = orderEditDetails.map(\r\n    (orders) => orders.qty * orders.cmimiProduktit\r\n  );\r\n  const totaliPorosise = cmimetPorosise.reduce(reducer, 0);\r\n\r\n  return (\r\n    <>\r\n      {orderEditPop && (\r\n        <div className=\"order-edit-pop\">\r\n          <div\r\n            className=\"order-edit-pop-opa\"\r\n            onClick={() => {\r\n              setOrderEditPop(false);\r\n              setEditOrderDetails([]);\r\n              klientConext.getAllOrders();\r\n            }}\r\n          ></div>\r\n          <div className=\"order-edit-pop-container\">\r\n            <CloseOutlinedIcon\r\n              onClick={() => {\r\n                setOrderEditPop(false);\r\n                setEditOrderDetails([]);\r\n                klientConext.getAllOrders();\r\n              }}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"7px\",\r\n                right: \"7px\",\r\n                fontSize: \"26px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            />\r\n            <div className=\"order-edit-pop-container-left\">\r\n              <h3 style={{ padding: \"5px\" }}>Produktet e porosise</h3>\r\n              <div className=\"order-edit-pop-container-left-items\">\r\n                {orderEditDetails.map((order) => (\r\n                  <div className=\"order-edit-pop-container-left-items-item\">\r\n                    <CloseOutlinedIcon\r\n                      style={{\r\n                        color: \"red\",\r\n                        position: \"absolute\",\r\n                        top: \"5px\",\r\n                        right: \"5px\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => {\r\n                        axios\r\n                          .post(\r\n                            `https://amove.alcodeit.com/delete_product_from_order.php?order_id=${order.ID}&produkt_id=${order.produkt_id}`\r\n                          )\r\n                          .then((res) => {\r\n                            if (res.data.status === 1) {\r\n                              setEditOrderDetails(\r\n                                orderEditDetails.filter(\r\n                                  (orders) =>\r\n                                    orders.produktID !== order.produktID\r\n                                )\r\n                              );\r\n                              axios\r\n                                .get(\r\n                                  `https://amove.alcodeit.com/get_orderDetails.php?klient=${order.klientID}&order_id=${order.ID}`\r\n                                )\r\n                                .then((res) => {\r\n                                  setEditOrderDetails([]);\r\n                                  setEditOrderDetails(res.data);\r\n                                });\r\n                              // klientConext.getAllOrders();\r\n                              alertContext.setAlert(\r\n                                `${res.data.message}`,\r\n                                \"success\"\r\n                              );\r\n                            } else {\r\n                              alertContext.setAlert(\r\n                                `${res.data.message}`,\r\n                                \"error\"\r\n                              );\r\n                            }\r\n                          });\r\n                      }}\r\n                    />\r\n                    <div className=\"order-edit-pop-container-left-items-item-image\">\r\n                      <img\r\n                        src={`https://amove.alcodeit.com/images/${order.image}`}\r\n                        alt={order.titulli}\r\n                      />\r\n                    </div>\r\n                    <div className=\"order-edit-pop-container-left-items-item-titulli\">\r\n                      <h4>{order.titulli}</h4>\r\n                      <p>Cmimi fillestar: {order.cmimiProduktit} Leke</p>\r\n                      <div className=\"order-edit-pop-container-left-items-item-titulli-buttons\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          variant=\"contained\"\r\n                          disabled={order.qty === 1 ? true : false}\r\n                          onClick={() => {\r\n                            decreaseQty(order.produktID);\r\n                            klientConext.decreaseOrderQty(order);\r\n                          }}\r\n                        >\r\n                          -\r\n                        </Button>\r\n                        <span> {order.qty} </span>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          variant=\"contained\"\r\n                          onClick={() => {\r\n                            increaseQty(order.produktID);\r\n                            klientConext.increaseOrderQty(order);\r\n                          }}\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"order-edit-pop-container-left-items-item-totali\">\r\n                      <p>Totali: {order.cmimiProduktit * order.qty} Leke</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"order-edit-pop-container-left-totali\">\r\n                <p>Totali : {totaliPorosise} Leke </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"order-edit-pop-container-right\">\r\n              <h3>Produktet</h3>\r\n              <div className=\"order-edit-pop-container-right-items\">\r\n                {products.map((product) => (\r\n                  <div\r\n                    className=\"order-edit-pop-container-right-items-item\"\r\n                    style={{\r\n                      display: ordersIDProdukt.some(\r\n                        (order) => (order === product.id) === true\r\n                      )\r\n                        ? \"none\"\r\n                        : \"\",\r\n                    }}\r\n                  >\r\n                    <div className=\"order-edit-pop-container-right-items-item-image\">\r\n                      <img\r\n                        src={`https://amove.alcodeit.com/images/${product.image}`}\r\n                        alt={product.titulli}\r\n                      />\r\n                    </div>\r\n                    <div className=\"order-edit-pop-container-right-items-item-titulli\">\r\n                      <h3>{product.titulli}</h3>\r\n                      <p> {product.pershkrimi} </p>\r\n                    </div>\r\n                    <div className=\"order-edit-pop-container-right-items-item-cmimi\">\r\n                      <p>Cmimi {product.cmimi} Leke</p>\r\n                      <p>Stock: {product.sasia} </p>\r\n                    </div>\r\n                    <div className=\"order-edit-pop-container-right-items-item-button\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        disabled={disabledButton === product ? true : false}\r\n                        onClick={(e) => {\r\n                          setDisabledButton(product);\r\n                          setTimeout(() => setDisabledButton({}), 1000);\r\n                          axios\r\n                            .post(\r\n                              `https://amove.alcodeit.com/add_product_to_order.php`,\r\n                              {\r\n                                orderID: editOrderID,\r\n                                cmimi: product.cmimi,\r\n                                produktID: product.id,\r\n                              }\r\n                            )\r\n                            .then((res) => {\r\n                              if (res.data.status === 1) {\r\n                                axios\r\n                                  .get(\r\n                                    `https://amove.alcodeit.com/get_orderDetails.php?klient=${editOrderKlientID}&order_id=${editOrderID}`\r\n                                  )\r\n                                  .then((res) => {\r\n                                    setEditOrderDetails([]);\r\n                                    setEditOrderDetails(res.data);\r\n                                  });\r\n                                // klientConext.getAllProducts();\r\n                                // klientConext.getAllOrders();\r\n                              }\r\n                            });\r\n                        }}\r\n                      >\r\n                        Shto ne porosi\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {resetActiveOrder && (\r\n        <div className=\"order-resetActive-pop\">\r\n          <div\r\n            className=\"order-resetActive-pop-opa\"\r\n            onClick={() => {\r\n              setActiveOrder(false);\r\n            }}\r\n          ></div>\r\n          <div className=\"order-resetActive-pop-container\">\r\n            <CloseOutlinedIcon\r\n              onClick={() => {\r\n                setActiveOrder(false);\r\n              }}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"7px\",\r\n                right: \"7px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            />\r\n            <h3>Doni te beni porosine aktive?</h3>\r\n            <div className=\"order-resetActive-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(`https://amove.alcodeit.com/edit_order_status.php`, {\r\n                      orderID: resetOrderID,\r\n                      klientID: resetOrderKlientID,\r\n                    })\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        klientConext.getAllOrders();\r\n                        setResetKlientID(\"\");\r\n                        setResetOrderID(\"\");\r\n                        setActiveOrder(false);\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setResetKlientID(\"\");\r\n                  setResetOrderID(\"\");\r\n                  setActiveOrder(false);\r\n                }}\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {orderDeletePop && (\r\n        <div className=\"order-delete-pop\">\r\n          <div\r\n            className=\"order-delete-pop-opa\"\r\n            onClick={() => setOrderDeletePop(false)}\r\n          ></div>\r\n\r\n          <div className=\"order-delete-pop-container\">\r\n            <CloseOutlinedIcon\r\n              onClick={() => setOrderDeletePop(false)}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                position: \"absolute\",\r\n                right: \"7px\",\r\n                top: \"7px\",\r\n              }}\r\n            />\r\n            <p style={{ fontSize: \"20px\" }}>\r\n              Jeni te sigurt qe doni te anulloni porosine?\r\n            </p>\r\n            <div className=\"order-delete-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      `https://amove.alcodeit.com/cancel_order.php?order_id=${orderDeleteID}`\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        setOrderDeletePop(false);\r\n                        klientConext.getAllOrders();\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => setOrderDeletePop(false)}\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {orderDetails && (\r\n        <div className=\"order-details-pop\">\r\n          <div\r\n            className=\"order-details-pop-opa\"\r\n            onClick={() => {\r\n              showOrderDetails(false);\r\n              setOrderDetailsContent([]);\r\n            }}\r\n          ></div>\r\n          <div className=\"order-details-pop-content\">\r\n            {orderContentDetails.map((order) => (\r\n              <div className=\"order-details-pop-content-item\" key={order.ID}>\r\n                <div className=\"order-details-pop-content-item-image\">\r\n                  <img\r\n                    src={`https://amove.alcodeit.com/images/${order.image}`}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"order-details-pop-content-item-title\">\r\n                  <h2> {order.titulli} </h2>\r\n                  <p> {order.pershkrimi} </p>\r\n                </div>\r\n                <div className=\"order-details-pop-content-item-price\">\r\n                  <h3> {order.cmimiProduktit} Leke</h3>\r\n                  <p>Sasia: {order.qty} </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"klient-porosite\">\r\n        <div className=\"klient-porosite-header\">\r\n          <div className=\"klient-porosite-header-item\">\r\n            <div className=\"klient-porosite-header-item-left\">\r\n              <h3>Porosi Aktive</h3>\r\n              <p style={{ fontWeight: \"700\", fontSize: \"20px\" }}>\r\n                {\" \"}\r\n                {\r\n                  ordersSingleUser.filter((order) => order.status === 1).length\r\n                }{\" \"}\r\n              </p>\r\n            </div>\r\n            <div className=\"klient-porosite-header-item-right\">\r\n              <ShoppingBasketOutlinedIcon style={{ fontSize: \"50px\" }} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"klient-porosite-header-item\">\r\n            <div className=\"klient-porosite-header-item-left\">\r\n              <h3>Porosi te Anulluara</h3>\r\n              <p style={{ fontWeight: \"700\", fontSize: \"20px\" }}>\r\n                {ordersSingleUser.filter((order) => order.status === 3).length}\r\n              </p>\r\n            </div>\r\n            <div className=\"klient-porosite-header-item-right\">\r\n              <ShoppingBasketOutlinedIcon style={{ fontSize: \"50px\" }} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"klient-porosite-header-item\">\r\n            <div className=\"klient-porosite-header-item-left\">\r\n              <h3>Porosi ne Pritje</h3>\r\n              <p style={{ fontWeight: \"700\", fontSize: \"20px\" }}>\r\n                {ordersSingleUser.filter((order) => order.status === 2).length}\r\n              </p>\r\n            </div>\r\n            <div className=\"klient-porosite-header-item-right\">\r\n              <ShoppingBasketOutlinedIcon style={{ fontSize: \"50px\" }} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"klient-porosite-header-item\">\r\n            <div className=\"klient-porosite-header-item-left\">\r\n              <h3>Porosi te Perfunduara</h3>\r\n              <p style={{ fontWeight: \"700\", fontSize: \"20px\" }}>\r\n                {ordersSingleUser.filter((order) => order.status === 4).length}\r\n              </p>\r\n            </div>\r\n            <div className=\"klient-porosite-header-item-right\">\r\n              <ShoppingBasketOutlinedIcon style={{ fontSize: \"50px\" }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"klient-porosite-data-table\">\r\n          <div className=\"klient-porosite-data-table-header\">\r\n            <TextField\r\n              style={{ marginRight: \"30px\" }}\r\n              variant=\"outlined\"\r\n              placeholder=\"Kerko...\"\r\n              label=\"Kerko\"\r\n              size=\"small\"\r\n              type=\"search\"\r\n              onChange={(e) => setSearchFilter(e.target.value)}\r\n            />\r\n            <Link\r\n              to=\"/klient/shporta\"\r\n              style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n            >\r\n              <Button\r\n                startIcon={<AddShoppingCartOutlinedIcon />}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                {\" \"}\r\n                Shto Porosi{\" \"}\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n\r\n          {filteredOrders.length === 0 ? (\r\n            <div\r\n              className=\"klient-produkte-search-notfound\"\r\n              style={{ justifyContent: \"center\" }}\r\n            >\r\n              <img src=\"/search_notfound.gif\" alt=\"\" />\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <h3>Nuk u gjet asnje porosi nga kerkimi😥</h3>\r\n                <p style={{ fontSize: \"17px\" }}>Provoni perseri!</p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => requestSort(\"ID\")}\r\n                  >\r\n                    ID\r\n                    {propertyName.key === \"ID\" &&\r\n                      propertyName.direction === \"ascending\" && (\r\n                        <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                      )}\r\n                    {propertyName.key === \"ID\" &&\r\n                      propertyName.direction === \"descending\" && (\r\n                        <ArrowDownwardOutlinedIcon\r\n                          style={{ fontSize: \"17px\" }}\r\n                        />\r\n                      )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => requestSort(\"orderDate\")}\r\n                    align=\"left\"\r\n                  >\r\n                    Data\r\n                    {propertyName.key === \"orderDate\" &&\r\n                      propertyName.direction === \"ascending\" && (\r\n                        <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                      )}\r\n                    {propertyName.key === \"orderDate\" &&\r\n                      propertyName.direction === \"descending\" && (\r\n                        <ArrowDownwardOutlinedIcon\r\n                          style={{ fontSize: \"17px\" }}\r\n                        />\r\n                      )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => requestSort(\"status\")}\r\n                    align=\"left\"\r\n                  >\r\n                    Status\r\n                    {propertyName.key === \"status\" &&\r\n                      propertyName.direction === \"ascending\" && (\r\n                        <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                      )}\r\n                    {propertyName.key === \"status\" &&\r\n                      propertyName.direction === \"descending\" && (\r\n                        <ArrowDownwardOutlinedIcon\r\n                          style={{ fontSize: \"17px\" }}\r\n                        />\r\n                      )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => requestSort(\"totali\")}\r\n                    align=\"left\"\r\n                  >\r\n                    Totali\r\n                    {propertyName.key === \"totali\" &&\r\n                      propertyName.direction === \"ascending\" && (\r\n                        <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                      )}\r\n                    {propertyName.key === \"totali\" &&\r\n                      propertyName.direction === \"descending\" && (\r\n                        <ArrowDownwardOutlinedIcon\r\n                          style={{ fontSize: \"17px\" }}\r\n                        />\r\n                      )}\r\n                  </TableCell>\r\n                  <TableCell style={{ cursor: \"pointer\" }} align=\"center\">\r\n                    Veprimet\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {filteredOrders.slice(start, end).map((order) => (\r\n                  <TableRow>\r\n                    <TableCell> {order.ID} </TableCell>\r\n                    <TableCell> {order.orderDate} </TableCell>\r\n                    <TableCell>\r\n                      <p className=\"status-text\">\r\n                        {\" \"}\r\n                        <span\r\n                          className=\"status-pulse\"\r\n                          style={{\r\n                            backgroundColor: renderButtonColorsStatus(\r\n                              order.status\r\n                            ),\r\n                          }}\r\n                        ></span>{\" \"}\r\n                        {renderButtonStatus(order.status)}{\" \"}\r\n                      </p>\r\n                    </TableCell>\r\n                    <TableCell> {order.totali} Leke </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <div className=\"veprime\" style={{ cursor: \"pointer\" }}>\r\n                        <VisibilityOutlinedIcon\r\n                          onClick={() => {\r\n                            showOrderDetails(true);\r\n                            axios\r\n                              .get(\r\n                                `https://amove.alcodeit.com/get_orderDetails.php?klient=${order.klientID}&order_id=${order.ID}`\r\n                              )\r\n                              .then((res) => setOrderDetailsContent(res.data));\r\n                          }}\r\n                        />\r\n                        {order.status === 3 ? (\r\n                          <EditOutlinedIcon\r\n                            onClick={() => {\r\n                              setActiveOrder(true);\r\n                              setResetOrderID(order.ID);\r\n                              setResetKlientID(order.klientID);\r\n                            }}\r\n                            style={{\r\n                              display:\r\n                                order.status === 2 || order.status === 4\r\n                                  ? \"none\"\r\n                                  : \"\",\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <EditOutlinedIcon\r\n                            onClick={() => {\r\n                              setEditOrderID(order.ID);\r\n                              setEditOrderKlientID(order.klientID);\r\n                              setOrderEditPop(true);\r\n                              axios\r\n                                .get(\r\n                                  `https://amove.alcodeit.com/get_orderDetails.php?klient=${order.klientID}&order_id=${order.ID}`\r\n                                )\r\n                                .then((res) => setEditOrderDetails(res.data));\r\n                            }}\r\n                            style={{\r\n                              display:\r\n                                order.status === 2 || order.status === 4\r\n                                  ? \"none\"\r\n                                  : \"\",\r\n                            }}\r\n                          />\r\n                        )}\r\n\r\n                        <DeleteOutlineOutlinedIcon\r\n                          style={{\r\n                            display:\r\n                              order.status === 3 ||\r\n                              order.status === 2 ||\r\n                              order.status === 4\r\n                                ? \"none\"\r\n                                : \"\",\r\n                          }}\r\n                          onClick={() => {\r\n                            setOrderDeletePop(true);\r\n                            setOrderDeleteID(order.ID);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n\r\n          <div\r\n            className=\"pagination\"\r\n            style={{ display: filteredOrders.length === 0 ? \"none\" : \"\" }}\r\n          >\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n                Porosi ne faqe\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"row\"\r\n                onChange={(e) => setItempage(e.target.value)}\r\n                value={itemPage}\r\n              >\r\n                <MenuItem value={5}>5</MenuItem>\r\n                <MenuItem value={8}>8</MenuItem>\r\n                <MenuItem value={10}>10</MenuItem>\r\n                <MenuItem value={15}>15</MenuItem>\r\n                <MenuItem value={20}>20</MenuItem>\r\n              </Select>\r\n            </div>\r\n            <Pagination\r\n              count={Math.ceil(ordersSingleUser.length / itemPage)}\r\n              color=\"primary\"\r\n              page={page}\r\n              size=\"large\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Header.jsx",["244"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport ArrowDropUpOutlinedIcon from \"@material-ui/icons/ArrowDropUpOutlined\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport KlientContext from \"../../../context/klientContext/KlientContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport CollapseContext from \"../../../context/collpaseContext/CollpaseContext\";\r\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\r\n\r\nexport default function Header({ name, userImg, handleLogout }) {\r\n  const [logout, Setlogout] = useState(false);\r\n  const [showProducts, setShowProducts] = useState(false);\r\n  const [showWishlist, setShowWishlist] = useState(false);\r\n  const klientContext = useContext(KlientContext);\r\n  const cartProducts = klientContext.cartProducts;\r\n  const wishlistProducts = klientContext.wishlistProducts;\r\n  const collpaseContext = useContext(CollapseContext);\r\n  const { value } = collpaseContext;\r\n\r\n  useEffect(() => {\r\n    klientContext.getCartProducts();\r\n    klientContext.getWishlistProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        value === true\r\n          ? \"klient-dashboard-header klient-dashboard-header-collapse\"\r\n          : \"klient-dashboard-header\"\r\n      }\r\n    >\r\n      {!value && (\r\n        <IconButton onClick={collpaseContext.setTrue}>\r\n          <ArrowBackIosOutlinedIcon />\r\n        </IconButton>\r\n      )}\r\n      {value && (\r\n        <IconButton onClick={collpaseContext.setFalse}>\r\n          <ArrowForwardIosOutlinedIcon />\r\n        </IconButton>\r\n      )}\r\n\r\n      <div className=\"klient-dashboard-header-widgets-klient\">\r\n        <Badge badgeContent={wishlistProducts.length} color=\"primary\">\r\n          <StarBorderOutlinedIcon\r\n            onClick={() => {\r\n              setShowWishlist(!showWishlist);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </Badge>\r\n\r\n        <Badge badgeContent={cartProducts.length} color=\"primary\">\r\n          <ShoppingCartOutlinedIcon\r\n            onClick={() => {\r\n              setShowProducts(!showProducts);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </Badge>\r\n\r\n        <Badge badgeContent={2} color=\"primary\">\r\n          <NotificationsNoneOutlinedIcon />\r\n        </Badge>\r\n        <Avatar\r\n          className=\"logo-user-loggedin\"\r\n          src={`https://amove.alcodeit.com/images/${userImg}`}\r\n          alt=\"LogoUser\"\r\n        />\r\n        <ClickAwayListener onClickAway={() => Setlogout(false)}>\r\n          <p onClick={() => Setlogout(!logout)} style={{ cursor: \"pointer\" }}>\r\n            {name}\r\n          </p>\r\n        </ClickAwayListener>\r\n        {!logout && (\r\n          <ClickAwayListener onClickAway={() => Setlogout(false)}>\r\n            <ArrowDropDownOutlinedIcon\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => Setlogout(!logout)}\r\n            />\r\n          </ClickAwayListener>\r\n        )}\r\n        {logout && (\r\n          <ClickAwayListener onClickAway={() => Setlogout(false)}>\r\n            <ArrowDropUpOutlinedIcon\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => Setlogout(!logout)}\r\n            />\r\n          </ClickAwayListener>\r\n        )}\r\n      </div>\r\n      <div className={!logout ? \"hover-logout\" : \"hover-logout display-block\"}>\r\n        <p onClick={handleLogout}>\r\n          {\" \"}\r\n          <PowerSettingsNewIcon onClick={handleLogout} />\r\n          Logout\r\n        </p>\r\n      </div>\r\n\r\n      {showProducts === true && (\r\n        <ClickAwayListener onClickAway={() => setShowProducts(false)}>\r\n          <div className=\"header-cart-products\">\r\n            {cartProducts.length > 0 ? (\r\n              <>\r\n                <div className=\"header-cart-products-length\">\r\n                  <h2> {cartProducts.length} items </h2>\r\n                  <p>In your cart</p>\r\n                </div>\r\n                <div className=\"header-cart-products-content\">\r\n                  {cartProducts.map((item) => (\r\n                    <div\r\n                      className=\"header-cart-products-content-item\"\r\n                      key={item.id}\r\n                    >\r\n                      <div className=\"header-cart-products-content-item-image\">\r\n                        <img\r\n                          src={`https://amove.alcodeit.com/images/${item.image}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"header-cart-products-content-item-title-remove\">\r\n                        <h4 style={{ fontSize: \"15px\" }}> {item.titulli} </h4>\r\n                        <p style={{ fontSize: \"12px\" }}>{item.pershkrimi} </p>\r\n                        <CloseOutlinedIcon\r\n                          style={{\r\n                            fontSize: \"16px\",\r\n                            color: \"red\",\r\n                            alignSelf: \"flex-end\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            klientContext.removeFromCart(item);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"header-cart-products-shporta\">\r\n                  <Link\r\n                    to=\"/klient/shporta\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      color: \"inherit\",\r\n                      textDecoration: \"none\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      style={{ width: \"100%\" }}\r\n                      startIcon={<ShoppingCartOutlinedIcon />}\r\n                    >\r\n                      Shporta\r\n                    </Button>{\" \"}\r\n                  </Link>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"header-cart-empty\">\r\n                <h4>Shporta eshte bosh</h4>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </ClickAwayListener>\r\n      )}\r\n\r\n      {showWishlist === true && (\r\n        <ClickAwayListener onClickAway={() => setShowWishlist(false)}>\r\n          <div className=\"header-cart-products\">\r\n            {wishlistProducts.length > 0 ? (\r\n              <>\r\n                <div className=\"header-cart-products-length\">\r\n                  <h2> {wishlistProducts.length} items</h2>\r\n                  <p>In your wishlist</p>\r\n                </div>\r\n                <div className=\"header-cart-products-content\">\r\n                  {wishlistProducts.map((item) => (\r\n                    <div\r\n                      className=\"header-cart-products-content-item\"\r\n                      key={item.id}\r\n                    >\r\n                      <div className=\"header-cart-products-content-item-image\">\r\n                        <img\r\n                          src={`https://amove.alcodeit.com/images/${item.image}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"header-cart-products-content-item-title-remove\">\r\n                        <h4 style={{ fontSize: \"15px\" }}> {item.titulli} </h4>\r\n                        <p style={{ fontSize: \"12px\" }}>{item.pershkrimi} </p>\r\n                        <CloseOutlinedIcon\r\n                          style={{\r\n                            fontSize: \"16px\",\r\n                            color: \"red\",\r\n                            alignSelf: \"flex-end\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            klientContext.removeFromWishlist(item);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"header-cart-products-shporta\">\r\n                  <Link\r\n                    to=\"/klient/wishlist\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      color: \"inherit\",\r\n                      textDecoration: \"none\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      style={{ width: \"100%\" }}\r\n                      startIcon={<StarBorderOutlinedIcon />}\r\n                    >\r\n                      Wishlist\r\n                    </Button>{\" \"}\r\n                  </Link>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"header-cart-empty\">\r\n                <h4>Wishlist eshte bosh</h4>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </ClickAwayListener>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Sidebar.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Shporta.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Home.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Produktet.jsx",["245","246"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport BorderAllOutlinedIcon from \"@material-ui/icons/BorderAllOutlined\";\r\nimport ListOutlinedIcon from \"@material-ui/icons/ListOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\r\nimport LocalMallOutlinedIcon from \"@material-ui/icons/LocalMallOutlined\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KlientContext from \"../../../context/klientContext/KlientContext\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nexport default function Produktet() {\r\n  const klientContext = useContext(KlientContext);\r\n  const {\r\n    cartProducts,\r\n    wishlistProducts,\r\n    produktCategories,\r\n    products,\r\n  } = klientContext;\r\n  const [range, setRange] = useState(\"all\");\r\n  const [produktMenuLayout, setProduktMenuLayout] = useState(\"horizontal\");\r\n  const [kategori, setKategori] = useState(\"\");\r\n  const [priceSort, setPriceSort] = useState(\"\");\r\n  const [searchFilter, setSearchFilter] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [itemPage, setItempage] = useState(6);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [disabledButton, setDisabledButton] = useState({});\r\n  const [filterByCategory, setFilterByCategory] = useState(\"\");\r\n  const [propertyName, setProperty] = useState(null);\r\n  const cmimet = products.map((produkt) => produkt.cmimi);\r\n  const highPrice = Math.max(...cmimet);\r\n  const lowPirce = Math.min(...cmimet);\r\n  const [sliderPrice, setSliderPrice] = useState([lowPirce, highPrice]);\r\n  const [priceType, setPriceType] = useState(\"all\");\r\n\r\n  const filterByPrice = products.filter((produkt) => {\r\n    if (priceType === \"slider\") {\r\n      return produkt.cmimi >= sliderPrice[0] && produkt.cmimi <= sliderPrice[1];\r\n    } else if (priceType === \"range\") {\r\n      if (range === \"all\") {\r\n        return produkt;\r\n      } else if (range === \"10\") {\r\n        return produkt.cmimi <= 10;\r\n      } else if (range === \"100\") {\r\n        return produkt.cmimi >= 10 && produkt.cmimi <= 100;\r\n      } else if (range === \"500\") {\r\n        return produkt.cmimi === 500;\r\n      } else if (range === \"600\") {\r\n        return produkt.cmimi >= 500;\r\n      }\r\n    } else {\r\n      return produkt;\r\n    }\r\n  });\r\n\r\n  const productFilterByOther = filterByPrice.filter((produkt) => {\r\n    if (!filterByCategory || 0 === filterByCategory.length) {\r\n      return produkt;\r\n    } else {\r\n      return produkt.kategoria\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(filterByCategory.toLowerCase());\r\n    }\r\n  });\r\n\r\n  const productFilter = productFilterByOther.filter(\r\n    (product) =>\r\n      product.titulli\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(searchFilter.toLowerCase()) ||\r\n      product.cmimi\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(searchFilter.toLowerCase())\r\n  );\r\n\r\n  useEffect(() => {\r\n    klientContext.getAllProducts();\r\n    klientContext.getCategoryProducts();\r\n  }, []);\r\n\r\n  const handleChange2 = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setSliderPrice(newValue);\r\n    setRange(\"all\");\r\n    setPriceType(\"slider\");\r\n  };\r\n  function valuetext(sliderPrice) {\r\n    return `${sliderPrice}$`;\r\n  }\r\n  const removeFilter = () => {\r\n    setSliderPrice([lowPirce, highPrice]);\r\n    setRange(\"all\");\r\n    setKategori(\"\");\r\n    setFilterByCategory(\"\");\r\n  };\r\n\r\n  if (propertyName !== null) {\r\n    productFilter.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n  }\r\n  const requestSort = (value) => {\r\n    let direction;\r\n\r\n    if (value === \"high\") {\r\n      direction = \"descending\";\r\n    } else {\r\n      direction = \"ascending\";\r\n    }\r\n    setProperty({ key: \"cmimi\", direction });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"filter-produkte\">\r\n        <div className=\"filter\">\r\n          <div className=\"filter-content\">\r\n            <div className=\"filter-content-multi-range\">\r\n              <h3>Multi Range</h3>\r\n              <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                  onChange={(e) => {\r\n                    setRange(e.target.value);\r\n                    setPriceType(\"range\");\r\n                  }}\r\n                  value={range}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"all\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"All\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value={\"10\"}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"<=$10\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value={\"100\"}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"$10-$100\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value={\"500\"}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"$500\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value={\"600\"}\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\">=$500\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"filter-content-price-slider\">\r\n              <h3>Price Slider</h3>\r\n              <Slider\r\n                value={sliderPrice}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                style={{ width: \"90%\", alignSelf: \"center\" }}\r\n                getAriaValueText={valuetext}\r\n                max={highPrice}\r\n              />\r\n            </div>\r\n            <div className=\"filter-content-category\">\r\n              <h3>Category</h3>\r\n              <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                  onChange={(e) => {\r\n                    setKategori(e.target.value);\r\n                    setFilterByCategory(e.target.value);\r\n                  }}\r\n                  value={kategori}\r\n                >\r\n                  {produktCategories.map((cat) => (\r\n                    <FormControlLabel\r\n                      value={cat.name}\r\n                      control={<Radio color=\"primary\" />}\r\n                      label={cat.name}\r\n                    />\r\n                  ))}\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </div>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ marginTop: \"10px\" }}\r\n              color=\"primary\"\r\n              onClick={removeFilter}\r\n            >\r\n              Remove Filters\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"produkte\">\r\n          <div className=\"produkte-featured\">\r\n            <FormControl\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"50%\", backgroundColor: \"white\" }}\r\n            >\r\n              <InputLabel>Featured</InputLabel>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setPriceSort(e.target.value);\r\n                  requestSort(e.target.value);\r\n                }}\r\n                value={priceSort}\r\n              >\r\n                <MenuItem value=\"low\">Lowest Price</MenuItem>\r\n                <MenuItem value=\"high\">Highest Price</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <div\r\n              className=\"katror\"\r\n              onClick={() => setProduktMenuLayout(\"horizontal\")}\r\n            >\r\n              <BorderAllOutlinedIcon\r\n                style={{\r\n                  fontSize: \"21px\",\r\n                  color:\r\n                    produktMenuLayout === \"horizontal\" ? \"#1b75bc\" : \"black\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"drejtkendesh\"\r\n              onClick={() => setProduktMenuLayout(\"vertical\")}\r\n            >\r\n              <ListOutlinedIcon\r\n                style={{\r\n                  fontSize: \"25px\",\r\n                  color: produktMenuLayout === \"vertical\" ? \"#1b75bc\" : \"black\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"produkte-search\">\r\n            <TextField\r\n              label=\"Kerko\"\r\n              style={{ width: \"98%\", backgroundColor: \"white\" }}\r\n              placeholder=\"Kerko...\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onChange={(e) => {\r\n                setSearchFilter(e.target.value);\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <SearchOutlinedIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {produktMenuLayout === \"vertical\" && (\r\n            <div className=\"produktet-list-vertical\">\r\n              {productFilter.length === 0 ? (\r\n                <div className=\"klient-produkte-search-notfound\">\r\n                  <img src=\"/search_notfound.gif\" alt=\"\" />\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      flexDirection: \"column\",\r\n                    }}\r\n                  >\r\n                    <h3>Nuk u gjet asnje produkt nga kerkimi😥</h3>\r\n\r\n                    <p style={{ fontSize: \"17px\" }}>Provoni perseri!</p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <>\r\n                  {productFilter.slice(start, end).map((product) => (\r\n                    <div className=\"produktet-list-vertical-item\">\r\n                      <div className=\"produktet-list-vertical-item-image\">\r\n                        <img\r\n                          src={`https://amove.alcodeit.com/images/${product.image}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"produktet-list-vertical-item-titulli\">\r\n                        <h3 style={{ marginBottom: \"20px\" }}>\r\n                          {\" \"}\r\n                          {product.titulli}{\" \"}\r\n                        </h3>\r\n                        <p>{product.pershkrimi}</p>\r\n                      </div>\r\n                      <div className=\"produktet-list-vertical-item-buttons\">\r\n                        <p style={{ color: \"#1b75bc\", fontWeight: \"600\" }}>\r\n                          {\" \"}\r\n                          {product.cmimi} Leke\r\n                        </p>\r\n                        {cartProducts.some(\r\n                          (item) => item.product_id === product.id\r\n                        ) === true ? (\r\n                          <Button\r\n                            startIcon={<LocalMallOutlinedIcon />}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            style={{ width: \"80%\" }}\r\n                          >\r\n                            <Link\r\n                              to=\"/klient/shporta\"\r\n                              style={{\r\n                                color: \"inherit\",\r\n                                textDecoration: \"none\",\r\n                              }}\r\n                            >\r\n                              View in Cart\r\n                            </Link>\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            startIcon={<LocalMallOutlinedIcon />}\r\n                            disabled={\r\n                              product.sasia === 0 || product === disabledButton\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            color=\"primary\"\r\n                            style={{ width: \"80%\" }}\r\n                            onClick={() => {\r\n                              klientContext.addToCart(product);\r\n                              setDisabledButton(product);\r\n                              setTimeout(() => setDisabledButton({}), 1500);\r\n                            }}\r\n                          >\r\n                            Add to Cart\r\n                          </Button>\r\n                        )}\r\n                        {wishlistProducts.some(\r\n                          (item) => item.product_id === product.id\r\n                        ) ? (\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            startIcon={<FavoriteIcon />}\r\n                            color=\"secondary\"\r\n                            style={{ width: \"80%\" }}\r\n                            onClick={() =>\r\n                              klientContext.removeFromWishlist(product)\r\n                            }\r\n                          >\r\n                            Wish List\r\n                          </Button>\r\n                        ) : (\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            startIcon={<FavoriteBorderOutlinedIcon />}\r\n                            color=\"secondary\"\r\n                            style={{ width: \"80%\" }}\r\n                            onClick={() => klientContext.addToWishlist(product)}\r\n                          >\r\n                            Wish List\r\n                          </Button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {produktMenuLayout === \"horizontal\" && (\r\n            <div className=\"produktet-list\">\r\n              <>\r\n                {productFilter.length === 0 ? (\r\n                  <div className=\"klient-produkte-search-notfound\">\r\n                    <img src=\"/search_notfound.gif\" alt=\"\" />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        flexDirection: \"column\",\r\n                      }}\r\n                    >\r\n                      <h3>Nuk u gjet asnje produkt nga kerkimi😥</h3>\r\n                      <p style={{ fontSize: \"17px\" }}>Provoni perseri!</p>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    {productFilter.slice(start, end).map((product) => (\r\n                      <div className=\"produktet-list-item\" key={product.id}>\r\n                        <div className=\"produkte-header-item-image\">\r\n                          <Link to={`/klient/${product.id}`}>\r\n                            <img\r\n                              src={`https://amove.alcodeit.com/images/${product.image}`}\r\n                              alt=\"\"\r\n                            />\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div className=\"produktet-list-item-price\">\r\n                          <p> {product.cmimi} Leke </p>\r\n                        </div>\r\n                        <div className=\"produkte-header-item-title-description\">\r\n                          <h4> {product.titulli} </h4>\r\n                          <p> {product.pershkrimi} </p>\r\n                        </div>\r\n\r\n                        <div className=\"produkte-header-item-wish-cart\">\r\n                          {cartProducts.some(\r\n                            (item) => item.product_id === product.id\r\n                          ) === true ? (\r\n                            <Button\r\n                              startIcon={<LocalMallOutlinedIcon />}\r\n                              color=\"primary\"\r\n                              style={{ width: \"50%\" }}\r\n                            >\r\n                              <Link\r\n                                to=\"/klient/shporta\"\r\n                                style={{\r\n                                  color: \"inherit\",\r\n                                  textDecoration: \"none\",\r\n                                }}\r\n                              >\r\n                                View in Cart\r\n                              </Link>\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              startIcon={<LocalMallOutlinedIcon />}\r\n                              disabled={\r\n                                product.sasia === 0 ||\r\n                                product === disabledButton\r\n                                  ? true\r\n                                  : false\r\n                              }\r\n                              color=\"primary\"\r\n                              style={{ width: \"50%\" }}\r\n                              onClick={() => {\r\n                                klientContext.addToCart(product);\r\n                                setDisabledButton(product);\r\n                                setTimeout(() => setDisabledButton({}), 1500);\r\n                              }}\r\n                            >\r\n                              Add to Cart\r\n                            </Button>\r\n                          )}\r\n\r\n                          {wishlistProducts.some(\r\n                            (item) => item.product_id === product.id\r\n                          ) ? (\r\n                            <Button\r\n                              startIcon={<FavoriteIcon />}\r\n                              color=\"secondary\"\r\n                              style={{ width: \"50%\" }}\r\n                              onClick={() =>\r\n                                klientContext.removeFromWishlist(product)\r\n                              }\r\n                            >\r\n                              Wish List\r\n                            </Button>\r\n                          ) : (\r\n                            <Button\r\n                              startIcon={<FavoriteBorderOutlinedIcon />}\r\n                              color=\"secondary\"\r\n                              style={{ width: \"50%\" }}\r\n                              onClick={() =>\r\n                                klientContext.addToWishlist(product)\r\n                              }\r\n                            >\r\n                              Wish List\r\n                            </Button>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </>\r\n            </div>\r\n          )}\r\n          <div\r\n            className=\"produkte-pagination\"\r\n            style={{\r\n              display: productFilter.length === 0 ? \"none\" : \"flex\",\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n                Produkte ne faqe\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"row\"\r\n                onChange={(e) => setItempage(e.target.value)}\r\n                value={itemPage}\r\n              >\r\n                <MenuItem value={4}>4</MenuItem>\r\n                <MenuItem value={6}>6</MenuItem>\r\n                <MenuItem value={12}>12</MenuItem>\r\n                <MenuItem value={18}>18</MenuItem>\r\n                <MenuItem value={24}>24</MenuItem>\r\n                <MenuItem value={30}>30</MenuItem>\r\n              </Select>\r\n            </div>\r\n            <Pagination\r\n              count={Math.ceil(productFilter.length / itemPage)}\r\n              color=\"primary\"\r\n              page={page}\r\n              size=\"large\"\r\n              onChange={handleChange2}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Wishlist.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\SingleProduct.jsx",["247"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowBackOutlinedIcon from \"@material-ui/icons/ArrowBackOutlined\";\r\nimport KlientContext from \"../../../context/klientContext/KlientContext\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\n\r\nexport default function SingleProduct({ match }) {\r\n  const [products, setProducts] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://amove.alcodeit.com/get_allProducts.php\")\r\n      .then((res) => setProducts(res.data));\r\n  }, []);\r\n\r\n  const produkt = products.filter((produkt) => produkt.id == match.params.id);\r\n  const klientContext = useContext(KlientContext);\r\n  const { cartProducts, wishlistProducts } = klientContext;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"shko-te-produktet\">\r\n        <Link\r\n          style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n          to=\"/klient/produktet\"\r\n        >\r\n          <Button\r\n            startIcon={<ArrowBackOutlinedIcon />}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            style={{ backgroundColor: \"white\" }}\r\n          >\r\n            Shko te produktet\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      {produkt.map((single) => (\r\n        <div key={single.id} className=\"single-product\">\r\n          <div className=\"single-product-left\">\r\n            <img\r\n              src={`https://amove.alcodeit.com/images/${single.image}`}\r\n              alt={single.titulli}\r\n            />\r\n          </div>\r\n          <div className=\"single-product-right\">\r\n            <div className=\"single-product-right-title-price\">\r\n              <p className=\"single-product-right-title\">{single.titulli}</p>\r\n              <p className=\"single-product-right-price\">{single.cmimi} Leke</p>\r\n            </div>\r\n            <div className=\"single-product-right-description-sku\">\r\n              <p className=\"single-product-right-description\">\r\n                {single.pershkrimi}\r\n              </p>\r\n              <p className=\"single-product-right-sku\">SKU: {single.sku} </p>\r\n            </div>\r\n            <div className=\"single-product-right-stock-addcart\">\r\n              <p className=\"single-product-right-stock\">\r\n                Available - {single.sasia > 0 ? \"Ka stock\" : \"Nuk ka stock\"}{\" \"}\r\n              </p>\r\n              <div className=\"buttons-wish-cart\">\r\n                {cartProducts.some((item) => item.product_id === single.id) ===\r\n                true ? (\r\n                  <Button\r\n                    startIcon={<ShoppingCartOutlinedIcon />}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    <Link\r\n                      to=\"/klient/shporta\"\r\n                      style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n                    >\r\n                      View in Cart\r\n                    </Link>\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    size=\"large\"\r\n                    startIcon={<ShoppingCartOutlinedIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      klientContext.addToCart(single);\r\n                    }}\r\n                  >\r\n                    Add to Cart\r\n                  </Button>\r\n                )}\r\n\r\n                {wishlistProducts.some(\r\n                  (item) => item.product_id === single.id\r\n                ) === true ? (\r\n                  <Button\r\n                    size=\"large\"\r\n                    startIcon={<StarIcon />}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={() => klientContext.removeFromWishlist(single)}\r\n                  >\r\n                    Add to Wishlist\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    size=\"large\"\r\n                    startIcon={<StarBorderOutlinedIcon />}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={() => klientContext.addToWishlist(single)}\r\n                  >\r\n                    Add to Wishlist\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Header.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Home.jsx",["248"],"import React, { useContext, useEffect } from \"react\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\r\nimport LocalMallOutlinedIcon from \"@material-ui/icons/LocalMallOutlined\";\r\n\r\nexport default function Home() {\r\n  const depoContext = useContext(DepoContext);\r\n  const { klientet, porosite } = depoContext;\r\n\r\n  useEffect(() => {\r\n    depoContext.getAllClients();\r\n    depoContext.getAllOrders();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"home\">\r\n        <div className=\"home-header\">\r\n          <div className=\"home-header-item\">\r\n            <div className=\"home-header-item-left\">\r\n              <p>Porosi Gjithsej</p>\r\n              <h2>{porosite.length}</h2>\r\n            </div>\r\n            <div className=\"home-header-item-right\">\r\n              <LocalMallOutlinedIcon style={{ fontSize: \"45px\" }} />\r\n            </div>\r\n          </div>\r\n          <div className=\"home-header-item\">\r\n            <div className=\"home-header-item-left\">\r\n              <p>Porosi ne pritje</p>\r\n              <h2>\r\n                {porosite.filter((order) => order.order_status === 2).length}\r\n              </h2>\r\n            </div>\r\n            <div className=\"home-header-item-right\">\r\n              <LocalMallOutlinedIcon style={{ fontSize: \"45px\" }} />\r\n            </div>\r\n          </div>\r\n          <div className=\"home-header-item\">\r\n            <div className=\"home-header-item-left\">\r\n              <p>Klientet</p>\r\n              <h2>{klientet.length}</h2>\r\n            </div>\r\n            <div className=\"home-header-item-right\">\r\n              <PeopleAltOutlinedIcon style={{ fontSize: \"45px\" }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Oferta.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Klient.jsx",["249"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport CategoryOutlinedIcon from '@material-ui/icons/CategoryOutlined';\r\nimport ExploreOutlinedIcon from '@material-ui/icons/ExploreOutlined';\r\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\r\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\r\nimport ShtoKlientPopup from './ShtoKlientPopup';\r\nimport DepoContext from '../../../context/depoContext/DepoContext';\r\nimport { CloseOutlined } from '@material-ui/icons';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ArrowUpwardOutlinedIcon from '@material-ui/icons/ArrowUpwardOutlined';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport AlertContext from '../../../context/alertContext/AlertContext';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Input from '@material-ui/core/Input';\r\nimport axios from 'axios';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nexport default function Klient() {\r\n  const [deletedID, setDeletedID] = useState('');\r\n  const [deletePop, setDeletePop] = useState(false);\r\n  const [editID, setEditID] = useState('');\r\n  const [editEmri, setEditEmri] = useState('');\r\n  const [editEmail, setEditEmail] = useState('');\r\n  const [editPassword, setEditPassword] = useState('');\r\n  const [editStatus, setEditStatus] = useState('');\r\n  const [editZona, setEditZona] = useState('');\r\n  const [editKategoria, setEditKategoria] = useState('');\r\n  const [editFile, setEditFile] = useState('');\r\n  const [editImage, setEditImage] = useState('');\r\n  const [deletedImage, setDeletedImage] = useState(false);\r\n  const [userEditPop, setUserEditPop] = useState(false);\r\n  const [userPopup, shotUserPopup] = useState(false);\r\n  const alertContext = useContext(AlertContext);\r\n  const [kategori, Setkategori] = useState('');\r\n  const [zona, Setzona] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [itemPage, setItempage] = useState(5);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const depoContext = useContext(DepoContext);\r\n  const { klientet, categoryClients, zonaClients } = depoContext;\r\n  const [userDetails, setUserDetails] = useState({});\r\n  const [userDetailsPop, showUserDetailsPop] = useState(false);\r\n  const [propertyName, setProperty] = useState({\r\n    key: 'id',\r\n    direction: 'descending'\r\n  });\r\n  const [searchFilter, setSearchFilter] = useState('');\r\n\r\n  const filterByOther = klientet.filter((klient) => {\r\n    if (zona === '' && kategori === '') {\r\n      return klient;\r\n    }\r\n\r\n    return klient.zona === zona || klient.kategoria === kategori;\r\n  });\r\n\r\n  const klientetFiltered = filterByOther.filter(\r\n    (order) =>\r\n      order.id.toString().toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.name.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.email.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.zona.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.kategoria.toLowerCase().includes(searchFilter.toLowerCase())\r\n  );\r\n\r\n  const onEditUser = (e) => {\r\n    e.preventDefault();\r\n\r\n    let fd = new FormData();\r\n    fd.append('name', editEmri);\r\n    fd.append('email', editEmail);\r\n    fd.append('password', editPassword);\r\n    fd.append('zona', editZona);\r\n    fd.append('kategoria', editKategoria);\r\n    fd.append('image', editImage);\r\n    fd.append('status', editStatus);\r\n\r\n    axios\r\n      .post(`https://amove.alcodeit.com/edit_user.php?user_id=${editID}`, fd)\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          alertContext.setAlert(`${res.data.message}`, 'error');\r\n        } else if (res.data.status === 1) {\r\n          alertContext.setAlert(`${res.data.message}`, 'success');\r\n          depoContext.getAllClients();\r\n          setUserEditPop(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    depoContext.getAllClients();\r\n    depoContext.getCategoryClients();\r\n    depoContext.getZonaClients();\r\n  }, []);\r\n\r\n  if (propertyName !== null) {\r\n    klientetFiltered.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === 'ascending' ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === 'ascending' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const renderButtonStatus = (status) => {\r\n    if (status === 1) {\r\n      return 'Aktive';\r\n    } else if (status === 0) {\r\n      return 'Joaktive';\r\n    }\r\n  };\r\n\r\n  const renderButtonColorsStatus = (status) => {\r\n    if (status === 1) {\r\n      return '#73C850';\r\n    } else if (status === 0) {\r\n      return '#FF0000';\r\n    }\r\n  };\r\n  const requestSort = (key) => {\r\n    let direction = 'ascending';\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === 'ascending'\r\n    ) {\r\n      direction = 'descending';\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      {deletePop && (\r\n        <div className=\"user-delete-pop\">\r\n          <div\r\n            className=\"user-delete-pop-opa\"\r\n            onClick={() => {\r\n              alertContext.setAlert('Klienti nuk u fshi', 'info');\r\n              setDeletePop(false);\r\n            }}\r\n          ></div>\r\n          <div className=\"user-delete-pop-container\">\r\n            <h3>Jeni te sigurt qe doni te fshini klientin?</h3>\r\n            <div className=\"user-delete-pop-buttons\">\r\n              <ButtonGroup size=\"large\" disableElevation variant=\"contained\">\r\n                <Button\r\n                  style={{\r\n                    borderTopLeftRadius: '30px',\r\n                    borderBottomLeftRadius: '30px',\r\n                    backgroundColor: 'white',\r\n                    color: 'black'\r\n                  }}\r\n                  onClick={() => {\r\n                    depoContext.deleteUser(deletedID);\r\n                    setDeletePop(false);\r\n                    alertContext.setAlert('Klienti u fshi', 'warning');\r\n                  }}\r\n                >\r\n                  Po\r\n                </Button>\r\n                <Button\r\n                  style={{\r\n                    borderTopRightRadius: '30px',\r\n                    borderBottomRightRadius: '30px',\r\n                    backgroundColor: '#FF0000',\r\n                    color: 'white'\r\n                  }}\r\n                  onClick={() => {\r\n                    setDeletePop(false);\r\n                    alertContext.setAlert('Klienti nuk u fshi', 'info');\r\n                  }}\r\n                >\r\n                  Jo\r\n                </Button>\r\n              </ButtonGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {userEditPop && (\r\n        <div className=\"user-edit-pop\">\r\n          <div\r\n            className=\"user-edit-pop-opa\"\r\n            onClick={() => {\r\n              setUserEditPop(false);\r\n              alertContext.setAlert('Klienti nuk u ndryshua', 'info');\r\n              setDeletedImage(false);\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"user-edit-pop-container\">\r\n            <form\r\n              className=\"user-edit-pop-container-form\"\r\n              onSubmit={onEditUser}\r\n            >\r\n              <div className=\"user-edit-pop-container-form-left-right\">\r\n                <div className=\"user-edit-pop-container-form-left\">\r\n                  <TextField\r\n                    label=\"Emri\"\r\n                    style={{ width: '80%' }}\r\n                    variant=\"outlined\"\r\n                    value={editEmri}\r\n                    type=\"text\"\r\n                    onChange={(e) => setEditEmri(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    label=\"Email\"\r\n                    style={{ width: '80%' }}\r\n                    variant=\"outlined\"\r\n                    value={editEmail}\r\n                    type=\"email\"\r\n                    onChange={(e) => setEditEmail(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    style={{ width: '80%' }}\r\n                    variant=\"outlined\"\r\n                    value={editPassword}\r\n                    onChange={(e) => setEditPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"user-edit-pop-container-form-right\">\r\n                  <FormControl variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"njesia-label\">Status</InputLabel>\r\n                    <Select\r\n                      value={editStatus}\r\n                      onChange={(e) => setEditStatus(e.target.value)}\r\n                      style={{ width: '227px' }}\r\n                      label=\"Status\"\r\n                      inputProps={{\r\n                        name: 'status',\r\n                        id: 'njesia-label'\r\n                      }}\r\n                    >\r\n                      <MenuItem value={1}>Aktive</MenuItem>\r\n                      <MenuItem value={0}>Joaktive</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"njesia-label\">Kategoria</InputLabel>\r\n                    <Select\r\n                      value={editKategoria}\r\n                      onChange={(e) => setEditKategoria(e.target.value)}\r\n                      style={{ width: '227px' }}\r\n                      label=\"Status\"\r\n                      inputProps={{\r\n                        name: 'status',\r\n                        id: 'njesia-label'\r\n                      }}\r\n                    >\r\n                      <MenuItem value=\"None\"></MenuItem>\r\n                      <MenuItem value={'Kategoria 1'}>Kategoria 1</MenuItem>\r\n                      <MenuItem value={'Ktegoria 2'}>Kategoria 2</MenuItem>\r\n                      <MenuItem value={'Kategoria 3'}>Kategoria 3</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"njesia-label\">Zona</InputLabel>\r\n                    <Select\r\n                      value={editZona}\r\n                      onChange={(e) => setEditZona(e.target.value)}\r\n                      style={{ width: '227px' }}\r\n                      label=\"Status\"\r\n                      inputProps={{\r\n                        name: 'status',\r\n                        id: 'njesia-label'\r\n                      }}\r\n                    >\r\n                      <MenuItem value=\"None\"></MenuItem>\r\n                      <MenuItem value={'Zona 1'}>Zona 1</MenuItem>\r\n                      <MenuItem value={'Zona 2'}>Zona 2</MenuItem>\r\n                      <MenuItem value={'Zona 3'}>Zona 3</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className={\r\n                  editImage === '' ? 'image-2' : 'image-2 outlinestyle-none'\r\n                }\r\n              >\r\n                {editImage === '' ? (\r\n                  <>\r\n                    <InputLabel\r\n                      style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                      htmlFor=\"image\"\r\n                    >\r\n                      <AddIcon style={{ fontSize: '70px' }} /> upload{' '}\r\n                    </InputLabel>\r\n                    <Input\r\n                      onChange={(e) => {\r\n                        setEditImage(e.target.files[0]);\r\n                        setEditFile(URL.createObjectURL(e.target.files[0]));\r\n                      }}\r\n                      id=\"image\"\r\n                      type=\"file\"\r\n                      style={{ display: 'none' }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {deletedImage === true ? (\r\n                      <>\r\n                        <DeleteOutlineOutlinedIcon\r\n                          onClick={() => {\r\n                            setEditImage('');\r\n                            setEditFile('');\r\n                            setDeletedImage(true);\r\n                          }}\r\n                          className=\"delete-icon-image\"\r\n                        />\r\n                        <img src={editFile} alt=\"\" />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <DeleteOutlineOutlinedIcon\r\n                          onClick={() => {\r\n                            setEditImage('');\r\n                            setEditFile('');\r\n                            setDeletedImage(true);\r\n                          }}\r\n                          className=\"delete-icon-image\"\r\n                        />\r\n                        <img\r\n                          src={`https://amove.alcodeit.com/images/${editFile}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"edit-user-pop-buttons\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  onClick={() => setDeletedImage(false)}\r\n                >\r\n                  {' '}\r\n                  Edit{' '}\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  onClick={() => {\r\n                    setUserEditPop(false);\r\n                    alertContext.setAlert('Klienti nuk u ndryshua', 'info');\r\n                  }}\r\n                >\r\n                  Anullo\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {userDetailsPop && (\r\n        <div className=\"user-details-pop\">\r\n          <div\r\n            className=\"user-details-pop-opa\"\r\n            onClick={() => showUserDetailsPop(false)}\r\n          ></div>\r\n          <div className=\"user-details-pop-container\">\r\n            <CloseOutlined\r\n              style={{\r\n                alignSelf: 'flex-end',\r\n                marginRight: '20px',\r\n                marginTop: '20px',\r\n                fontSize: '30px',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => showUserDetailsPop(false)}\r\n            />\r\n            <Avatar\r\n              src={`https://amove.alcodeit.com/images/${userDetails.image_profile}`}\r\n              style={{ height: '200px', width: '200px' }}\r\n            />\r\n            <div className=\"user-pop-details-content\">\r\n              <div className=\"user-pop-details-content-detail\">\r\n                <h4>Emri: </h4>\r\n                <i>\r\n                  <p>{userDetails.name}</p>\r\n                </i>\r\n              </div>\r\n\r\n              <div className=\"user-pop-details-content-detail\">\r\n                <h4>Email: </h4>\r\n                <i>\r\n                  {' '}\r\n                  <p>{userDetails.email}</p>\r\n                </i>\r\n              </div>\r\n              <div className=\"user-pop-details-content-detail\">\r\n                <h4>Zona: </h4>\r\n                <i>\r\n                  <p>{userDetails.zona}</p>\r\n                </i>\r\n              </div>\r\n              <div className=\"user-pop-details-content-detail\">\r\n                <h4>Kategoria: </h4>\r\n                <i>\r\n                  <p>{userDetails.kategoria}</p>\r\n                </i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {userPopup && <ShtoKlientPopup closePopup={() => shotUserPopup(false)} />}\r\n      <div className=\"klient\">\r\n        <div className=\"admin-klient\">\r\n          <div className=\"admin-klient-cat\">\r\n            <div className=\"admin-klient-cat-content\">\r\n              <p className=\"all-client\">Te gjithe klientet</p>\r\n              <h2 className=\"all-client-num\">{klientet.length}</h2>\r\n              {/* <span style={{ display: \"flex\" }} className=\"span-client-offer\">\r\n                20% <p>(30 dite)</p>\r\n              </span> */}\r\n            </div>\r\n            <div className=\"admin-klient-cat-icon\">\r\n              <PeopleAltOutlinedIcon style={{ fontSize: '50px' }} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-klient-cat\">\r\n            <div className=\"admin-klient-cat-content\">\r\n              <InputLabel id=\"kategori\" style={{ color: 'white' }}>\r\n                Kategoria\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"kategori\"\r\n                value={kategori === '' ? 'none' : kategori}\r\n                onChange={(e) => Setkategori(e.target.value)}\r\n                style={{ color: 'white' }}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                {categoryClients.map((category) => (\r\n                  <MenuItem value={category.name}> {category.name} </MenuItem>\r\n                ))}\r\n              </Select>\r\n\r\n              <span className=\"span-client-offer\">\r\n                Asnje kategori e zgjedhur\r\n              </span>\r\n            </div>\r\n            <div className=\"admin-klient-cat-icon\">\r\n              <CategoryOutlinedIcon style={{ fontSize: '50px' }} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-klient-cat\">\r\n            <div className=\"admin-klient-cat-content\">\r\n              <InputLabel id=\"zona\" style={{ color: 'white' }}>\r\n                Zona\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"zona\"\r\n                value={zona === '' ? 'none' : zona}\r\n                onChange={(e) => Setzona(e.target.value)}\r\n                style={{ color: 'white' }}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                {zonaClients.map((zona) => (\r\n                  <MenuItem value={zona.name}> {zona.name} </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <span className=\"span-client-offer\">Asnje zone e zgjedhur</span>\r\n            </div>\r\n            <div className=\"admin-klient-cat-icon\">\r\n              <ExploreOutlinedIcon style={{ fontSize: '50px' }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"data-table-klient\">\r\n          <div className=\"table-first-div\">\r\n            <h2>Klientet</h2>\r\n\r\n            <div className=\"table-search-add\">\r\n              <TextField\r\n                size=\"small\"\r\n                placeholder=\"Kerko\"\r\n                type=\"search\"\r\n                label=\"Kerko\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => setSearchFilter(e.target.value)}\r\n              ></TextField>\r\n              <Button\r\n                style={{\r\n                  backgroundColor: '#2A7EBF',\r\n                  borderRadius: '8px',\r\n                  padding: '10px 20px'\r\n                }}\r\n                variant=\"contained\"\r\n                onClick={() => shotUserPopup(true)}\r\n                color=\"primary\"\r\n              >\r\n                <GroupAddOutlinedIcon style={{ marginRight: '10px' }} />\r\n                <p style={{ color: 'white', textDecoration: 'none' }}>\r\n                  Shto klient\r\n                </p>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"data-table\">\r\n            {klientetFiltered.length === 0 ? (\r\n              <div\r\n                className=\"klient-produkte-search-notfound\"\r\n                style={{ justifyContent: 'center' }}\r\n              >\r\n                <img src=\"/search_notfound.gif\" alt=\"\" />\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'column'\r\n                  }}\r\n                >\r\n                  <h3>Nuk u gjet asnje klient nga kerkimi😥</h3>\r\n                  <p style={{ fontSize: '17px' }}>Provoni perseri!</p>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell onClick={() => requestSort('id')}>\r\n                      ID\r\n                      {propertyName.key === 'id' &&\r\n                        propertyName.direction === 'ascending' && (\r\n                          <ArrowUpwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                      {propertyName.key === 'id' &&\r\n                        propertyName.direction === 'descending' && (\r\n                          <ArrowDownwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                    </TableCell>\r\n                    <TableCell onClick={() => requestSort('name')} align=\"left\">\r\n                      Emri\r\n                      {propertyName.key === 'name' &&\r\n                        propertyName.direction === 'ascending' && (\r\n                          <ArrowUpwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                      {propertyName.key === 'name' &&\r\n                        propertyName.direction === 'descending' && (\r\n                          <ArrowDownwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      onClick={() => requestSort('email')}\r\n                      width=\"300px\"\r\n                      align=\"left\"\r\n                    >\r\n                      Email\r\n                      {propertyName.key === 'email' &&\r\n                        propertyName.direction === 'ascending' && (\r\n                          <ArrowUpwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                      {propertyName.key === 'email' &&\r\n                        propertyName.direction === 'descending' && (\r\n                          <ArrowDownwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                    </TableCell>\r\n                    <TableCell onClick={() => requestSort('zona')} align=\"left\">\r\n                      Zona\r\n                      {propertyName.key === 'zona' &&\r\n                        propertyName.direction === 'ascending' && (\r\n                          <ArrowUpwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                      {propertyName.key === 'zona' &&\r\n                        propertyName.direction === 'descending' && (\r\n                          <ArrowDownwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      onClick={() => requestSort('kategoria')}\r\n                      align=\"left\"\r\n                    >\r\n                      Kategoria\r\n                      {propertyName.key === 'kategoria' &&\r\n                        propertyName.direction === 'ascending' && (\r\n                          <ArrowUpwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                      {propertyName.key === 'kategoria' &&\r\n                        propertyName.direction === 'descending' && (\r\n                          <ArrowDownwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      onClick={() => requestSort('status_user')}\r\n                    >\r\n                      Status\r\n                      {propertyName.key === 'status_user' &&\r\n                        propertyName.direction === 'ascending' && (\r\n                          <ArrowUpwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                      {propertyName.key === 'status_user' &&\r\n                        propertyName.direction === 'descending' && (\r\n                          <ArrowDownwardOutlinedIcon\r\n                            style={{ fontSize: '17px' }}\r\n                          />\r\n                        )}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">Veprimet</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {klientetFiltered.slice(start, end).map((row) => (\r\n                    <TableRow key={row.id}>\r\n                      <TableCell style={{ color: '#287DBF' }}>\r\n                        #{row.id}\r\n                      </TableCell>\r\n                      <TableCell>{row.name}</TableCell>\r\n                      <TableCell>{row.email}</TableCell>\r\n                      <TableCell>{row.zona}</TableCell>\r\n                      <TableCell>{row.kategoria}</TableCell>\r\n                      <TableCell>\r\n                        <p className=\"status-text\">\r\n                          {' '}\r\n                          <span\r\n                            className=\"status-pulse\"\r\n                            style={{\r\n                              backgroundColor: renderButtonColorsStatus(\r\n                                row.status_user\r\n                              )\r\n                            }}\r\n                          ></span>{' '}\r\n                          {renderButtonStatus(row.status_user)}{' '}\r\n                        </p>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <div className=\"veprime\" style={{ cursor: 'pointer' }}>\r\n                          <VisibilityOutlinedIcon\r\n                            onClick={() => {\r\n                              setUserDetails(row);\r\n                              showUserDetailsPop(true);\r\n                            }}\r\n                          />\r\n                          <EditOutlinedIcon\r\n                            onClick={() => {\r\n                              setUserEditPop(true);\r\n                              setEditID(row.id);\r\n                              setEditEmri(row.name);\r\n                              setEditEmail(row.email);\r\n                              setEditPassword(row.password);\r\n                              setEditStatus(row.status_user);\r\n                              setEditZona(row.zona);\r\n                              setEditKategoria(row.kategoria);\r\n                              setEditFile(row.image_profile);\r\n                              setEditImage(row.image_profile);\r\n                            }}\r\n                          />\r\n                          <DeleteOutlineOutlinedIcon\r\n                            style={{\r\n                              display: row.status_user === 0 ? 'none' : ''\r\n                            }}\r\n                            onClick={() => {\r\n                              setDeletedID(row.id);\r\n                              setDeletePop(true);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            )}\r\n\r\n            <div\r\n              className=\"pagination\"\r\n              style={{\r\n                display: klientetFiltered.length === 0 ? 'none' : 'flex'\r\n              }}\r\n            >\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <InputLabel style={{ marginRight: '10px' }} id=\"row\">\r\n                  User ne faqe\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"row\"\r\n                  onChange={(e) => {\r\n                    setItempage(e.target.value);\r\n\r\n                    if (\r\n                      (page - 0.5) * e.target.value >=\r\n                      klientetFiltered.length\r\n                    ) {\r\n                      let maxPage = Math.ceil(\r\n                        klientetFiltered.length / e.target.value\r\n                      );\r\n                      setPage(maxPage);\r\n                    }\r\n                  }}\r\n                  value={itemPage}\r\n                >\r\n                  <MenuItem value={5}>5</MenuItem>\r\n                  <MenuItem value={8}>8</MenuItem>\r\n                  <MenuItem value={10}>10</MenuItem>\r\n                  <MenuItem value={15}>15</MenuItem>\r\n                  <MenuItem value={20}>20</MenuItem>\r\n                </Select>\r\n              </div>\r\n              <Pagination\r\n                count={Math.ceil(klientetFiltered.length / itemPage)}\r\n                color=\"primary\"\r\n                page={page}\r\n                size=\"large\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Produkte.jsx",["250","251","252"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport LocalMallOutlinedIcon from '@material-ui/icons/LocalMallOutlined';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport ShtoProduktPopup from './ShtoProduktPopup';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DepoContext from '../../../context/depoContext/DepoContext';\r\nimport ArrowUpwardOutlinedIcon from '@material-ui/icons/ArrowUpwardOutlined';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\nimport AlertContext from '../../../context/alertContext/AlertContext';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Input from '@material-ui/core/Input';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport axios from 'axios';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nexport default function Produkte() {\r\n  const [produktDetails, setProduktDetails] = useState({});\r\n  const [detailsPop, setDetailsPop] = useState(false);\r\n  const [editID, setEditID] = useState(1);\r\n  const [editTitulli, setEditTitulli] = useState('');\r\n  const [editSku, setEditSku] = useState('');\r\n  const [editPershkrimi, setEditPershkrimi] = useState('');\r\n  const [editKategoria, setEditKategoria] = useState('');\r\n  const [editCmimi, setEditCmimi] = useState('');\r\n  const [editSasia, setEditSasia] = useState('');\r\n  const [editStatus, setEditStatus] = useState('');\r\n  const [editNjesia, setEditNjesia] = useState('');\r\n  const [fileEdit, setEditFile] = useState('');\r\n  const [imageEdit, setEditImage] = useState('');\r\n  const [deletedImage, setDeletedImage] = useState(false);\r\n  const [kategoria, setKategoria] = useState('');\r\n  const [produktDetailsPop, showPorduktDetailsPop] = useState(false);\r\n  const [produktPopup, showProduktPopup] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [idDelete, setDeleteId] = useState('');\r\n  const [itemPage, setItempage] = useState(5);\r\n  const [searchFilter, setSearchFilter] = useState('');\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const depoContext = useContext(DepoContext);\r\n  const { produktet, categoryProducts } = depoContext;\r\n  const alertContext = useContext(AlertContext);\r\n  const [propertyName, setProperty] = useState({\r\n    key: 'id',\r\n    direction: 'descending'\r\n  });\r\n  const [deletePop, showDeletePop] = useState(false);\r\n\r\n  const renderButtonStatus = (status) => {\r\n    if (status === 1) {\r\n      return 'Aktive';\r\n    } else if (status === 0) {\r\n      return 'Joaktive';\r\n    }\r\n  };\r\n\r\n  const renderButtonColorsStatus = (status) => {\r\n    if (status === 1) {\r\n      return '#3ccc38';\r\n    } else if (status === 0) {\r\n      return '#fd3259';\r\n    }\r\n  };\r\n\r\n  const onEditProducts = (e) => {\r\n    e.preventDefault();\r\n\r\n    let fd = new FormData();\r\n    fd.append('titulli', editTitulli);\r\n    fd.append('sku', editSku);\r\n    fd.append('pershkrimi', editPershkrimi);\r\n    fd.append('kategoria', editKategoria);\r\n    fd.append('cmimi', editCmimi);\r\n    fd.append('sasia', editSasia);\r\n    fd.append('njesia', editNjesia);\r\n    fd.append('image', imageEdit);\r\n    fd.append('status', editStatus);\r\n\r\n    axios\r\n      .post(\r\n        `https://amove.alcodeit.com/edit_product.php?produkt_id=${editID}`,\r\n        fd\r\n      )\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          alertContext.setAlert(`${res.data.message}`, 'error');\r\n        } else if (res.data.status === 1) {\r\n          alertContext.setAlert(`${res.data.message}`, 'success');\r\n          showPorduktDetailsPop(false);\r\n          setDeletedImage(false);\r\n          depoContext.getAllProducts();\r\n        }\r\n      });\r\n  };\r\n\r\n  const filterBycategory = produktet.filter((produkt) => {\r\n    if (!kategoria) {\r\n      return produkt;\r\n    }\r\n    return produkt.kategoria === kategoria;\r\n  });\r\n\r\n  const filteredProducts = filterBycategory.filter(\r\n    (order) =>\r\n      order.id.toString().toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.titulli.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.kategoria.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.sasia\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(searchFilter.toLowerCase()) ||\r\n      order.cmimi.toString().toLowerCase().includes(searchFilter.toLowerCase())\r\n  );\r\n\r\n  useEffect(() => {\r\n    depoContext.getAllProducts();\r\n    depoContext.getCategoryProducts();\r\n  }, []);\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const stockColor = (item) => {\r\n    if (item == 0) {\r\n      return '#fd3259';\r\n    } else if (item >= 1 && item <= 20) {\r\n      return '#FECD2F';\r\n    } else {\r\n      return '#3ccc38';\r\n    }\r\n  };\r\n\r\n  if (propertyName !== null) {\r\n    filteredProducts.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === 'ascending' ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === 'ascending' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const requestSort = (key) => {\r\n    let direction = 'ascending';\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === 'ascending'\r\n    ) {\r\n      direction = 'descending';\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  return (\r\n    <>\r\n      {detailsPop && (\r\n        <div className=\"produkt-details-pop\">\r\n          <div\r\n            className=\"produkt-details-pop-opa\"\r\n            onClick={() => {\r\n              setDetailsPop(false);\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"produkt-details-pop-container\">\r\n            <Avatar\r\n              style={{ width: '80px', height: '80px' }}\r\n              src={`https://amove.alcodeit.com/images/${produktDetails.image}`}\r\n              alt={produktDetails.titulli}\r\n            />\r\n            <h2>Titulli :</h2>\r\n            {produktDetails.titulli}\r\n            <h2>Pershkrimi</h2>\r\n            {produktDetails.pershkrimi}\r\n            <h2>Sku:</h2>\r\n            {produktDetails.sku}\r\n            <h2>Kategoria:</h2>\r\n            {produktDetails.kategoria}\r\n            <h2>Cmimi:</h2>\r\n            {produktDetails.cmimi}\r\n            <h2>Stock :</h2>\r\n            {produktDetails.sasia}\r\n            <h2>Status</h2>\r\n            {produktDetails.status === 1 ? 'Aktive' : 'Joaktive'}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {produktDetailsPop && (\r\n        <div className=\"produkt-edit-pop\">\r\n          <div\r\n            className=\"produkt-edit-pop-opa\"\r\n            onClick={() => {\r\n              showPorduktDetailsPop(false);\r\n              setDeletedImage(false);\r\n              alertContext.setAlert('Produkti nuk u ndryshua', 'warning');\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"produkt-edit-pop-container\">\r\n            <form className=\"form-edit-produkt\" onSubmit={onEditProducts}>\r\n              <div className=\"produkt-edit-pop-container-titulli\">\r\n                <FormControl variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"njesia-label\">Status</InputLabel>\r\n                  <Select\r\n                    value={editStatus}\r\n                    onChange={(e) => setEditStatus(e.target.value)}\r\n                    style={{ width: '150px' }}\r\n                    label=\"Status\"\r\n                    inputProps={{\r\n                      name: 'status',\r\n                      id: 'njesia-label'\r\n                    }}\r\n                  >\r\n                    <MenuItem value={1}>Aktive</MenuItem>\r\n                    <MenuItem value={0}>Joaktive</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  value={editTitulli}\r\n                  label=\"Titulli\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setEditTitulli(e.target.value)}\r\n                />\r\n                <TextField\r\n                  value={editSku}\r\n                  label=\"Sku\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setEditSku(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"produkt-edit-pop-container-pershkrimi\">\r\n                <textarea\r\n                  value={editPershkrimi}\r\n                  onChange={(e) => setEditPershkrimi(e.target.value)}\r\n                />\r\n                <div\r\n                  className={\r\n                    imageEdit === '' ? 'image' : 'image outlinestyle-none'\r\n                  }\r\n                >\r\n                  {imageEdit === '' ? (\r\n                    <>\r\n                      <InputLabel\r\n                        style={{\r\n                          display: 'flex',\r\n                          justifyContent: 'center',\r\n                          alignItems: 'center',\r\n                          cursor: 'pointer'\r\n                        }}\r\n                        htmlFor=\"image\"\r\n                      >\r\n                        <AddIcon style={{ fontSize: '70px' }} /> upload{' '}\r\n                      </InputLabel>\r\n                      <Input\r\n                        onChange={(e) => {\r\n                          setEditImage(e.target.files[0]);\r\n                          setEditFile(URL.createObjectURL(e.target.files[0]));\r\n                        }}\r\n                        id=\"image\"\r\n                        type=\"file\"\r\n                        style={{ display: 'none' }}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {deletedImage === true ? (\r\n                        <>\r\n                          <DeleteOutlineOutlinedIcon\r\n                            onClick={() => {\r\n                              setEditImage('');\r\n                              setEditFile('');\r\n                              setDeletedImage(true);\r\n                            }}\r\n                            className=\"delete-icon-image\"\r\n                          />\r\n                          <img src={fileEdit} alt=\"\" />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <DeleteOutlineOutlinedIcon\r\n                            onClick={() => {\r\n                              setEditImage('');\r\n                              setEditFile('');\r\n                              setDeletedImage(true);\r\n                            }}\r\n                            className=\"delete-icon-image\"\r\n                          />\r\n                          <img\r\n                            src={`https://amove.alcodeit.com/images/${fileEdit}`}\r\n                            alt=\"\"\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"produkt-edit-pop-container-kategoria\">\r\n                <FormControl variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"kategoria-label\">Kategoria</InputLabel>\r\n                  <Select\r\n                    onChange={(e) => setEditKategoria(e.target.value)}\r\n                    style={{ width: '150px' }}\r\n                    value={editKategoria}\r\n                    label=\"Kategoria\"\r\n                    inputProps={{\r\n                      name: 'kategoria',\r\n                      id: 'kategoria-label'\r\n                    }}\r\n                  >\r\n                    {categoryProducts.map((category) => (\r\n                      <MenuItem value={category.name}>{category.name}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  value={editCmimi}\r\n                  label=\"Cmimi\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setEditCmimi(e.target.value)}\r\n                />\r\n                <TextField\r\n                  value={editSasia}\r\n                  label=\"Sasia\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setEditSasia(e.target.value)}\r\n                />\r\n\r\n                <FormControl variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n                  <Select\r\n                    value={editNjesia}\r\n                    onChange={(e) => setEditNjesia(e.target.value)}\r\n                    style={{ width: '150px' }}\r\n                    label=\"Njesia\"\r\n                    inputProps={{\r\n                      name: 'njesia',\r\n                      id: 'njesia-label'\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"cop\">Cop</MenuItem>\r\n                    <MenuItem value=\"kuti\">Kuti</MenuItem>\r\n                    <MenuItem value=\"pako\">Pako</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div className=\"produkt-edit-pop-container-buttons\">\r\n                <Button color=\"primary\" variant=\"outlined\" type=\"submit\">\r\n                  Edit\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    showPorduktDetailsPop(false);\r\n                    setDeletedImage(false);\r\n                    alertContext.setAlert('Produkti nuk u ndryshua', 'warning');\r\n                    depoContext.getAttrValues();\r\n                  }}\r\n                >\r\n                  Anullo\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {deletePop && (\r\n        <div className=\"delete-pop\">\r\n          <div\r\n            className=\"delete-pop-opa\"\r\n            onClick={() => {\r\n              showDeletePop(false);\r\n              alertContext.setAlert('Produkti nuk u fshi!', 'info');\r\n            }}\r\n          ></div>\r\n          <div className=\"delete-pop-container\">\r\n            <h3>Jeni te sigurt qe doni te fshini produktin?</h3>\r\n            <div className=\"delete-pop-buttons\">\r\n              <Button\r\n                className=\"btn-delete-opa\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  alertContext.setAlert('Produkti u fshi!', 'warning');\r\n                  showDeletePop(false);\r\n                  depoContext.deleteProduct(idDelete);\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  showDeletePop(false);\r\n                  alertContext.setAlert('Produkti nuk u fshi!', 'info');\r\n                }}\r\n                className=\"btn-delete-opa\"\r\n                variant=\"contained\"\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {produktPopup && (\r\n        <ShtoProduktPopup closePopup={() => showProduktPopup(false)} />\r\n      )}\r\n      <div className=\"produkte-header\">\r\n        <div className=\"produkte-header-item\">\r\n          <div className=\"produkte-header-item-left\">\r\n            <p>te gjitha produktet</p>\r\n            <h1>{produktet.length}</h1>\r\n            <p>20%(30 dite)</p>\r\n          </div>\r\n          <div className=\"produkte-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: '40px' }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"produkte-header-item\">\r\n          <div className=\"produkte-header-item-left\">\r\n            <p>Kategoria</p>\r\n            <Select\r\n              variant=\"filled\"\r\n              fullWidth\r\n              onChange={(e) => setKategoria(e.target.value)}\r\n              value={kategoria === '' ? 'None' : kategoria}\r\n              style={{ color: 'white' }}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              {categoryProducts.map((category) => (\r\n                <MenuItem value={category.name}>{category.name} </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <p>\r\n              {' '}\r\n              {kategoria === '' ? 'Asnje kategori e zgjedhur' : kategoria}{' '}\r\n            </p>\r\n          </div>\r\n          <div className=\"produkte-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: '40px' }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"produkte-header-item\">\r\n          <div className=\"produkte-header-item-left\">\r\n            <p>Produkte pa stok</p>\r\n            <h1> {produktet.filter((stock) => stock.sasia == 0).length} </h1>\r\n            <p>75%(30 dite)</p>\r\n          </div>\r\n          <div className=\"produkte-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: '40px' }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"produkte-header-item\">\r\n          <div className=\"produkte-header-item-left\">\r\n            <p>Produkte drejt perfundimit</p>\r\n            <h1>\r\n              {' '}\r\n              {\r\n                produktet.filter((end) => end.sasia >= 1 && end.sasia <= 20)\r\n                  .length\r\n              }{' '}\r\n            </h1>\r\n            <p>75%(30 dite)</p>\r\n          </div>\r\n          <div className=\"produkte-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: '40px' }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"data-table-produkte\">\r\n        <div className=\"data-table-produkte-header\">\r\n          <div className=\"data-table-produkte-header-left\">\r\n            {' '}\r\n            <h3>Produktet</h3>\r\n          </div>\r\n          <div className=\"data-table-produkte-header-right\">\r\n            <TextField\r\n              style={{ marginRight: '30px' }}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              label=\"Kerko\"\r\n              placeholder=\"Kerko\"\r\n              type=\"search\"\r\n              onChange={(e) => setSearchFilter(e.target.value)}\r\n            ></TextField>\r\n            <Button\r\n              style={{\r\n                backgroundColor: '#2A7EBF',\r\n                borderRadius: '8px',\r\n                padding: '10px 20px'\r\n              }}\r\n              color=\"primary\"\r\n              onClick={() => showProduktPopup(true)}\r\n              variant=\"contained\"\r\n              startIcon={<PostAddIcon style={{ fontSize: '25px' }} />}\r\n            >\r\n              Shto Produkt\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {filteredProducts.length === 0 ? (\r\n          <div\r\n            className=\"klient-produkte-search-notfound\"\r\n            style={{ justifyContent: 'center' }}\r\n          >\r\n            <img src=\"/search_notfound.gif\" alt=\"\" />\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                flexDirection: 'column'\r\n              }}\r\n            >\r\n              <h3>Nuk u gjet asnje produkt nga kerkimi😥</h3>\r\n              <p style={{ fontSize: '17px' }}>Provoni perseri!</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <Table size=\"medium\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell onClick={() => requestSort('id')}>\r\n                  ID\r\n                  {propertyName.key === 'id' &&\r\n                    propertyName.direction === 'ascending' && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                  {propertyName.key === 'id' &&\r\n                    propertyName.direction === 'descending' && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell align=\"left\">Foto</TableCell>\r\n                <TableCell onClick={() => requestSort('titulli')} align=\"left\">\r\n                  Titulli\r\n                  {propertyName.key === 'titulli' &&\r\n                    propertyName.direction === 'ascending' && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                  {propertyName.key === 'titulli' &&\r\n                    propertyName.direction === 'descending' && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell\r\n                  onClick={() => requestSort('kategoria')}\r\n                  align=\"left\"\r\n                >\r\n                  Kategoria\r\n                  {propertyName.key === 'kategoria' &&\r\n                    propertyName.direction === 'ascending' && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                  {propertyName.key === 'kategoria' &&\r\n                    propertyName.direction === 'descending' && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell onClick={() => requestSort('sasia')} align=\"left\">\r\n                  Stok\r\n                  {propertyName.key === 'sasia' &&\r\n                    propertyName.direction === 'ascending' && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                  {propertyName.key === 'sasia' &&\r\n                    propertyName.direction === 'descending' && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell onClick={() => requestSort('cmimi')} align=\"left\">\r\n                  Cmimi\r\n                  {propertyName.key === 'cmimi' &&\r\n                    propertyName.direction === 'ascending' && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                  {propertyName.key === 'cmimi' &&\r\n                    propertyName.direction === 'descending' && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell align=\"left\" onClick={() => requestSort('status')}>\r\n                  Status\r\n                  {propertyName.key === 'status' &&\r\n                    propertyName.direction === 'ascending' && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                  {propertyName.key === 'status' &&\r\n                    propertyName.direction === 'descending' && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">Veprimet</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredProducts.slice(start, end).map((produkt) => (\r\n                <TableRow key={produkt.id}>\r\n                  <TableCell style={{ color: '#287DBF' }}>\r\n                    #{produkt.id}{' '}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <img\r\n                      width=\"30\"\r\n                      height=\"30\"\r\n                      src={`https://amove.alcodeit.com/images/${produkt.image}`}\r\n                      alt=\"Foto Produkti\"\r\n                      style={{ borderRadius: '50%' }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{produkt.titulli}</TableCell>\r\n                  <TableCell>{produkt.kategoria}</TableCell>\r\n                  <TableCell\r\n                    style={{\r\n                      color: stockColor(produkt.sasia),\r\n                      fontWeight: 'bold'\r\n                    }}\r\n                  >\r\n                    {produkt.sasia === 0 ? 'Ska stok' : produkt.sasia}\r\n                  </TableCell>\r\n                  <TableCell>{produkt.cmimi}</TableCell>\r\n                  <TableCell>\r\n                    <p className=\"status-text\">\r\n                      {' '}\r\n                      <span\r\n                        className=\"status-pulse\"\r\n                        style={{\r\n                          backgroundColor: renderButtonColorsStatus(\r\n                            produkt.status\r\n                          )\r\n                        }}\r\n                      ></span>{' '}\r\n                      {renderButtonStatus(produkt.status)}{' '}\r\n                    </p>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"veprime\" style={{ cursor: 'pointer' }}>\r\n                      <VisibilityOutlinedIcon\r\n                        onClick={() => {\r\n                          setProduktDetails(produkt);\r\n                          setDetailsPop(true);\r\n                        }}\r\n                      />\r\n                      <EditOutlinedIcon\r\n                        onClick={() => {\r\n                          showPorduktDetailsPop(true);\r\n                          setEditTitulli(produkt.titulli);\r\n                          setEditSku(produkt.sku);\r\n                          setEditPershkrimi(produkt.pershkrimi);\r\n                          setEditKategoria(produkt.kategoria);\r\n                          setEditCmimi(produkt.cmimi);\r\n                          setEditSasia(produkt.sasia);\r\n                          setEditNjesia(produkt.njesia);\r\n                          setEditStatus(produkt.status);\r\n                          setEditFile(produkt.image);\r\n                          setEditImage(produkt.image);\r\n                          setEditID(produkt.id);\r\n                        }}\r\n                      />\r\n                      <DeleteOutlineOutlinedIcon\r\n                        onClick={() => {\r\n                          showDeletePop(true);\r\n                          setDeleteId(produkt.id);\r\n                        }}\r\n                        style={{ display: produkt.status === 0 ? 'none' : '' }}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n\r\n        <div\r\n          className=\"pagination\"\r\n          style={{ display: filteredProducts.length === 0 ? 'none' : 'flex' }}\r\n        >\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <InputLabel style={{ marginRight: '10px' }} id=\"row\">\r\n              Produkte ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n\r\n                if ((page - 0.5) * e.target.value >= filteredProducts.length) {\r\n                  let maxPage = Math.ceil(\r\n                    filteredProducts.length / e.target.value\r\n                  );\r\n                  setPage(maxPage);\r\n                }\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(filteredProducts.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Porosite.jsx",["253"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport LocalMallOutlinedIcon from \"@material-ui/icons/LocalMallOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport axios from \"axios\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nexport default function Porosite() {\r\n  useEffect(() => {\r\n    depoContext.getAllOrders();\r\n    depoContext.getAllProducts();\r\n  }, []);\r\n\r\n  const depoContext = useContext(DepoContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { porosite, produktet } = depoContext;\r\n  const [ordersDetails, setOrdersDetails] = useState([]);\r\n  const orderDetailsProduktID = ordersDetails.map((order) => order.produkt_id);\r\n  const [editOrderPop, setEditOrderPop] = useState(false);\r\n  const [orderDetailss, showOrderDetails] = useState(false);\r\n  const [deletePop, showDeletePop] = useState(false);\r\n  const [resetOrderPop, setResetOrderPop] = useState(false);\r\n  const [idDelete, setDeleteId] = useState(\"\");\r\n  const [orderContentDetails, setOrderDetailsContent] = useState([]);\r\n  const [klientIDOrder, setKlientIDOrder] = useState(\"\");\r\n  const [orderID, setOrderID] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [itemPage, setItempage] = useState(5);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"order_date\",\r\n    direction: \"descending\",\r\n  });\r\n  const [disabledButton, setDisabledButton] = useState({});\r\n  const [orderDisabledProduct, setOrderDisabledProduct] = useState({});\r\n  const order2 = {\r\n    klientID: klientIDOrder,\r\n    ID: orderID,\r\n  };\r\n\r\n  const [searchFilter, setSearchFilter] = useState(\"\");\r\n  const filteredOrder = porosite.filter(\r\n    (order) =>\r\n      order.ID.toString().toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.klient_emer.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.order_date.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.klient_zona.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.total_price\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(searchFilter.toLowerCase())\r\n  );\r\n\r\n  if (propertyName !== null) {\r\n    filteredOrder.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const renderButtonStatus = (status) => {\r\n    if (status === 1) {\r\n      return \"Aktive\";\r\n    } else if (status === 2) {\r\n      return \"Ne Pritje\";\r\n    } else if (status === 3) {\r\n      return \"Anulluar\";\r\n    } else {\r\n      return \"Perfunduar\";\r\n    }\r\n  };\r\n\r\n  const renderButtonColorsStatus = (status) => {\r\n    if (status === 1) {\r\n      return \"#3ccc38\";\r\n    } else if (status === 2) {\r\n      return \"#FECD2F\";\r\n    } else if (status === 3) {\r\n      return \"#fd3259\";\r\n    } else {\r\n      return \"#6569df\";\r\n    }\r\n  };\r\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n  const cmimetPorosise = ordersDetails.map(\r\n    (orders) => orders.qty * orders.cmimiProduktit\r\n  );\r\n  const totaliPorosise = cmimetPorosise.reduce(reducer, 0);\r\n\r\n  const increaseQty = (produktID) => {\r\n    const orders = [...ordersDetails];\r\n    const findProduct = orders.find((order) => order.produktID === produktID);\r\n    findProduct.qty += 1;\r\n    setOrdersDetails(orders);\r\n  };\r\n\r\n  const decreaseQty = (produktID) => {\r\n    const orders = [...ordersDetails];\r\n    const findProduct = orders.find((order) => order.produktID === produktID);\r\n    findProduct.qty -= 1;\r\n    setOrdersDetails(orders);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {resetOrderPop && (\r\n        <div className=\"reset-order-pop\">\r\n          <div\r\n            className=\"reset-order-pop-opa\"\r\n            onClick={() => {\r\n              setResetOrderPop(false);\r\n              setOrderID(\"\");\r\n              setKlientIDOrder(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"reset-order-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"7px\",\r\n                right: \"7px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                setResetOrderPop(false);\r\n                setOrderID(\"\");\r\n                setKlientIDOrder(\"\");\r\n              }}\r\n            />\r\n            <h3>Deshironi te beni porosine aktive?</h3>\r\n            <div className=\"reset-order-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\"https://amove.alcodeit.com/edit_order_status.php\", {\r\n                      orderID: orderID,\r\n                      klientID: klientIDOrder,\r\n                    })\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        setResetOrderPop(false);\r\n                        setOrderID(\"\");\r\n                        setKlientIDOrder(\"\");\r\n                        depoContext.getAllOrders();\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setResetOrderPop(false);\r\n                  setOrderID(\"\");\r\n                  setKlientIDOrder(\"\");\r\n                }}\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {editOrderPop && (\r\n        <div className=\"edit-order-pop\">\r\n          <div\r\n            className=\"edit-order-pop-opa\"\r\n            onClick={() => {\r\n              setEditOrderPop(false);\r\n              setOrdersDetails([]);\r\n              depoContext.emptyOrderDetails();\r\n              depoContext.getAllOrders();\r\n            }}\r\n          ></div>\r\n          <div className=\"edit-order-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                position: \"absolute\",\r\n                right: \"10px\",\r\n                top: \"10px\",\r\n                fontSize: \"25px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                setEditOrderPop(false);\r\n                setOrdersDetails([]);\r\n                depoContext.emptyOrderDetails();\r\n                depoContext.getAllOrders();\r\n              }}\r\n            />\r\n            <div className=\"edit-order-pop-container-left\">\r\n              <h3>Produktet e porosise</h3>\r\n              <div className=\"edit-order-pop-container-left-items\">\r\n                {ordersDetails.map((order) => (\r\n                  <div\r\n                    className=\"edit-order-pop-container-item\"\r\n                    key={order.sku}\r\n                  >\r\n                    <div className=\"edit-order-pop-container-item-image\">\r\n                      <img\r\n                        src={`https://amove.alcodeit.com/images/${order.image}`}\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"edit-order-pop-cotainer-item-titulli-buttons\">\r\n                      <div className=\"edit-order-pop-item-titulli\">\r\n                        <h4> {order.titulli} </h4>\r\n                        <h5> Cmimi fillestar : {order.cmimiProduktit} Leke </h5>\r\n                      </div>\r\n                      <div className=\"edit-order-pop-item-buttons\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          variant=\"contained\"\r\n                          disabled={order.qty === 1 ? true : false}\r\n                          onClick={() => {\r\n                            decreaseQty(order.produktID);\r\n                            depoContext.decreaseOrderQty(order);\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                          -{\" \"}\r\n                        </Button>\r\n\r\n                        <p> {order.qty} </p>\r\n\r\n                        <Button\r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          variant=\"contained\"\r\n                          disabled={order.qty === order.sasia ? true : false}\r\n                          onClick={() => {\r\n                            increaseQty(order.produktID);\r\n                            depoContext.increaseOrderQty(order);\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                          +{\" \"}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"edit-order-pop-container-item-cmimi\">\r\n                      <IconButton\r\n                        disabled={orderDisabledProduct === order ? true : false}\r\n                        style={{\r\n                          color: \"red\",\r\n                          alignSelf: \"flex-end\",\r\n                          justifySelf: \"flex-end\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => {\r\n                          setOrderDisabledProduct(order);\r\n                          axios\r\n                            .post(\r\n                              `https://amove.alcodeit.com/delete_product_from_order.php?order_id=${order.ID}&produkt_id=${order.produktID}`\r\n                            )\r\n                            .then((res) => {\r\n                              if (res.data.status === 1) {\r\n                                axios\r\n                                  .get(\r\n                                    `https://amove.alcodeit.com/get_orderDetails.php?klient=${order2.klientID}&order_id=${order2.ID}`\r\n                                  )\r\n                                  .then((res) => {\r\n                                    setOrdersDetails([]);\r\n                                    setOrdersDetails(res.data);\r\n                                  });\r\n                                // depoContext.getAllOrders();\r\n                                alertContext.setAlert(\r\n                                  `${res.data.message}`,\r\n                                  \"success\"\r\n                                );\r\n                              } else {\r\n                                alertContext.setAlert(\r\n                                  `${res.data.message}`,\r\n                                  \"error\"\r\n                                );\r\n                              }\r\n                            });\r\n                        }}\r\n                      >\r\n                        <CloseOutlinedIcon />\r\n                      </IconButton>\r\n                      <h5> Totali : {order.qty * order.cmimiProduktit} </h5>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"edit-order-pop-container-left-totali\">\r\n                <h2> Totali i porosise: {totaliPorosise} </h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"edit-order-pop-container-right\">\r\n              <h3>Produktet</h3>\r\n              <div className=\"edit-order-pop-container-right-items\">\r\n                {produktet.map((produkt) => (\r\n                  <>\r\n                    <div\r\n                      className=\"edit-order-pop-container-right-items-item\"\r\n                      key={produkt.sku}\r\n                      style={{\r\n                        display:\r\n                          orderDetailsProduktID.some(\r\n                            (order) => order === produkt.id\r\n                          ) === true\r\n                            ? \"none\"\r\n                            : \"\",\r\n                      }}\r\n                    >\r\n                      <div className=\"edit-order-pop-container-right-items-item-image\">\r\n                        <img\r\n                          src={`https://amove.alcodeit.com/images/${produkt.image}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"edit-order-pop-container-right-items-item-titulli-buttons\">\r\n                        <div className=\"edit-order-pop-container-right-items-item-titulli\">\r\n                          <h3>{produkt.titulli}</h3>\r\n                          <p> {produkt.pershkrimi} </p>\r\n                        </div>\r\n                        <div className=\"edit-order-pop-container-right-items-item-buttons\">\r\n                          <Button\r\n                            startIcon={<AddShoppingCartIcon />}\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            disabled={disabledButton === produkt ? true : false}\r\n                            onClick={(e) => {\r\n                              setDisabledButton(produkt);\r\n                              setTimeout(() => setDisabledButton({}), 5000);\r\n                              axios\r\n                                .post(\r\n                                  `https://amove.alcodeit.com/add_product_to_order.php`,\r\n                                  {\r\n                                    orderID,\r\n                                    cmimi: produkt.cmimi,\r\n                                    produktID: produkt.id,\r\n                                  }\r\n                                )\r\n                                .then((res) => {\r\n                                  if (res.data.status === 1) {\r\n                                    axios\r\n                                      .get(\r\n                                        `https://amove.alcodeit.com/get_orderDetails.php?klient=${order2.klientID}&order_id=${order2.ID}`\r\n                                      )\r\n                                      .then((res) => {\r\n                                        setOrdersDetails([]);\r\n                                        setOrdersDetails(res.data);\r\n                                      });\r\n                                    // depoContext.getAllProducts();\r\n                                    // depoContext.getAllOrders();\r\n                                  }\r\n                                });\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n                            Shto tek porosite{\" \"}\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"edit-order-right-items-item-cmimi\">\r\n                        <h4>Cmimi: {produkt.cmimi} Leke</h4>\r\n                        <h4>Stock: {produkt.sasia} </h4>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {deletePop && (\r\n        <div className=\"delete-pop\">\r\n          <div\r\n            className=\"delete-pop-opa\"\r\n            onClick={() => {\r\n              showDeletePop(false);\r\n              alertContext.setAlert(\"Porosia nuk u anullua!\", \"info\");\r\n            }}\r\n          ></div>\r\n          <div className=\"delete-pop-container\">\r\n            <h3>Jeni te sigurt qe doni te anulloni porosine?</h3>\r\n            <div className=\"delete-pop-buttons\">\r\n              <Button\r\n                className=\"btn-delete-opa\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  depoContext.cancelOrder(idDelete);\r\n                  alertContext.setAlert(\"Porosia u anullua!\", \"warning\");\r\n                  showDeletePop(false);\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  showDeletePop(false);\r\n                  alertContext.setAlert(\"Porosia nuk u anullua!\", \"info\");\r\n                }}\r\n                className=\"btn-delete-opa\"\r\n                variant=\"contained\"\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {orderDetailss && (\r\n        <div className=\"order-details-pop\">\r\n          <div\r\n            className=\"order-details-pop-opa\"\r\n            onClick={() => {\r\n              showOrderDetails(false);\r\n              setOrderDetailsContent([]);\r\n            }}\r\n          ></div>\r\n          <div className=\"order-details-pop-content\">\r\n            {orderContentDetails.map((order) => (\r\n              <div className=\"order-details-pop-content-item\" key={order.ID}>\r\n                <div className=\"order-details-pop-content-item-image\">\r\n                  <img\r\n                    src={`https://amove.alcodeit.com/images/${order.image}`}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"order-details-pop-content-item-title\">\r\n                  <h2> {order.titulli} </h2>\r\n                  <p> {order.pershkrimi} </p>\r\n                </div>\r\n                <div className=\"order-details-pop-content-item-price\">\r\n                  <h3> {order.cmimiProduktit} Leke</h3>\r\n                  <p>Sasia: {order.qty} </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"porosite-header\">\r\n        <div className=\"porosite-header-item\">\r\n          <div className=\"porosite-header-item-left\">\r\n            <p>Porosi gjithsej</p>\r\n            <h2> {porosite.length} </h2>\r\n            <p></p>\r\n          </div>\r\n          <div className=\"porosite-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"porosite-header-item\">\r\n          <div className=\"porosite-header-item-left\">\r\n            <p>Porosi aktive</p>\r\n            <h2>\r\n              {\" \"}\r\n              {\r\n                porosite.filter((porosi) => porosi.order_status === 1).length\r\n              }{\" \"}\r\n            </h2>\r\n            <p></p>\r\n          </div>\r\n          <div className=\"porosite-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"porosite-header-item\">\r\n          <div className=\"porosite-header-item-left\">\r\n            <p>Porosi ne pritje</p>\r\n            <h2>\r\n              {\" \"}\r\n              {\r\n                porosite.filter((porosi) => porosi.order_status === 2).length\r\n              }{\" \"}\r\n            </h2>\r\n            <p></p>\r\n          </div>\r\n          <div className=\"porosite-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"porosite-header-item\">\r\n          <div className=\"porosite-header-item-left\">\r\n            <p>Porosi te anulluara</p>\r\n            <h2>\r\n              {\" \"}\r\n              {\r\n                porosite.filter((porosi) => porosi.order_status === 3).length\r\n              }{\" \"}\r\n            </h2>\r\n            <p></p>\r\n          </div>\r\n          <div className=\"porosite-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"porosite-header-item\">\r\n          <div className=\"porosite-header-item-left\">\r\n            <p>Porosi te perfunduara</p>\r\n            <h2>\r\n              {\" \"}\r\n              {\r\n                porosite.filter((porosi) => porosi.order_status === 4).length\r\n              }{\" \"}\r\n            </h2>\r\n            <p></p>\r\n          </div>\r\n          <div className=\"porosite-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"porosite-data-table\">\r\n        <div className=\"porosite-data-table-header\">\r\n          <h2>Porosite</h2>\r\n          <div className=\"porosite-data-table-buttons\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              type=\"search\"\r\n              size=\"small\"\r\n              label=\"Kerko\"\r\n              placeholder=\"Kerko...\"\r\n              onChange={(e) => setSearchFilter(e.target.value)}\r\n            />\r\n            <Button\r\n              startIcon={<AddIcon />}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                backgroundColor: \"#2A7EBF\",\r\n                borderRadius: \"8px\",\r\n                padding: \"10px 20px\",\r\n              }}\r\n            >\r\n              Shto Porosi\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {filteredOrder.length === 0 ? (\r\n          <div\r\n            className=\"klient-produkte-search-notfound\"\r\n            style={{ justifyContent: \"center\" }}\r\n          >\r\n            <img src=\"/search_notfound.gif\" alt=\"\" />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <h3>Nuk u gjet asnje porosi nga kerkimi😥</h3>\r\n              <p style={{ fontSize: \"17px\" }}>Provoni perseri!</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell onClick={() => requestSort(\"ID\")}>\r\n                  ID\r\n                  {propertyName.key === \"ID\" &&\r\n                    propertyName.direction === \"ascending\" && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                  {propertyName.key === \"ID\" &&\r\n                    propertyName.direction === \"descending\" && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"left\"\r\n                  onClick={() => requestSort(\"klient_emer\")}\r\n                >\r\n                  Emri\r\n                  {propertyName.key === \"klient_emer\" &&\r\n                    propertyName.direction === \"ascending\" && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                  {propertyName.key === \"klient_emer\" &&\r\n                    propertyName.direction === \"descending\" && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"left\"\r\n                  onClick={() => requestSort(\"order_date\")}\r\n                >\r\n                  Data\r\n                  {propertyName.key === \"order_date\" &&\r\n                    propertyName.direction === \"ascending\" && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                  {propertyName.key === \"order_date\" &&\r\n                    propertyName.direction === \"descending\" && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"left\"\r\n                  onClick={() => requestSort(\"klient_zona\")}\r\n                >\r\n                  Zona\r\n                  {propertyName.key === \"klient_zona\" &&\r\n                    propertyName.direction === \"ascending\" && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                  {propertyName.key === \"klient_zona\" &&\r\n                    propertyName.direction === \"descending\" && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"left\"\r\n                  onClick={() => requestSort(\"total_price\")}\r\n                >\r\n                  Vlera\r\n                  {propertyName.key === \"total_price\" &&\r\n                    propertyName.direction === \"ascending\" && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                  {propertyName.key === \"total_price\" &&\r\n                    propertyName.direction === \"descending\" && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"left\"\r\n                  onClick={() => requestSort(\"order_status\")}\r\n                >\r\n                  Porosia\r\n                  {propertyName.key === \"order_status\" &&\r\n                    propertyName.direction === \"ascending\" && (\r\n                      <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                  {propertyName.key === \"order_status\" &&\r\n                    propertyName.direction === \"descending\" && (\r\n                      <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                    )}\r\n                </TableCell>\r\n                <TableCell align=\"center\">Veprimet</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {filteredOrder.slice(start, end).map((order) => (\r\n                <TableRow key={order.ID}>\r\n                  <TableCell style={{ color: \"#287DBF\" }}>\r\n                    #{order.ID}{\" \"}\r\n                  </TableCell>\r\n                  <TableCell> {order.klient_emer} </TableCell>\r\n                  <TableCell> {order.order_date} </TableCell>\r\n                  <TableCell> {order.klient_zona} </TableCell>\r\n                  <TableCell> {order.total_price} Leke </TableCell>\r\n                  <TableCell>\r\n                    <p className=\"status-text\">\r\n                      {\" \"}\r\n                      <span\r\n                        className=\"status-pulse\"\r\n                        style={{\r\n                          backgroundColor: renderButtonColorsStatus(\r\n                            order.order_status\r\n                          ),\r\n                        }}\r\n                      ></span>{\" \"}\r\n                      {renderButtonStatus(order.order_status)}{\" \"}\r\n                    </p>\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"veprime\" style={{ cursor: \"pointer\" }}>\r\n                      <VisibilityOutlinedIcon\r\n                        onClick={() => {\r\n                          showOrderDetails(true);\r\n                          axios\r\n                            .get(\r\n                              `https://amove.alcodeit.com/get_orderDetails.php?klient=${order.klientID}&order_id=${order.ID}`\r\n                            )\r\n                            .then((res) => setOrderDetailsContent(res.data));\r\n                        }}\r\n                      />\r\n                      {order.order_status === 3 ? (\r\n                        <EditOutlinedIcon\r\n                          onClick={() => {\r\n                            setResetOrderPop(true);\r\n                            setOrderID(order.ID);\r\n                            setKlientIDOrder(order.klientID);\r\n                          }}\r\n                        />\r\n                      ) : (\r\n                        <EditOutlinedIcon\r\n                          onClick={() => {\r\n                            setEditOrderPop(true);\r\n                            depoContext.getOrderDetails(order);\r\n                            axios\r\n                              .get(\r\n                                `https://amove.alcodeit.com/get_orderDetails.php?klient=${order.klientID}&order_id=${order.ID}`\r\n                              )\r\n                              .then((res) => {\r\n                                setOrdersDetails(res.data);\r\n                              });\r\n                            setOrderID(order.ID);\r\n                            setKlientIDOrder(order.klientID);\r\n                          }}\r\n                        />\r\n                      )}\r\n\r\n                      <DeleteOutlineOutlinedIcon\r\n                        onClick={() => {\r\n                          showDeletePop(true);\r\n                          setDeleteId(order.ID);\r\n                        }}\r\n                        style={{\r\n                          display: order.order_status === 3 ? \"none\" : \"\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n\r\n        <div\r\n          className=\"pagination\"\r\n          style={{ display: filteredOrder.length === 0 ? \"none\" : \"flex\" }}\r\n        >\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n              Porosi ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n                if ((page - 0.5) * e.target.value >= filteredOrder.length) {\r\n                  let maxPage = Math.ceil(\r\n                    filteredOrder.length / e.target.value\r\n                  );\r\n                  setPage(maxPage);\r\n                }\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(filteredOrder.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriProduktesh.jsx",["254"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport AlertContext from '../../../context/alertContext/AlertContext';\r\nimport DepoContext from '../../../context/depoContext/DepoContext';\r\nimport axios from 'axios';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport ArrowUpwardOutlinedIcon from '@material-ui/icons/ArrowUpwardOutlined';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\n\r\nexport default function ShtoKategoriProduktesh() {\r\n  const [shtoKategoriPop, showKategoriPop] = useState(false);\r\n  const [editKategoriPop, showEditKategoriPop] = useState(false);\r\n  const [deleteKategoriPop, showDeleteKategoriPop] = useState(false);\r\n  const [editKategoriName, setEditKategoriName] = useState('');\r\n  const [editID, setEditID] = useState('');\r\n  const [deleteID, setDeleteID] = useState('');\r\n  const [kategoriName, setKategoriName] = useState('');\r\n  const depoContext = useContext(DepoContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { categoryProducts } = depoContext;\r\n  const [page, setPage] = useState(1);\r\n  const [itemPage, setItempage] = useState(5);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [propertyName, setProperty] = useState({\r\n    key: 'id',\r\n    direction: 'descending'\r\n  });\r\n\r\n  const requestSort = (key) => {\r\n    let direction = 'ascending';\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === 'ascending'\r\n    ) {\r\n      direction = 'descending';\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  if (propertyName !== null) {\r\n    categoryProducts.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === 'ascending' ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === 'ascending' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    depoContext.getCategoryProducts();\r\n  }, []);\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      {deleteKategoriPop && (\r\n        <div className=\"produkt-kategori-delete-pop\">\r\n          <div\r\n            className=\"produkt-kategori-delete-pop-opa\"\r\n            onClick={() => {\r\n              showDeleteKategoriPop(false);\r\n              setDeleteID('');\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"produkt-kategori-delete-pop-container\">\r\n            <p>Jeni te sigurt qe doni ta fshini?</p>\r\n            <div className=\"produkt-kategori-delete-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      'https://amove.alcodeit.com/delete_categoryProduct.php',\r\n                      { id: deleteID }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, 'success');\r\n                        showDeleteKategoriPop(false);\r\n                        setDeleteID('');\r\n                        depoContext.getCategoryProducts();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, 'error');\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  showDeleteKategoriPop(false);\r\n                  setDeleteID('');\r\n                }}\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {editKategoriPop && (\r\n        <div className=\"produkt-kategori-edit-pop\">\r\n          <div\r\n            className=\"produkt-kategori-edit-pop-opa\"\r\n            onClick={() => {\r\n              showEditKategoriPop(false);\r\n              setEditID('');\r\n              setEditKategoriName('');\r\n            }}\r\n          ></div>\r\n          <div className=\"produkt-kategori-edit-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: 'flex-end',\r\n                marginRight: '20px',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => {\r\n                showEditKategoriPop(false);\r\n                setEditID('');\r\n                setEditKategoriName('');\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: '60%' }}\r\n              variant=\"outlined\"\r\n              label=\"Emri i kategorise\"\r\n              value={editKategoriName}\r\n              onChange={(e) => setEditKategoriName(e.target.value)}\r\n            />\r\n\r\n            <div className=\"produkt-kategori-edit-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      'https://amove.alcodeit.com/edit_productCategory.php',\r\n                      { id: editID, name: editKategoriName }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, 'success');\r\n                        showKategoriPop(false);\r\n                        setEditID('');\r\n                        setEditKategoriName('');\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, 'error');\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  showEditKategoriPop(false);\r\n                  setEditID('');\r\n                  setEditKategoriName('');\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoKategoriPop && (\r\n        <div className=\"shto-kategori-pop\">\r\n          <div\r\n            className=\"shto-kategori-pop-opa\"\r\n            onClick={() => {\r\n              showKategoriPop(false);\r\n              setKategoriName('');\r\n            }}\r\n          ></div>\r\n          <div className=\"shto-kategori-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: 'flex-end',\r\n                marginRight: '20px',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => {\r\n                showKategoriPop(false);\r\n                setKategoriName('');\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              value={kategoriName}\r\n              style={{ width: '60%' }}\r\n              variant=\"outlined\"\r\n              label=\"Emri i kategorise\"\r\n              onChange={(e) => setKategoriName(e.target.value)}\r\n            />\r\n            <div className=\"shto-kategori-pop-container-buttons\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      'https://amove.alcodeit.com/add_product_category.php',\r\n                      { name: kategoriName }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, 'success');\r\n                        setKategoriName('');\r\n                        showKategoriPop(false);\r\n                        depoContext.getCategoryProducts();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, 'error');\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Shto\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  showKategoriPop(false);\r\n                  setKategoriName('');\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"shto-kategori-produktesh\">\r\n        <div className=\"shto-kategori-produktesh-header\">\r\n          <h3>Kategorite e produkteve</h3>\r\n          <Button\r\n            startIcon={<AddBoxOutlinedIcon />}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              showKategoriPop(true);\r\n            }}\r\n          >\r\n            Shto kategori\r\n          </Button>\r\n        </div>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                style={{ cursor: 'pointer' }}\r\n                align=\"center\"\r\n                onClick={() => requestSort('id')}\r\n              >\r\n                ID\r\n                {propertyName.key === 'id' &&\r\n                  propertyName.direction === 'ascending' && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                  )}\r\n                {propertyName.key === 'id' &&\r\n                  propertyName.direction === 'descending' && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ cursor: 'pointer' }}\r\n                align=\"center\"\r\n                onClick={() => requestSort('name')}\r\n              >\r\n                Emri\r\n                {propertyName.key === 'name' &&\r\n                  propertyName.direction === 'ascending' && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                  )}\r\n                {propertyName.key === 'name' &&\r\n                  propertyName.direction === 'descending' && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell style={{ cursor: 'pointer' }} align=\"center\">\r\n                Veprimet\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categoryProducts.slice(start, end).map((category) => (\r\n              <TableRow key={category.id}>\r\n                <TableCell align=\"center\"> {category.id} </TableCell>\r\n                <TableCell align=\"center\"> {category.name} </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EditOutlinedIcon\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={() => {\r\n                      showEditKategoriPop(true);\r\n                      setEditKategoriName(category.name);\r\n                      setEditID(category.id);\r\n                    }}\r\n                  />\r\n                  <DeleteOutlineOutlinedIcon\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={() => {\r\n                      setDeleteID(category.id);\r\n                      showDeleteKategoriPop(true);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <div className=\"pagination\">\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <InputLabel style={{ marginRight: '10px' }} id=\"row\">\r\n              Kategori ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n              <MenuItem value={25}>25</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(categoryProducts.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoZonaKlientesh.jsx",["255"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\n\r\nexport default function ShtoZonaKlientesh() {\r\n  const depoContext = useContext(DepoContext);\r\n  const { zonaClients } = depoContext;\r\n  const alertContext = useContext(AlertContext);\r\n  const [shtoZonaPop, showShtoZonaPop] = useState(false);\r\n  const [emriZones, setEmriZones] = useState(\"\");\r\n  const [deleteZonaPop, showDeleteZonaPop] = useState(false);\r\n  const [deleteID, setDeleteID] = useState(\"\");\r\n  const [editZonaPop, showEditZonaPop] = useState(false);\r\n  const [editZonaName, setEditZonaName] = useState(\"\");\r\n  const [editZonaID, setEditZonaID] = useState(\"\");\r\n  const [itemPage, setItempage] = useState(5);\r\n  const [page, setPage] = useState(1);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"id\",\r\n    direction: \"descending\",\r\n  });\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  if (propertyName !== null) {\r\n    zonaClients.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    depoContext.getZonaClients();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {editZonaPop && (\r\n        <div className=\"edit-klient-zona-pop\">\r\n          <div\r\n            className=\"edit-klient-zona-pop-opa\"\r\n            onClick={() => {\r\n              showEditZonaPop(false);\r\n              setEditZonaID(\"\");\r\n              setEditZonaName(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"edit-klient-zona-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showEditZonaPop(false);\r\n                setEditZonaID(\"\");\r\n                setEditZonaName(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Emri i zones\"\r\n              value={editZonaName}\r\n              onChange={(e) => {\r\n                setEditZonaName(e.target.value);\r\n              }}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n            <div className=\"edit-klient-zona-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\"https://amove.alcodeit.com/edit_zona_clients.php\", {\r\n                      id: editZonaID,\r\n                      name: editZonaName,\r\n                    })\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        depoContext.getZonaClients();\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        setEditZonaName(\"\");\r\n                        setEditZonaID(\"\");\r\n                        showEditZonaPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setEditZonaName(\"\");\r\n                  setEditZonaID(\"\");\r\n                  showEditZonaPop(false);\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {deleteZonaPop && (\r\n        <div className=\"delete-klient-zona-pop\">\r\n          <div\r\n            className=\"delete-klient-zona-pop-opa\"\r\n            onClick={() => {\r\n              showDeleteZonaPop(false);\r\n              setDeleteID(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"delete-klient-zona-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showDeleteZonaPop(false);\r\n                setDeleteID(\"\");\r\n              }}\r\n            />\r\n            <h4>Jeni te sigurt qe doni te fshini zonen?</h4>\r\n            <div className=\"delete-klient-zona-pop-container-buttons\">\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://amove.alcodeit.com/delete_zona_clients.php\",\r\n                      { id: deleteID }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        depoContext.getZonaClients();\r\n                        setDeleteID(\"\");\r\n                        showDeleteZonaPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                PO\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setDeleteID(\"\");\r\n                  showDeleteZonaPop(false);\r\n                }}\r\n              >\r\n                JO\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoZonaPop && (\r\n        <div className=\"shto-klient-zona-pop\">\r\n          <div\r\n            className=\"shto-klient-zona-pop-opa\"\r\n            onClick={() => {\r\n              showShtoZonaPop(false);\r\n              setEmriZones(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"shto-klient-zona-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showShtoZonaPop(false);\r\n                setEmriZones(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Emri i zones\"\r\n              style={{ width: \"60%\" }}\r\n              value={emriZones}\r\n              onChange={(e) => setEmriZones(e.target.value)}\r\n              variant=\"outlined\"\r\n            />\r\n            <div className=\"shto-klient-zona-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\"https://amove.alcodeit.com/add_zona_client.php\", {\r\n                      name: emriZones,\r\n                    })\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        depoContext.getZonaClients();\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        setEmriZones(\"\");\r\n                        showShtoZonaPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setEmriZones(\"\");\r\n                  showShtoZonaPop(false);\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"shto-klient-zona\">\r\n        <div className=\"shto-klient-zona-header\">\r\n          <h4>Zonat e klienteve</h4>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            startIcon={<AddBoxOutlinedIcon />}\r\n            onClick={() => {\r\n              showShtoZonaPop(true);\r\n            }}\r\n          >\r\n            Shto zone\r\n          </Button>\r\n        </div>\r\n\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"id\")}\r\n              >\r\n                ID\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"name\")}\r\n              >\r\n                Emri\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"center\">Veprimet</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {zonaClients.slice(start, end).map((zona) => (\r\n              <TableRow>\r\n                <TableCell align=\"center\">{zona.id}</TableCell>\r\n                <TableCell align=\"center\">{zona.name}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EditOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      showEditZonaPop(true);\r\n                      setEditZonaID(zona.id);\r\n                      setEditZonaName(zona.name);\r\n                    }}\r\n                  />\r\n                  <DeleteOutlineOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      showDeleteZonaPop(true);\r\n                      setDeleteID(zona.id);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className=\"pagination\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n              Zona ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(zonaClients.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriKlientesh.jsx",["256"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\n\r\nexport default function ShtoKategoriKlientesh() {\r\n  const depoContext = useContext(DepoContext);\r\n  const { categoryClients } = depoContext;\r\n  const alertContext = useContext(AlertContext);\r\n  const [shtoKategoriPop, showShtoKategoriPop] = useState(false);\r\n  const [deleteKategoriPop, showDeleteKategoriPop] = useState(false);\r\n  const [editKategoriPopm, showEditKategoriPop] = useState(false);\r\n  const [editKategoriName, setEditKategoriName] = useState(\"\");\r\n  const [editIDKategori, setEditIDKategori] = useState(\"\");\r\n  const [emriKategorise, setEmriKategorise] = useState(\"\");\r\n  const [deleteID, setDeleteID] = useState(\"\");\r\n  const [itemPage, setItempage] = useState(5);\r\n  const [page, setPage] = useState(1);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"id\",\r\n    direction: \"descending\",\r\n  });\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  if (propertyName !== null) {\r\n    categoryClients.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    depoContext.getCategoryClients();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {editKategoriPopm && (\r\n        <div className=\"edit-kategori-klientesh-pop\">\r\n          <div\r\n            className=\"edit-kategori-klientesh-pop-opa\"\r\n            onClick={() => {\r\n              showEditKategoriPop(false);\r\n              setEditKategoriName(\"\");\r\n              setEditIDKategori(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"edit-kategori-klientesh-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showEditKategoriPop(false);\r\n                setEditKategoriName(\"\");\r\n                setEditIDKategori(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              value={editKategoriName}\r\n              onChange={(e) => {\r\n                setEditKategoriName(e.target.value);\r\n              }}\r\n              variant=\"outlined\"\r\n              label=\"Emri i kategorise\"\r\n              style={{ width: \"60%\" }}\r\n            />\r\n            <div className=\"edit-kategori-klientesh-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://amove.alcodeit.com/edit_category_client.php\",\r\n                      { id: editIDKategori, name: editKategoriName }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        showEditKategoriPop(false);\r\n                        setEditKategoriName(\"\");\r\n                        setEditIDKategori(\"\");\r\n                        depoContext.getCategoryClients();\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  showEditKategoriPop(false);\r\n                  setEditKategoriName(\"\");\r\n                  setEditIDKategori(\"\");\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {deleteKategoriPop && (\r\n        <div className=\"delete-kategori-klientesh-pop\">\r\n          <div\r\n            className=\"delete-kategori-klientesh-pop-opa\"\r\n            onClick={() => {\r\n              showDeleteKategoriPop(false);\r\n              setDeleteID(\"\");\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"delete-kategori-klientesh-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showDeleteKategoriPop(false);\r\n                setDeleteID(\"\");\r\n              }}\r\n            />\r\n            <h4>Jeni te sigurt qe doni te fshni kateogrine?</h4>\r\n            <div className=\"delete-kategori-klientesh-pop-container-buttons\">\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://amove.alcodeit.com/delete_category_client.php\",\r\n                      { id: deleteID }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        showDeleteKategoriPop(false);\r\n                        setDeleteID(\"\");\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        depoContext.getCategoryClients();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  showDeleteKategoriPop(false);\r\n                  setDeleteID(\"\");\r\n                }}\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoKategoriPop && (\r\n        <div className=\"shto-kategori-klientesh-pop\">\r\n          <div\r\n            className=\"shto-kategori-klientesh-pop-opa\"\r\n            onClick={() => {\r\n              showShtoKategoriPop(false);\r\n              setEmriKategorise(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"shto-kategori-klientesh-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showShtoKategoriPop(false);\r\n                setEmriKategorise(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"60%\" }}\r\n              label=\"Emri i kategorise\"\r\n              variant=\"outlined\"\r\n              value={emriKategorise}\r\n              onChange={(e) => {\r\n                setEmriKategorise(e.target.value);\r\n              }}\r\n            />\r\n            <div className=\"shto-kategori-klientesh-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://amove.alcodeit.com/add_category_client.php\",\r\n                      { name: emriKategorise }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        showShtoKategoriPop(false);\r\n                        depoContext.getCategoryClients();\r\n                        setEmriKategorise(\"\");\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  showShtoKategoriPop(false);\r\n                  setEmriKategorise(\"\");\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"shto-kategori-klientesh\">\r\n        <div className=\"shto-kategori-klientesh-header\">\r\n          <h3>Kategorite e klienteve</h3>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            startIcon={<AddBoxOutlinedIcon />}\r\n            onClick={() => {\r\n              showShtoKategoriPop(true);\r\n            }}\r\n          >\r\n            Shto kategori\r\n          </Button>\r\n        </div>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"id\")}\r\n              >\r\n                ID\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"name\")}\r\n              >\r\n                Emri\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell style={{ cursor: \"pointer\" }} align=\"center\">\r\n                Veprimet\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categoryClients.slice(start, end).map((category) => (\r\n              <TableRow>\r\n                <TableCell align=\"center\">{category.id}</TableCell>\r\n                <TableCell align=\"center\">{category.name}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EditOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      setEditIDKategori(category.id);\r\n                      setEditKategoriName(category.name);\r\n                      showEditKategoriPop(true);\r\n                    }}\r\n                  />\r\n                  <DeleteOutlineOutlinedIcon\r\n                    onClick={() => {\r\n                      showDeleteKategoriPop(true);\r\n                      setDeleteID(category.id);\r\n                    }}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className=\"pagination\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n              Kategori ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(categoryClients.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoAttributes.jsx",["257"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport AlertContext from '../../../context/alertContext/AlertContext';\r\nimport DepoContext from '../../../context/depoContext/DepoContext';\r\nimport axios from 'axios';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport RemoveRedEyeOutlinedIcon from '@material-ui/icons/RemoveRedEyeOutlined';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport ArrowUpwardOutlinedIcon from '@material-ui/icons/ArrowUpwardOutlined';\r\nimport ArrowDownwardOutlinedIcon from '@material-ui/icons/ArrowDownwardOutlined';\r\n\r\nexport default function ShtoAttributes() {\r\n  const [shtoAttrPop, showAttrPop] = useState(false);\r\n  const [attrValue, setAttrValue] = useState('');\r\n  const [shtoValueAttrPop, showAttrPopValue] = useState(false);\r\n  const [attrFromSelect, getAttrFromSelect] = useState('');\r\n  const [attrnameValue, setAttrNameValue] = useState('');\r\n  const alertContext = useContext(AlertContext);\r\n  const depoContext = useContext(DepoContext);\r\n  const { attrNames, attrValues } = depoContext;\r\n  const [seeAttrNames, showAllAttrNames] = useState(false);\r\n  const [itemPage, setItempage] = useState(5);\r\n  const [editPop, showEditPop] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [editValue, setEditvalue] = useState('');\r\n  const [editID, setEditID] = useState('');\r\n  const [deletePop, showDeletePop] = useState(false);\r\n  const [deleteID, setDeleteID] = useState('');\r\n  const [deleteAttrPop, setDeleteAttrPop] = useState(false);\r\n  const [idDeleteAttr, setIdDeleteAttr] = useState('');\r\n  const [propertyName, setProperty] = useState({\r\n    key: 'id',\r\n    direction: 'descending'\r\n  });\r\n\r\n  const requestSort = (key) => {\r\n    let direction = 'ascending';\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === 'ascending'\r\n    ) {\r\n      direction = 'descending';\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  if (propertyName !== null) {\r\n    attrValues.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === 'ascending' ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === 'ascending' ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    depoContext.getAttrNames();\r\n    depoContext.getAttrValues();\r\n  }, []);\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      {deletePop && (\r\n        <div className=\"delete-attr-pop\">\r\n          <div\r\n            className=\"delete-attr-pop-opa\"\r\n            onClick={() => showDeletePop(false)}\r\n          ></div>\r\n\r\n          <div className=\"delete-attr-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: 'flex-end',\r\n                marginRight: '20px',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => showDeletePop(false)}\r\n            />\r\n            <p>Jeni te sigurt qe deshironi ta fshini?</p>\r\n            <div className=\"delete-attr-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                size=\"large\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post('https://amove.alcodeit.com/delete_attr_value.php', {\r\n                      id: deleteID\r\n                    })\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, 'success');\r\n                        depoContext.getAttrValues();\r\n                        showDeletePop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, 'error');\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                PO\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                size=\"large\"\r\n                onClick={() => showDeletePop(false)}\r\n              >\r\n                JO\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {editPop && (\r\n        <div className=\"edit-attr-pop\">\r\n          <div\r\n            className=\"edit-attr-pop-opa\"\r\n            onClick={() => showEditPop(false)}\r\n          ></div>\r\n          <div className=\"edit-attr-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: 'flex-end',\r\n                marginRight: '20px',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => showEditPop(false)}\r\n            />\r\n\r\n            <TextField\r\n              value={editValue}\r\n              variant=\"outlined\"\r\n              onChange={(e) => setEditvalue(e.target.value)}\r\n              style={{ width: '50%' }}\r\n              type=\"text\"\r\n            />\r\n\r\n            <div className=\"edit-attr-pop-container-buttons\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post('https://amove.alcodeit.com/edit_attr_value.php', {\r\n                      name_id: editID,\r\n                      value: editValue\r\n                    })\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, 'success');\r\n                        showEditPop(false);\r\n                        depoContext.getAttrValues();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, 'error');\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={() => showEditPop(false)}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {seeAttrNames && (\r\n        <div className=\"see-attr-names-pop\">\r\n          <div\r\n            className=\"see-attr-names-pop-opa\"\r\n            onClick={() => showAllAttrNames(false)}\r\n          ></div>\r\n          <div\r\n            className={\r\n              deleteAttrPop === true\r\n                ? 'see-attr-names-pop-delete show-see-attr-names-pop-delete'\r\n                : 'see-attr-names-pop-delete'\r\n            }\r\n          >\r\n            <p>\r\n              Jeni te sigurt qe doni te fshini atributin? Me fshirjen e\r\n              atributit do fshihen dhe vlerat e tij.\r\n            </p>\r\n            <div className=\"see-attr-names-pop-delete-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post('https://amove.alcodeit.com/delete_attr.php', {\r\n                      id: idDeleteAttr\r\n                    })\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        depoContext.getAttrValues();\r\n                        depoContext.getAttrNames();\r\n                        alertContext.setAlert(`${res.data.message}`, 'success');\r\n                        setDeleteAttrPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, 'error');\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setDeleteAttrPop(false);\r\n                }}\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"see-attr-names-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                top: '5px',\r\n                right: '5px',\r\n                cursor: 'pointer',\r\n                position: 'absolute'\r\n              }}\r\n              onClick={() => showAllAttrNames(false)}\r\n            />\r\n\r\n            {attrNames.length > 0 ? (\r\n              <>\r\n                {attrNames.map((attr) => (\r\n                  <Chip\r\n                    disabled={deleteAttrPop === true ? true : false}\r\n                    style={{ margin: '10px' }}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    label={attr.name}\r\n                    size=\"medium\"\r\n                    clickable\r\n                    onDelete={() => {\r\n                      setDeleteAttrPop(true);\r\n                      setIdDeleteAttr(attr.id_name);\r\n                    }}\r\n                  />\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <p>Ska atribute</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoValueAttrPop && (\r\n        <div className=\"shto-attributes-values-pop\">\r\n          <div\r\n            className=\"shto-attributes-values-pop-opa\"\r\n            onClick={() => showAttrPopValue(false)}\r\n          ></div>\r\n          <div className=\"shto-attributes-values-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: 'flex-end',\r\n                marginRight: '20px',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => showAttrPopValue(false)}\r\n            />\r\n            <div style={{ width: '50%' }}>\r\n              <InputLabel id=\"zonaForm\">Attributes</InputLabel>\r\n              <Select\r\n                style={{ width: '100%' }}\r\n                labelId=\"zonaForm\"\r\n                value={attrFromSelect}\r\n                onChange={(e) => getAttrFromSelect(e.target.value)}\r\n                variant=\"outlined\"\r\n              >\r\n                <MenuItem value=\"None\"></MenuItem>\r\n\r\n                {attrNames.map((attr) => (\r\n                  <MenuItem value={attr.id_name}> {attr.name} </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </div>\r\n            <TextField\r\n              value={attrnameValue}\r\n              style={{ width: '50%' }}\r\n              onChange={(e) => setAttrNameValue(e.target.value)}\r\n              variant=\"outlined\"\r\n              label=\"Vlera e atributit\"\r\n            />\r\n            <div className=\"shto-attributes-values-pop-conatainer-buttons\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      'https://amove.alcodeit.com/add_values_in_attributes.php',\r\n                      { name_id: attrFromSelect, value: attrnameValue }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, 'success');\r\n                        getAttrFromSelect('');\r\n                        setAttrNameValue('');\r\n                        depoContext.getAttrValues();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, 'error');\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      'https://amove.alcodeit.com/add_values_in_attributes.php',\r\n                      { name_id: attrFromSelect, value: attrnameValue }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, 'success');\r\n                        getAttrFromSelect('');\r\n                        setAttrNameValue('');\r\n                        depoContext.getAttrValues();\r\n                        showAttrPopValue(false);\r\n                        axios.get(\r\n                          'https://amove.alcodeit.com/get_name_values_attribues.php'\r\n                        );\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, 'error');\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj dhe Dil\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoAttrPop && (\r\n        <div className=\"shto-attributes-pop\">\r\n          <div\r\n            className=\"shto-attributes-pop-opa\"\r\n            onClick={() => {\r\n              setAttrValue('');\r\n              showAttrPop(false);\r\n            }}\r\n          ></div>\r\n          <div className=\"shto-attributes-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: 'flex-end',\r\n                marginRight: '20px',\r\n                cursor: 'pointer'\r\n              }}\r\n              onClick={() => {\r\n                showAttrPop(false);\r\n                setAttrValue('');\r\n              }}\r\n            />\r\n            <TextField\r\n              onChange={(e) => setAttrValue(e.target.value)}\r\n              label=\"Emri i Atributit\"\r\n              variant=\"outlined\"\r\n              style={{ width: '60%' }}\r\n              value={attrValue}\r\n            />\r\n            <div className=\"shto-attributes-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post('https://amove.alcodeit.com/add_new_attribute.php', {\r\n                      name: attrValue\r\n                    })\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        setAttrValue('');\r\n                        alertContext.setAlert(\r\n                          `${res.data.messagge}`,\r\n                          'success'\r\n                        );\r\n                        depoContext.getAttrNames();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.messagge}`, 'error');\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post('https://amove.alcodeit.com/add_new_attribute.php', {\r\n                      name: attrValue\r\n                    })\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        setAttrValue('');\r\n                        alertContext.setAlert(\r\n                          `${res.data.messagge}`,\r\n                          'success'\r\n                        );\r\n                        depoContext.getAttrNames();\r\n                        showAttrPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.messagge}`, 'error');\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                {' '}\r\n                Ruaj dhe Dil{' '}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"shto-attributes\">\r\n        <div className=\"shto-attributes-header\">\r\n          <h3>Attributet</h3>\r\n          <div className=\"shto-attributes-header-buttons\">\r\n            <Button\r\n              startIcon={<RemoveRedEyeOutlinedIcon />}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => showAllAttrNames(true)}\r\n            >\r\n              {' '}\r\n              Shiko atributet{' '}\r\n            </Button>\r\n            <Button\r\n              startIcon={<AddCircleOutlineOutlinedIcon />}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                showAttrPop(true);\r\n              }}\r\n            >\r\n              Shto atribut te ri\r\n            </Button>\r\n            <Button\r\n              startIcon={<AddCircleOutlineOutlinedIcon />}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => showAttrPopValue(true)}\r\n            >\r\n              Shto vlera ne atribut\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\" onClick={() => requestSort('id')}>\r\n                ID\r\n                {propertyName.key === 'id' &&\r\n                  propertyName.direction === 'ascending' && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                  )}\r\n                {propertyName.key === 'id' &&\r\n                  propertyName.direction === 'descending' && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"center\" onClick={() => requestSort('name')}>\r\n                Emri\r\n                {propertyName.key === 'name' &&\r\n                  propertyName.direction === 'ascending' && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                  )}\r\n                {propertyName.key === 'name' &&\r\n                  propertyName.direction === 'descending' && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"center\" onClick={() => requestSort('value')}>\r\n                Vlera\r\n                {propertyName.key === 'value' &&\r\n                  propertyName.direction === 'ascending' && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                  )}\r\n                {propertyName.key === 'value' &&\r\n                  propertyName.direction === 'descending' && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: '17px' }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"center\">Veprimet</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {attrValues.slice(start, end).map((attr) => (\r\n              <TableRow>\r\n                <TableCell align=\"center\"> {attr.id} </TableCell>\r\n                <TableCell align=\"center\"> {attr.name} </TableCell>\r\n                <TableCell align=\"center\"> {attr.value} </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EditOutlinedIcon\r\n                    onClick={() => {\r\n                      showEditPop(true);\r\n                      setEditvalue(attr.value);\r\n                      setEditID(attr.id);\r\n                    }}\r\n                    style={{ cursor: 'pointer' }}\r\n                  />\r\n                  <DeleteOutlineOutlinedIcon\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={() => {\r\n                      showDeletePop(true);\r\n                      setDeleteID(attr.id);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className=\"pagination\">\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <InputLabel style={{ marginRight: '10px' }} id=\"row\">\r\n              Attribute ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(attrValues.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoProduktPopup.jsx",["258","259"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport CancelPresentationIcon from \"@material-ui/icons/CancelPresentation\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nexport default function ShtoProduktPopup({ closePopup }) {\r\n  useEffect(() => {\r\n    depoContext.getAttrNames();\r\n    depoContext.getAttrValues();\r\n    depoContext.getCategoryProducts();\r\n  }, []);\r\n\r\n  const [titulli, setTitulli] = useState(\"\");\r\n  const [sku, setSku] = useState(\"\");\r\n  const [pershkrimi, setPershkrimi] = useState(\"\");\r\n  const [kategoriForm, setKategoriForm] = useState(\"\");\r\n  const [cmimi, setCmimi] = useState(0);\r\n  const [sasia, setSasia] = useState(0);\r\n  const [njesia, setNjesia] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [productAttributes, setProductAtrributes] = useState([]);\r\n  const [productAttributesNames, setProductAtrributesNames] = useState([]);\r\n  const [productAttributesValuesIDS, setProductAttributesValuesIDS] = useState(\r\n    []\r\n  );\r\n  const depoContext = useContext(DepoContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { attrNames, attrValues, categoryProducts } = depoContext;\r\n  const [arrayOfObjects, setArrayofObjects] = useState([]);\r\n\r\n  const writeDesc = (e) => {\r\n    setPershkrimi(e.target.value);\r\n  };\r\n\r\n  const arrayOfObject2 = productAttributesValuesIDS.map((id) =>\r\n    arrayOfObjects.filter((arrayObj) => arrayObj.id == id)\r\n  );\r\n  const arrayOfObject3 = arrayOfObject2.map((array) => array[0]);\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let fd = new FormData();\r\n    fd.append(\"titulli\", titulli);\r\n    fd.append(\"sku\", sku);\r\n    fd.append(\"pershkrimi\", pershkrimi);\r\n    fd.append(\"kategoria\", kategoriForm);\r\n    fd.append(\"cmimi\", cmimi);\r\n    fd.append(\"sasia\", sasia);\r\n    fd.append(\"njesia\", njesia);\r\n    fd.append(\"image\", image);\r\n    fd.append(\"attributes[]\", JSON.stringify(arrayOfObject3));\r\n    axios\r\n      .post(\"https://amove.alcodeit.com/shto_produkt.php\", fd)\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          alertContext.setAlert(\r\n            \"Plotesoni fushat,produkti nuk u shtua\",\r\n            \"error\"\r\n          );\r\n        } else if (res.data.status === 1) {\r\n          alertContext.setAlert(\"Produkti u shtua\", \"success\");\r\n          depoContext.getAllProducts();\r\n          closePopup();\r\n        }\r\n      });\r\n  };\r\n\r\n  const addNgjyrat = (e) => {\r\n    if (e.target.checked) {\r\n      setProductAtrributes(productAttributes.concat(e.target.value));\r\n    } else {\r\n      setProductAtrributes(\r\n        productAttributes.filter((attribute) => attribute !== e.target.value)\r\n      );\r\n    }\r\n  };\r\n  const addNames = (e) => {\r\n    if (e.target.checked) {\r\n      setProductAtrributesNames(productAttributesNames.concat(e.target.name));\r\n    } else {\r\n      setProductAtrributesNames(\r\n        productAttributesNames.filter(\r\n          (attribute) => attribute !== e.target.name\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const addIDS = (e) => {\r\n    if (e.target.checked) {\r\n      setProductAttributesValuesIDS(\r\n        productAttributesValuesIDS.concat(e.target.id)\r\n      );\r\n    } else {\r\n      setProductAttributesValuesIDS(\r\n        productAttributesValuesIDS.filter((attr) => attr !== e.target.id)\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"shtoprodukt-popup\">\r\n        <div\r\n          className=\"shtoprodukt-popup-opa\"\r\n          onClick={() => {\r\n            alertContext.setAlert(\"Shtimi i produktit u anullua\", \"warning\");\r\n            closePopup();\r\n          }}\r\n        ></div>\r\n        <div className=\"shtoprodukt-popup-form\">\r\n          <div className=\"shtoprodukt-popup-form-header\">\r\n            <h2>Shto Produkt</h2>\r\n            <CancelPresentationIcon\r\n              style={{ fontSize: \"35px\", cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                alertContext.setAlert(\r\n                  \"Shtimi i produktit u anullua\",\r\n                  \"warning\"\r\n                );\r\n                closePopup();\r\n              }}\r\n            />\r\n          </div>\r\n          <form className=\"form\" onSubmit={submit}>\r\n            <div className=\"form-titulli-sku\">\r\n              <div className=\"titulli\">\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setTitulli(e.target.value)}\r\n                  type=\"text\"\r\n                  style={{ width: \"70%\" }}\r\n                  placeholder=\"Titulli\"\r\n                  label=\"Titulli\"\r\n                />\r\n              </div>\r\n              <div className=\"sku\">\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setSku(e.target.value)}\r\n                  type=\"text\"\r\n                  style={{ width: \"60%\" }}\r\n                  placeholder=\"SKU\"\r\n                  label=\"SKU\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-pershkrimi-image\">\r\n              <div className=\"pershkrimi\">\r\n                <InputLabel>Pershkrimi</InputLabel>\r\n                <textarea\r\n                  onChange={writeDesc}\r\n                  style={{ width: \"80%\", height: \"80%\" }}\r\n                ></textarea>\r\n              </div>\r\n              <div\r\n                className={image === \"\" ? \"image\" : \"image outlinestyle-none\"}\r\n              >\r\n                {image === \"\" ? (\r\n                  <>\r\n                    <InputLabel\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      htmlFor=\"image\"\r\n                    >\r\n                      <AddIcon style={{ fontSize: \"70px\" }} /> upload{\" \"}\r\n                    </InputLabel>\r\n\r\n                    <Input\r\n                      onChange={(e) => {\r\n                        setImage(e.target.files[0]);\r\n                        setFile(URL.createObjectURL(e.target.files[0]));\r\n                      }}\r\n                      id=\"image\"\r\n                      type=\"file\"\r\n                      style={{ display: \"none\" }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <DeleteOutlineOutlinedIcon\r\n                      onClick={() => {\r\n                        setImage(\"\");\r\n                        setFile(\"\");\r\n                      }}\r\n                      className=\"delete-icon-image\"\r\n                    />\r\n                    <img src={file} alt=\"\" />\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"kategori-cmimi-stock\">\r\n              <FormControl variant=\"outlined\">\r\n                <InputLabel htmlFor=\"kategoria-label\">Kategoria</InputLabel>\r\n                <Select\r\n                  onChange={(e) => setKategoriForm(e.target.value)}\r\n                  style={{ width: \"150px\" }}\r\n                  value={kategoriForm === \"\" ? \"none\" : kategoriForm}\r\n                  label=\"Kategoria\"\r\n                  inputProps={{\r\n                    name: \"kategoria\",\r\n                    id: \"kategoria-label\",\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"\">None</MenuItem>\r\n                  {categoryProducts.map((category) => (\r\n                    <MenuItem value={category.name}> {category.name} </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                onChange={(e) => setCmimi(e.target.value)}\r\n                label=\"Cmimi\"\r\n                placeholder=\"Cmimi\"\r\n                type=\"number\"\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                onChange={(e) => setSasia(e.target.value)}\r\n                label=\"Stock\"\r\n                placeholder=\"Sasia\"\r\n                type=\"number\"\r\n              />\r\n              <FormControl variant=\"outlined\">\r\n                <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n                <Select\r\n                  value={njesia}\r\n                  onChange={(e) => setNjesia(e.target.value)}\r\n                  style={{ width: \"150px\" }}\r\n                  label=\"Njesia\"\r\n                  inputProps={{\r\n                    name: \"njesia\",\r\n                    id: \"njesia-label\",\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"cop\">Cop</MenuItem>\r\n                  <MenuItem value=\"kuti\">Kuti</MenuItem>\r\n                  <MenuItem value=\"pako\">Pako</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n\r\n            <div className=\"atribute-tjera\">\r\n              <h3 style={{ marginBottom: \"10px\" }}>Atribute te tjera</h3>\r\n              <div className=\"atributes-title\">\r\n                {attrNames.map((attr) => (\r\n                  <p key={attr.id_name}>\r\n                    {\" \"}\r\n                    <AddIcon style={{ fontSize: \"15px\" }} /> Mundesia e{\" \"}\r\n                    {attr.name}\r\n                  </p>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"ngjyrat-masat\">\r\n                {attrNames.map((attr) => (\r\n                  <div className=\"ngjyrat\" key={attr.name}>\r\n                    {attrValues\r\n                      .filter((attrValue) => attrValue.name_id === attr.id_name)\r\n                      .map((newValues) => (\r\n                        <FormControlLabel\r\n                          key={newValues.value}\r\n                          control={\r\n                            <Checkbox\r\n                              id={newValues.id}\r\n                              name={newValues.name}\r\n                              defaultValue={newValues.value}\r\n                              value={newValues.value}\r\n                              onClick={(e) => {\r\n                                addNames(e);\r\n                                addIDS(e);\r\n                                addNgjyrat(e);\r\n\r\n                                if (e.target.checked) {\r\n                                  setArrayofObjects((result) => [\r\n                                    ...result,\r\n                                    {\r\n                                      id: newValues.id,\r\n                                      sku: \"\",\r\n                                      cmimi: 0,\r\n                                      sasia: 0,\r\n                                    },\r\n                                  ]);\r\n                                } else {\r\n                                  setArrayofObjects(\r\n                                    arrayOfObjects.filter(\r\n                                      (object) => object.id !== newValues.id\r\n                                    )\r\n                                  );\r\n                                }\r\n                              }}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={newValues.value}\r\n                        />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"extra-attr-price\">\r\n              {attrNames.map((attrName) => (\r\n                <div\r\n                  className=\"extra-attr-price-names\"\r\n                  style={{\r\n                    display:\r\n                      productAttributesNames.some(\r\n                        (attr) => attr === attrName.name\r\n                      ) === true\r\n                        ? \"\"\r\n                        : \"none\",\r\n                  }}\r\n                >\r\n                  <p>{attrName.name}</p>\r\n                  {attrValues\r\n                    .filter(\r\n                      (attrValue) => attrValue.name_id === attrName.id_name\r\n                    )\r\n                    .map((newAttrValue) => (\r\n                      <Accordion\r\n                        style={{\r\n                          backgroundColor: \"#ededed\",\r\n                          display:\r\n                            productAttributes.some(\r\n                              (attr) => attr === newAttrValue.value\r\n                            ) === true\r\n                              ? \"\"\r\n                              : \"none\",\r\n                        }}\r\n                      >\r\n                        <AccordionSummary\r\n                          expandIcon={<ExpandMoreIcon />}\r\n                          aria-controls=\"panel1a-content\"\r\n                          id=\"panel1a-header\"\r\n                        >\r\n                          {newAttrValue.value}\r\n                        </AccordionSummary>\r\n                        <Divider />\r\n                        <AccordionDetails className=\"accordion-details\">\r\n                          {arrayOfObjects\r\n                            .filter(\r\n                              (arrObject) => arrObject.id === newAttrValue.id\r\n                            )\r\n                            .map((values) => (\r\n                              <>\r\n                                <TextField\r\n                                  label=\"SKU\"\r\n                                  variant=\"outlined\"\r\n                                  onChange={(e) => {\r\n                                    values.sku = e.target.value;\r\n                                  }}\r\n                                />\r\n                                <TextField\r\n                                  label=\"Cmimi\"\r\n                                  variant=\"outlined\"\r\n                                  type=\"number\"\r\n                                  onChange={(e) => {\r\n                                    values.cmimi = e.target.value;\r\n                                  }}\r\n                                />\r\n                                <TextField\r\n                                  label=\"Sasia\"\r\n                                  variant=\"outlined\"\r\n                                  type=\"number\"\r\n                                  onChange={(e) => {\r\n                                    values.sasia = e.target.value;\r\n                                  }}\r\n                                />\r\n                              </>\r\n                            ))}\r\n                        </AccordionDetails>\r\n                      </Accordion>\r\n                    ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  closePopup();\r\n                  alertContext.setAlert(\r\n                    \"Shtimi i produktit u anullua\",\r\n                    \"warning\"\r\n                  );\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n              <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                Publiko\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKlientPopup.jsx",["260"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nexport default function ShtoKlientPopup({ closePopup }) {\r\n  const [emri, setEmer] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [zonaForm, setZonaForm] = useState(\"\");\r\n  const [kategoriForm, setKategoriForm] = useState(\"\");\r\n  const [image, setAvatar] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const depoContext = useContext(DepoContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { categoryClients, zonaClients } = depoContext;\r\n\r\n  useEffect(() => {\r\n    depoContext.getCategoryClients();\r\n    depoContext.getZonaClients();\r\n  }, []);\r\n\r\n  const shtoKlient = (e) => {\r\n    e.preventDefault();\r\n\r\n    let avatar = new FormData();\r\n\r\n    avatar.append(\"name\", emri);\r\n    avatar.append(\"email\", email);\r\n    avatar.append(\"password\", password);\r\n    avatar.append(\"role\", 3);\r\n    avatar.append(\"zona\", zonaForm);\r\n    avatar.append(\"kategoria\", kategoriForm);\r\n    avatar.append(\"image\", image);\r\n\r\n    const config = {\r\n      headers: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n    axios\r\n      .post(\"https://amove.alcodeit.com/register_klient.php\", avatar, config)\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          alertContext.setAlert(\"Plotesoni te gjitha fushat!\", \"error\");\r\n        } else if (res.data.status === 1) {\r\n          alertContext.setAlert(\"Klienti u shtua!\", \"success\");\r\n          depoContext.getAllClients();\r\n          closePopup();\r\n          setEmer(\"\");\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          setZonaForm(\"\");\r\n          setKategoriForm(\"\");\r\n          setAvatar(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"shtoklient-popup\">\r\n      <div className=\"shtoklient-popup-opa\" onClick={() => closePopup()}></div>\r\n      <div className=\"shtoklient-popup-container\">\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            padding: \"2px 5px\",\r\n          }}\r\n        >\r\n          <CloseOutlinedIcon\r\n            color=\"secondary\"\r\n            fontSize={\"large\"}\r\n            cursor=\"pointer\"\r\n            onClick={() => closePopup()}\r\n          />\r\n        </div>\r\n        <form className=\"shtoklient-popup-form\" onSubmit={shtoKlient}>\r\n          <TextField\r\n            className=\"input-popup\"\r\n            label=\"Emri\"\r\n            variant=\"outlined\"\r\n            value={emri}\r\n            onChange={(e) => setEmer(e.target.value)}\r\n          />\r\n          <TextField\r\n            className=\"input-popup\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            value={email}\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <TextField\r\n            className=\"input-popup\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            value={password}\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <div className=\"select-group\">\r\n            <InputLabel id=\"zonaForm\">Zona</InputLabel>\r\n            <Select\r\n              className=\"input-select\"\r\n              labelId=\"zonaForm\"\r\n              value={zonaForm}\r\n              onChange={(e) => setZonaForm(e.target.value)}\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value=\"None\"></MenuItem>\r\n\r\n              {zonaClients.map((zona) => (\r\n                <MenuItem value={zona.name}>{zona.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n            <InputLabel id=\"kategoriForm\">Kategoria</InputLabel>\r\n            <Select\r\n              className=\"input-select\"\r\n              labelId=\"kategoriForm\"\r\n              value={kategoriForm}\r\n              onChange={(e) => setKategoriForm(e.target.value)}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              <MenuItem value=\"None\"></MenuItem>\r\n              {categoryClients.map((category) => (\r\n                <MenuItem value={category.name}>{category.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n          {image === \"\" ? (\r\n            <>\r\n              <InputLabel\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                htmlFor=\"image\"\r\n              >\r\n                <AddIcon style={{ fontSize: \"70px\" }} /> Upload image{\" \"}\r\n              </InputLabel>\r\n              <Input\r\n                type=\"file\"\r\n                id=\"image\"\r\n                className=\"input-file\"\r\n                style={{ display: \"none\" }}\r\n                onChange={(e) => {\r\n                  setAvatar(e.target.files[0]);\r\n                  setFile(URL.createObjectURL(e.target.files[0]));\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <div className=\"image-klient-form\">\r\n              <DeleteOutlineOutlinedIcon\r\n                onClick={() => {\r\n                  setAvatar(\"\");\r\n                  setFile(\"\");\r\n                }}\r\n                className=\"delete-icon-image\"\r\n              />\r\n              <img src={file} alt=\"\" />\r\n            </div>\r\n          )}\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            style={{ width: \"40%\", marginTop: \"50px\", marginBottom: \"40px\" }}\r\n          >\r\n            Shto\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",["261","262"],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollapseReducer.jsx",["263"],"import { SET_COLLAPSE_FALSE, SET_COLLAPSE_TRUE } from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_COLLAPSE_TRUE:\r\n      return action.payload;\r\n    case SET_COLLAPSE_FALSE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseContext.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoOfertePop.jsx",["264","265"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport OfertaSingleProductForm from \"./ofertaForms/OfertaSingleProductForm\";\r\nimport CategoryProductOfertaForm from \"./ofertaForms/CategoryProductOfertaForm\";\r\nimport ClientSpecifikOfertaForm from \"./ofertaForms/ClientSpecifikOfertaForm\";\r\nimport CategoryClientOfertaForm from \"./ofertaForms/CategoryClientOfertaForm\";\r\nimport OfertSetForm from \"./ofertaForms/OfertSetForm\";\r\nimport OfertaGrupForm from \"./ofertaForms/OfertaGrupForm\";\r\nimport { CloseOutlined } from \"@material-ui/icons\";\r\nexport default function ShtoOfertePop({ closePop }) {\r\n  const [ofertaType, setOfertaType] = useState(\"singleProduct\");\r\n\r\n  return (\r\n    <div className=\"shto-oferte-pop\">\r\n      <div className=\"shto-oferte-pop-opa\" onClick={closePop}></div>\r\n      <div className=\"shto-oferte-pop-container\">\r\n        <CloseOutlined\r\n          style={{\r\n            alignSelf: \"flex-end\",\r\n            marginRight: \"10px\",\r\n            marginTop: \"5px\",\r\n            fontSize: \"30px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={closePop}\r\n        />\r\n        <div className=\"shto-oferte-pop-cotnainer-header-tabs\">\r\n          <Button\r\n            style={{ color: ofertaType === \"singleProduct\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"singleProduct\")}\r\n          >\r\n            Single Product\r\n          </Button>\r\n          <Button\r\n            style={{ color: ofertaType === \"categoryProduct\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"categoryProduct\")}\r\n          >\r\n            Kategori Produkti\r\n          </Button>\r\n          <Button\r\n            style={{ color: ofertaType === \"specifikClient\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"specifikClient\")}\r\n          >\r\n            Klient Specifik\r\n          </Button>\r\n          <Button\r\n            style={{ color: ofertaType === \"categoryClient\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"categoryClient\")}\r\n          >\r\n            Kategori Klienti\r\n          </Button>\r\n          <Button\r\n            style={{ color: ofertaType === \"ofertSet\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"ofertSet\")}\r\n          >\r\n            Ofert Set\r\n          </Button>\r\n          <Button\r\n            style={{ color: ofertaType === \"ofertGrup\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"ofertGrup\")}\r\n          >\r\n            Ofert Grup\r\n          </Button>\r\n        </div>\r\n        <div className=\"shto-oferte-pop-cotnainer-forms\">\r\n          {ofertaType === \"singleProduct\" && <OfertaSingleProductForm />}\r\n          {ofertaType === \"categoryProduct\" && <CategoryProductOfertaForm />}\r\n          {ofertaType === \"specifikClient\" && <ClientSpecifikOfertaForm />}\r\n          {ofertaType === \"categoryClient\" && <CategoryClientOfertaForm />}\r\n          {ofertaType === \"ofertSet\" && <OfertSetForm />}\r\n          {ofertaType === \"ofertGrup\" && <OfertaGrupForm />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\AccountDetails.jsx",["266"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\r\nimport axios from \"axios\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\n\r\nexport default function AccountDetails() {\r\n  const depoContext = useContext(DepoContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { user } = depoContext;\r\n  const [userSettings, setUserSettings] = useState(\"general\");\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editEmail, setEditEmail] = useState(\"\");\r\n  const [deletedImage, setDeletedImage] = useState(false);\r\n  const [editImage, setEditImage] = useState(\"\");\r\n  const [editFile, setEditFile] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setEditImage(user.image_profile);\r\n    setEditFile(user.image_profile);\r\n    setEditName(user.name);\r\n    setEditEmail(user.email);\r\n  },[]);\r\n\r\n  const onChangeGeneral = (e) => {\r\n    e.preventDefault();\r\n\r\n    const fd = new FormData();\r\n    fd.append(\"id\", user.id);\r\n    fd.append(\"name\", editName);\r\n    fd.append(\"email\", editEmail);\r\n    fd.append(\"image\", editImage);\r\n\r\n    axios\r\n      .post(\"https://amove.alcodeit.com/change_general_settings.php\", fd)\r\n      .then((res) => {\r\n        if (res.data.status === 1) {\r\n          alertContext.setAlert(`${res.data.message}`, \"success\");\r\n          depoContext.getUser();\r\n        } else {\r\n          alertContext.setAlert(`${res.data.message}`, \"error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\"https://amove.alcodeit.com/change_password.php\", {\r\n        id: user.id,\r\n        newPassword: newPassword,\r\n        oldPassword: currentPassword,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.status === 1) {\r\n          alertContext.setAlert(`${res.data.message}`, \"success\");\r\n          setNewPassword(\"\");\r\n          setCurrentPassword(\"\");\r\n        } else {\r\n          alertContext.setAlert(`${res.data.message}`, \"error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"account-details\">\r\n        <div className=\"account-details-buttons\">\r\n          <Button\r\n            style={{\r\n              color: userSettings === \"general\" ? \"#1b75bc\" : \"inherit\",\r\n            }}\r\n            onClick={() => setUserSettings(\"general\")}\r\n          >\r\n            {\" \"}\r\n            General Info{\" \"}\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              color: userSettings === \"password\" ? \"#1b75bc\" : \"inherit\",\r\n            }}\r\n            onClick={() => setUserSettings(\"password\")}\r\n          >\r\n            {\" \"}\r\n            Change Password{\" \"}\r\n          </Button>\r\n        </div>\r\n        <div className=\"account-details-container\">\r\n          {userSettings === \"general\" && (\r\n            <form\r\n              className=\"account-details-general\"\r\n              onSubmit={onChangeGeneral}\r\n            >\r\n              <div className=\"account-details-general-left\">\r\n                <div className=\"account-details-general-image\">\r\n                  {editImage === \"\" ? (\r\n                    <>\r\n                      <InputLabel\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        htmlFor=\"image\"\r\n                      >\r\n                        <AddIcon style={{ fontSize: \"70px\" }} /> upload{\" \"}\r\n                      </InputLabel>\r\n                      <Input\r\n                        onChange={(e) => {\r\n                          setEditImage(e.target.files[0]);\r\n                          setEditFile(URL.createObjectURL(e.target.files[0]));\r\n                        }}\r\n                        id=\"image\"\r\n                        type=\"file\"\r\n                        style={{ display: \"none\" }}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {deletedImage === true ? (\r\n                        <>\r\n                          <div className=\"account-details-delete-img\">\r\n                            <DeleteOutlineOutlinedIcon\r\n                              onClick={() => {\r\n                                setEditImage(\"\");\r\n                                setEditFile(\"\");\r\n                                setDeletedImage(true);\r\n                              }}\r\n                              style={{\r\n                                fontSize: \"30px\",\r\n                                color: \"red\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <img src={editFile} alt=\"\" />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"account-details-delete-img\">\r\n                            <DeleteOutlineOutlinedIcon\r\n                              onClick={() => {\r\n                                setEditImage(\"\");\r\n                                setEditFile(\"\");\r\n                                setDeletedImage(true);\r\n                              }}\r\n                              style={{\r\n                                fontSize: \"30px\",\r\n                                color: \"red\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <img\r\n                            src={`https://amove.alcodeit.com/images/${editImage}`}\r\n                            alt=\"\"\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"account-details-general-right\">\r\n                <TextField\r\n                  value={editName}\r\n                  onChange={(e) => setEditName(e.target.value)}\r\n                  label=\"Emri\"\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <TextField\r\n                  value={editEmail}\r\n                  onChange={(e) => setEditEmail(e.target.value)}\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <Button\r\n                  startIcon={<EditOutlinedIcon />}\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  style={{ padding: \"6px 50px\", fontSize: \"16px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n          {userSettings === \"password\" && (\r\n            <form\r\n              className=\"account-details-changepasword\"\r\n              onSubmit={onChangePassword}\r\n            >\r\n              <TextField\r\n                style={{ width: \"60%\" }}\r\n                label=\"Current Password\"\r\n                variant=\"outlined\"\r\n                value={currentPassword}\r\n                onChange={(e) => setCurrentPassword(e.target.value)}\r\n                type=\"password\"\r\n              />\r\n              <TextField\r\n                style={{ width: \"60%\" }}\r\n                label=\"New Password\"\r\n                variant=\"outlined\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                type=\"password\"\r\n              />\r\n              <Button\r\n                startIcon={<SaveOutlinedIcon />}\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n              >\r\n                Ruaj\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertaSingleProductForm.jsx",["267","268"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport default function OfertaSingleProductForm() {\r\n  const depoContext = useContext(DepoContext);\r\n  const {\r\n    produktet,\r\n    produktAttr,\r\n    attrValues,\r\n    klientet,\r\n    categoryClients,\r\n  } = depoContext;\r\n  const [produktiZgjedhur, setProduktiZgjedhur] = useState({});\r\n  const [njesia, setNjesia] = useState(\"\");\r\n  const [ulja, setUlja] = useState(\"\");\r\n  const [dataFillimit, setDataFillimit] = useState(\"\");\r\n  const [dataMbarimit, setDataMbarimit] = useState(\"\");\r\n  const attrIDPr = produktAttr.map((pr) => pr.attr_id);\r\n  const attrProduktesh = attrValues.filter((atrr) =>\r\n    attrIDPr.includes(atrr.id)\r\n  );\r\n  const [teGjitheKlientet, setTeGjitheKlientet] = useState(false);\r\n  const [teGithaAtributet, setTeGjithaAtributet] = useState(false);\r\n  useEffect(() => {\r\n    depoContext.getAllProducts();\r\n    depoContext.getAttrValues();\r\n    depoContext.getCategoryClients();\r\n    depoContext.getAllClients();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (produktiZgjedhur === null) {\r\n      depoContext.getProduktAttr(0);\r\n    } else {\r\n      depoContext.getProduktAttr(produktiZgjedhur.id);\r\n    }\r\n  }, [produktiZgjedhur]);\r\n\r\n  return (\r\n    <>\r\n      <form className=\"ofert-sinlgeProduct-form\">\r\n        <div className=\"ofert-singleProduct-form-emriProduktit\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={produktet}\r\n            getOptionLabel={(option) => option.titulli}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setProduktiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Emri Produktit\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={ulja}\r\n            onChange={(e) => setUlja(e.target.value)}\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={njesia}\r\n              onChange={(e) => setNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setDataFillimit(e.target.value)}\r\n            value={dataFillimit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={dataMbarimit}\r\n            onChange={(e) => setDataMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {produktiZgjedhur !== {} || produktiZgjedhur !== null ? (\r\n          <div className=\"ofert-singleProduct-form-prAttributes\">\r\n            <>\r\n              {attrProduktesh.length === 0 ? (\r\n                <p> Ky produkt nuk ka atribute </p>\r\n              ) : (\r\n                <>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        onChange={(e) => setTeGjithaAtributet(e.target.checked)}\r\n                        checked={teGithaAtributet}\r\n                      />\r\n                    }\r\n                    label={\"Zgjidh te gjitha\"}\r\n                  />\r\n                  <div className=\"ofert-singleProduct-form-attributet\">\r\n                    {attrProduktesh.map((attr) => (\r\n                      <FormControlLabel\r\n                        disabled={teGithaAtributet}\r\n                        control={<Checkbox color={\"primary\"} />}\r\n                        label={attr.value}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div className=\"ofert-singleProduct-form-kategoriKlienti\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            disabled={teGjitheKlientet}\r\n            multiple\r\n            filterSelectedOptions\r\n            options={categoryClients}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setProduktiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategori Klienti\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            multiple\r\n            filterSelectedOptions\r\n            disabled={teGjitheKlientet}\r\n            options={klientet}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setProduktiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Klient Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color={\"primary\"}\r\n                onChange={(e) => setTeGjitheKlientet(e.target.checked)}\r\n                checked={teGjitheKlientet}\r\n              />\r\n            }\r\n            label={\"Zgjidh te gjithe klientet\"}\r\n          />\r\n        </div>\r\n        <div className=\"ofert-singleProduct-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\CategoryProductOfertaForm.jsx",["269","270","271","272"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function CategoryProductOfertaForm() {\r\n  useEffect(() => {\r\n    depoContext.getCategoryProducts();\r\n    depoContext.getCategoryClients();\r\n    depoContext.getAllClients();\r\n  }, []);\r\n\r\n  const depoContext = useContext(DepoContext);\r\n  const { categoryProducts, categoryClients, klientet } = depoContext;\r\n  const [kategoriProduktZgjedhur, setKategoriProduktZgjedhur] = useState({});\r\n  const [njesia, setNjesia] = useState(\"\");\r\n  const [ulja, setUlja] = useState(\"\");\r\n  const [dataFillimit, setDataFillimit] = useState(\"\");\r\n  const [dataMbarimit, setDataMbarimit] = useState(\"\");\r\n  const [kategoriteKlienteve, setKategoriteKlienteve] = useState([]);\r\n  const [tegjithekateogritKient, settegjitheKategoriteKliente] = useState(\r\n    false\r\n  );\r\n  const [klientSpecifik, setKlientSpecifik] = useState({});\r\n\r\n  return (\r\n    <>\r\n      <form className=\"ofert-categoryProduct-form\">\r\n        <div className=\"ofert-categoryProduct-form-kategoriProdukti\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={categoryProducts}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKategoriProduktZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategoria e Produktit\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={ulja}\r\n            onChange={(e) => setUlja(e.target.value)}\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={njesia}\r\n              onChange={(e) => setNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setDataFillimit(e.target.value)}\r\n            value={dataFillimit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={dataMbarimit}\r\n            onChange={(e) => setDataMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"ofert-categoryProduct-form-kategoriKlienti\">\r\n          <Autocomplete\r\n            multiple\r\n            filterSelectedOptions\r\n            id=\"combo-box-demo\"\r\n            options={categoryClients}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            disabled={tegjithekateogritKient}\r\n            onChange={(event, newValue) => {\r\n              setKategoriteKlienteve(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategorite e Klienteve\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                id={\"check-all-categoriesClient\"}\r\n                name={\"check-all-categoriesClient\"}\r\n                defaultValue={\"check-all-categoriesClient\"}\r\n                onChange={() => {\r\n                  settegjitheKategoriteKliente(!tegjithekateogritKient);\r\n                }}\r\n                color=\"primary\"\r\n                checked={tegjithekateogritKient}\r\n              />\r\n            }\r\n            label={\"Zgjidh te gjithe kategorite e klienteve\"}\r\n          />\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            multiple\r\n            options={klientet}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKlientSpecifik(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Klient Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"ofert-categoryProduct-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\ClientSpecifikOfertaForm.jsx",["273","274","275","276"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PlaylistAddOutlinedIcon from \"@material-ui/icons/PlaylistAddOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\n\r\nexport default function ClientSpecifikOfertaForm() {\r\n  useEffect(() => {\r\n    depoContext.getAllClients();\r\n    depoContext.getCategoryProducts();\r\n    depoContext.getAllProducts();\r\n  }, []);\r\n\r\n  const depoContext = useContext(DepoContext);\r\n  const { klientet, categoryProducts, produktet } = depoContext;\r\n  const [emriKlientit, setEmriKlientit] = useState({});\r\n  const [njesia, setNjesia] = useState(\"\");\r\n  const [ulja, setUlja] = useState(\"\");\r\n  const [dataFillimit, setDataFillimit] = useState(\"\");\r\n  const [dataMbarimit, setDataMbarimit] = useState(\"\");\r\n  const [kategoriteProdukteve, setKategoriteProdukteve] = useState([]);\r\n  const [produktSpecifik, setProduktSpecifik] = useState([]);\r\n  const [setet, setSetet] = useState([\r\n    { emriProduktit: {}, bli: \"\", perfito: \"\" },\r\n  ]);\r\n\r\n  const deleteSet = (seti) => {\r\n    setSetet(setet.filter((obj) => obj !== seti));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"oferta-clientSpecifikForm-form\">\r\n        <div className=\"oferta-clientSpecifikForm-form-emerKlienti\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={klientet}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setEmriKlientit(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Emri Klientit\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={ulja}\r\n            onChange={(e) => setUlja(e.target.value)}\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={njesia}\r\n              onChange={(e) => setNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setDataFillimit(e.target.value)}\r\n            value={dataFillimit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={dataMbarimit}\r\n            onChange={(e) => setDataMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-clientSpecifikForm-form-kategoriProdukti\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            multiple\r\n            filterSelectedOptions\r\n            options={categoryProducts}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKategoriteProdukteve(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategorite e Produkteve\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            multiple\r\n            filterSelectedOptions\r\n            options={produktet}\r\n            getOptionLabel={(option) => option.titulli}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setProduktSpecifik(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Produkt Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-clientSpecifikForm-form-setProdukti\">\r\n          <div className=\"oferta-clientSpecifikForm-form-setProdukti-btnShtoSet\">\r\n            <p>Set Produkti</p>\r\n            <Button\r\n              startIcon={<PlaylistAddOutlinedIcon />}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setSetet((result) => [\r\n                  ...result,\r\n                  { emriProduktit: {}, bli: \"\", perfito: \"\" },\r\n                ]);\r\n              }}\r\n            >\r\n              Shto set\r\n            </Button>\r\n          </div>\r\n          {setet.map((set) => (\r\n            <div className=\"oferta-clientSpecifikForm-form-setProdukti-item\">\r\n              <DeleteOutlineOutlinedIcon\r\n                onClick={() => deleteSet(set)}\r\n                style={{\r\n                  color: \"red\",\r\n                  fontSize: \"25px\",\r\n                  cursor: \"pointer\",\r\n                  display: setet.length === 1 ? \"none\" : \"\",\r\n                }}\r\n              />\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={produktet}\r\n                getOptionLabel={(option) => option.titulli}\r\n                style={{ width: \"30%\" }}\r\n                autoHighlight\r\n                onChange={(event, newValue) => {\r\n                  set.emriProduktit = newValue;\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"Produktet\" variant=\"outlined\" />\r\n                )}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Bli\"\r\n                type={\"number\"}\r\n                onChange={(e) => (set.bli = e.target.value)}\r\n              />\r\n              <p style={{ fontSize: \"30px\" }}>+</p>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Perfito\"\r\n                type={\"number\"}\r\n                onChange={(e) => (set.perfito = e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"oferta-clientSpecifikForm-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\CategoryClientOfertaForm.jsx",["277","278","279","280","281","282"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PlaylistAddOutlinedIcon from \"@material-ui/icons/PlaylistAddOutlined\";\r\nimport DeleteSweepOutlinedIcon from \"@material-ui/icons/DeleteSweepOutlined\";\r\n\r\nexport default function CategoryClientOfertaForm() {\r\n  useEffect(() => {\r\n    depoContext.getCategoryClients();\r\n    depoContext.getCategoryProducts();\r\n    depoContext.getAllProducts();\r\n  }, []);\r\n\r\n  const depoContext = useContext(DepoContext);\r\n  const { categoryClients, produktet, categoryProducts } = depoContext;\r\n  const [kategoriKlientiZgjedhur, setKategoriKlientiZgjedhur] = useState({});\r\n  const [njesia, setNjesia] = useState(\"\");\r\n  const [ulja, setUlja] = useState(\"\");\r\n  const [dataFillimit, setDataFillimit] = useState(\"\");\r\n  const [dataMbarimit, setDataMbarimit] = useState(\"\");\r\n  const [kategoriteProdukteve, setKategoriteProdukteve] = useState([]);\r\n  const [produkteSpecifike, setProdukteSpecfike] = useState([]);\r\n  const [setet, setSetet] = useState([\r\n    { emriProduktit: {}, bli: \"\", perfito: \"\" },\r\n  ]);\r\n  const deleteSet = (seti) => {\r\n    setSetet(setet.filter((obj) => obj !== seti));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"oferta-categoryClient-form\">\r\n        <div className=\"oferta-categoryClient-form-catKlient\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={categoryClients}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKategoriKlientiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategoria Klientit\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={ulja}\r\n            onChange={(e) => setUlja(e.target.value)}\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={njesia}\r\n              onChange={(e) => setNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setDataFillimit(e.target.value)}\r\n            value={dataFillimit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={dataMbarimit}\r\n            onChange={(e) => setDataMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-categoryClient-form-categoryProduct\">\r\n          <Autocomplete\r\n            multiple\r\n            filterSelectedOptions\r\n            id=\"combo-box-demo\"\r\n            options={categoryProducts}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKategoriKlientiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategoria e Produktit\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            filterSelectedOptions\r\n            id=\"combo-box-demo\"\r\n            options={produktet}\r\n            getOptionLabel={(option) => option.titulli}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKategoriKlientiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Produkt Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-categoryClient-form-setProduktesh\">\r\n          <div className=\"oferta-categoryClient-form-setProduktesh-btnShtoSet\">\r\n            <p>Set Produktesh</p>\r\n            <Button\r\n              startIcon={<PlaylistAddOutlinedIcon />}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setSetet((result) => [\r\n                  ...result,\r\n                  { emriProduktit: {}, bli: \"\", perfito: \"\" },\r\n                ]);\r\n              }}\r\n            >\r\n              Shto set\r\n            </Button>\r\n          </div>\r\n          {setet.map((set) => (\r\n            <div className=\"oferta-categoryClient-form-setProduktesh-item\">\r\n              <DeleteSweepOutlinedIcon\r\n                style={{\r\n                  color: \"red\",\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"25px\",\r\n                  display: setet.length === 1 ? \"none\" : \"\",\r\n                }}\r\n                onClick={() => deleteSet(set)}\r\n              />\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={produktet}\r\n                getOptionLabel={(option) => option.titulli}\r\n                style={{ width: \"30%\" }}\r\n                autoHighlight\r\n                onChange={(event, newValue) => {\r\n                  set.emriProduktit = newValue;\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"Produktet\" variant=\"outlined\" />\r\n                )}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Bli\"\r\n                type={\"number\"}\r\n                onChange={(e) => (set.bli = e.target.value)}\r\n              />\r\n              <p style={{ fontSize: \"30px\" }}>+</p>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Perfito\"\r\n                type={\"number\"}\r\n                onChange={(e) => (set.perfito = e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"oferta-categoryClient-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertSetForm.jsx",["283"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PlaylistAddOutlinedIcon from \"@material-ui/icons/PlaylistAddOutlined\";\r\nimport DeleteSweepOutlinedIcon from \"@material-ui/icons/DeleteSweepOutlined\";\r\n\r\nexport default function OfertSetForm() {\r\n  useEffect(() => {\r\n    depoContext.getAllProducts();\r\n  }, []);\r\n\r\n  const depoContext = useContext(DepoContext);\r\n  const { produktet } = depoContext;\r\n  const [setet, setSetet] = useState([\r\n    {\r\n      emriProduktit: {},\r\n      sasiaProduktit: \"\",\r\n      sasiaFalas: \"\",\r\n      produktiDhurat: {},\r\n    },\r\n  ]);\r\n\r\n  const deleteSet = (seti) => {\r\n    setSetet(setet.filter((obj) => obj !== seti));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"oferta-set-form\">\r\n        <div className=\"oferta-set-form-shtoSetBtn\">\r\n          <Button\r\n            startIcon={<PlaylistAddOutlinedIcon />}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={() => {\r\n              setSetet((result) => [\r\n                ...result,\r\n                {\r\n                  emriProduktit: {},\r\n                  sasiaProduktit: \"\",\r\n                  sasiaFalas: \"\",\r\n                  produktiDhurat: {},\r\n                },\r\n              ]);\r\n            }}\r\n          >\r\n            Shto Set\r\n          </Button>\r\n        </div>\r\n\r\n        {setet.map((set, index) => (\r\n          <div key={index} className=\"oferta-set-form-emriProduktit\">\r\n            <DeleteSweepOutlinedIcon\r\n              style={{\r\n                color: \"red\",\r\n                fontSize: \"26px\",\r\n                cursor: \"pointer\",\r\n                display: setet.length === 1 ? \"none\" : \"\",\r\n              }}\r\n              onClick={() => deleteSet(set)}\r\n            />\r\n            <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={produktet}\r\n              getOptionLabel={(option) => option.titulli}\r\n              style={{ width: 200 }}\r\n              autoHighlight\r\n              onChange={(event, newValue) => {\r\n                set.emriProduktit = newValue;\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Emri Produktit\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n            <TextField\r\n              label=\"Sasia\"\r\n              onChange={(e) => (set.sasiaProduktit = e.target.value)}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n            />\r\n            <TextField\r\n              label=\"Falas\"\r\n              onChange={(e) => (set.sasiaFalas = e.target.value)}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n            />\r\n            <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={produktet}\r\n              getOptionLabel={(option) => option.titulli}\r\n              style={{ width: 200 }}\r\n              autoHighlight\r\n              onChange={(event, newValue) => {\r\n                set.produktiDhurat = newValue;\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Produkti Dhurat\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        <div className=\"oferta-set-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertaGrupForm.jsx",["284","285","286","287","288"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nexport default function OfertaGrupForm() {\r\n  useEffect(() => {\r\n    depoContext.getCategoryClients();\r\n    depoContext.getCategoryProducts();\r\n    depoContext.getAllProducts();\r\n    depoContext.getAllClients();\r\n  }, []);\r\n  const depoContext = useContext(DepoContext);\r\n  const {\r\n    categoryClients,\r\n    produktet,\r\n    categoryProducts,\r\n    klientet,\r\n  } = depoContext;\r\n  const [catProductZgjedhur, setCatProductZgjedhur] = useState({});\r\n  const [catPrUlja, setCatPrUlja] = useState(\"\");\r\n  const [catPrNjesia, setCatPrNjesia] = useState(\"\");\r\n  const [catPrPeriudhaFillimit, setCatPrPeriudhaFillimit] = useState(\"\");\r\n  const [catPrPeriudhaMbarimit, setCatPrPeriudhaMbarimit] = useState(\"\");\r\n\r\n  const [produktSpecifikZgjedhur, setProduktSpecifikZgjedhur] = useState({});\r\n  const [prSpeUlja, setPrSpeUlja] = useState(\"\");\r\n  const [prSpeNjesia, setPrSpeNjesia] = useState(\"\");\r\n  const [prSpePeriudhaFillmit, setPrSpePeriudhaFillmit] = useState(\"\");\r\n  const [prSpePeriudhaMbarimit, setPrSpePeriudhaMbarimit] = useState(\"\");\r\n\r\n  const [kategoriKlientiZgjedhur, setKategoriKlientiZgjedhur] = useState({});\r\n  const [katKliUlja, setKatKliUlja] = useState(\"\");\r\n  const [katKliNjesia, setKatKliNjesia] = useState(\"\");\r\n  const [katKliPeriudhaFillimit, setKatKliPeriudhaFillimit] = useState(\"\");\r\n  const [katKliPeriudhaMbarimit, setKatKliPeriudhaMbarimit] = useState(\"\");\r\n  const [tegjithekateogritKient, settegjitheKategoriteKliente] = useState(\r\n    false\r\n  );\r\n  const [klientSpecifik, setKlientSpecifik] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <form className=\"oferta-grup-form\">\r\n        <div className=\"oferta-grup-form-kategoriProdukti\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={categoryProducts}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setCatProductZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategoria Produktit\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={catPrUlja}\r\n            onChange={(e) => setCatPrUlja(e.target.value)}\r\n            type=\"number\"\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={catPrNjesia}\r\n              onChange={(e) => setCatPrNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setCatPrPeriudhaFillimit(e.target.value)}\r\n            value={catPrPeriudhaFillimit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={catPrPeriudhaMbarimit}\r\n            onChange={(e) => setCatPrPeriudhaMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-grup-form-produktSpecifik\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={produktet}\r\n            getOptionLabel={(option) => option.titulli}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setProduktSpecifikZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Produkt Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={prSpeUlja}\r\n            onChange={(e) => setPrSpeUlja(e.target.value)}\r\n            type=\"number\"\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={prSpeNjesia}\r\n              onChange={(e) => setPrSpeNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setPrSpePeriudhaFillmit(e.target.value)}\r\n            value={prSpePeriudhaFillmit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={prSpePeriudhaMbarimit}\r\n            onChange={(e) => setPrSpePeriudhaMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-grup-form-kategoriKlienti\">\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Autocomplete\r\n              disabled={tegjithekateogritKient}\r\n              id=\"combo-box-demo\"\r\n              options={categoryClients}\r\n              getOptionLabel={(option) => option.name}\r\n              style={{ width: 200 }}\r\n              autoHighlight\r\n              onChange={(event, newValue) => {\r\n                setKategoriKlientiZgjedhur(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Kategori Klienti\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n            <TextField\r\n              style={{ width: \"100px\" }}\r\n              variant=\"outlined\"\r\n              label=\"Ulja\"\r\n              value={katKliUlja}\r\n              onChange={(e) => setKatKliUlja(e.target.value)}\r\n              type=\"number\"\r\n            />\r\n            <FormControl variant=\"outlined\">\r\n              <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n              <Select\r\n                value={katKliNjesia}\r\n                onChange={(e) => setKatKliNjesia(e.target.value)}\r\n                style={{ width: \"130px\" }}\r\n                label=\"Status\"\r\n                inputProps={{\r\n                  name: \"status\",\r\n                  id: \"njesia-label\",\r\n                }}\r\n              >\r\n                <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n                <MenuItem value={\"%\"}>%</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              label=\"Data e fillimit\"\r\n              onChange={(e) => setKatKliPeriudhaFillimit(e.target.value)}\r\n              value={katKliPeriudhaFillimit}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              label=\"Data e mbarimit\"\r\n              value={katKliPeriudhaMbarimit}\r\n              onChange={(e) => setKatKliPeriudhaMbarimit(e.target.value)}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </div>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                id={\"check-all-categoriesClient\"}\r\n                name={\"check-all-categoriesClient\"}\r\n                defaultValue={\"check-all-categoriesClient\"}\r\n                onChange={() => {\r\n                  settegjitheKategoriteKliente(!tegjithekateogritKient);\r\n                }}\r\n                color=\"primary\"\r\n                checked={tegjithekateogritKient}\r\n              />\r\n            }\r\n            label={\"Zgjidh te gjithe kategorite e klienteve\"}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-grup-form-klientSpecifik\">\r\n          <Autocomplete\r\n            multiple\r\n            disabled={tegjithekateogritKient}\r\n            filterSelectedOptions\r\n            id=\"combo-box-demo\"\r\n            options={klientet}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKlientSpecifik(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Klient Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-grup-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":29,"column":6,"nodeType":"295","endLine":29,"endColumn":8,"suggestions":"296"},{"ruleId":"293","severity":1,"message":"297","line":37,"column":6,"nodeType":"295","endLine":37,"endColumn":8,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":16,"column":1,"nodeType":"301","endLine":45,"endColumn":3},{"ruleId":"299","severity":1,"message":"300","line":10,"column":1,"nodeType":"301","endLine":27,"endColumn":3},{"ruleId":"299","severity":1,"message":"300","line":3,"column":1,"nodeType":"301","endLine":12,"endColumn":2},{"ruleId":"293","severity":1,"message":"302","line":89,"column":6,"nodeType":"295","endLine":89,"endColumn":8,"suggestions":"303"},{"ruleId":"293","severity":1,"message":"294","line":33,"column":6,"nodeType":"295","endLine":33,"endColumn":8,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":49,"column":51,"nodeType":"307","messageId":"308","endLine":49,"endColumn":53},{"ruleId":"293","severity":1,"message":"294","line":95,"column":6,"nodeType":"295","endLine":95,"endColumn":8,"suggestions":"309"},{"ruleId":"310","severity":1,"message":"311","line":19,"column":59,"nodeType":"312","messageId":"313","endLine":19,"endColumn":61},{"ruleId":"293","severity":1,"message":"297","line":13,"column":6,"nodeType":"295","endLine":13,"endColumn":8,"suggestions":"314"},{"ruleId":"293","severity":1,"message":"297","line":110,"column":6,"nodeType":"295","endLine":110,"endColumn":8,"suggestions":"315"},{"ruleId":"293","severity":1,"message":"297","line":131,"column":6,"nodeType":"295","endLine":131,"endColumn":8,"suggestions":"316"},{"ruleId":"310","severity":1,"message":"311","line":138,"column":14,"nodeType":"312","messageId":"313","endLine":138,"endColumn":16},{"ruleId":"310","severity":1,"message":"311","line":473,"column":59,"nodeType":"312","messageId":"313","endLine":473,"endColumn":61},{"ruleId":"293","severity":1,"message":"297","line":30,"column":6,"nodeType":"295","endLine":30,"endColumn":8,"suggestions":"317"},{"ruleId":"293","severity":1,"message":"297","line":67,"column":6,"nodeType":"295","endLine":67,"endColumn":8,"suggestions":"318"},{"ruleId":"293","severity":1,"message":"297","line":72,"column":6,"nodeType":"295","endLine":72,"endColumn":8,"suggestions":"319"},{"ruleId":"293","severity":1,"message":"297","line":72,"column":6,"nodeType":"295","endLine":72,"endColumn":8,"suggestions":"320"},{"ruleId":"293","severity":1,"message":"297","line":77,"column":6,"nodeType":"295","endLine":77,"endColumn":8,"suggestions":"321"},{"ruleId":"293","severity":1,"message":"297","line":28,"column":6,"nodeType":"295","endLine":28,"endColumn":8,"suggestions":"322"},{"ruleId":"310","severity":1,"message":"311","line":54,"column":53,"nodeType":"312","messageId":"313","endLine":54,"endColumn":55},{"ruleId":"293","severity":1,"message":"297","line":30,"column":6,"nodeType":"295","endLine":30,"endColumn":8,"suggestions":"323"},{"ruleId":"289","replacedBy":"324"},{"ruleId":"291","replacedBy":"325"},{"ruleId":"299","severity":1,"message":"300","line":3,"column":1,"nodeType":"301","endLine":12,"endColumn":3},{"ruleId":"326","severity":1,"message":"327","line":1,"column":27,"nodeType":"328","messageId":"329","endLine":1,"endColumn":36},{"ruleId":"326","severity":1,"message":"330","line":1,"column":38,"nodeType":"328","messageId":"329","endLine":1,"endColumn":48},{"ruleId":"293","severity":1,"message":"331","line":32,"column":5,"nodeType":"295","endLine":32,"endColumn":7,"suggestions":"332"},{"ruleId":"293","severity":1,"message":"297","line":38,"column":6,"nodeType":"295","endLine":38,"endColumn":8,"suggestions":"333"},{"ruleId":"293","severity":1,"message":"297","line":46,"column":6,"nodeType":"295","endLine":46,"endColumn":24,"suggestions":"334"},{"ruleId":"293","severity":1,"message":"297","line":18,"column":6,"nodeType":"295","endLine":18,"endColumn":8,"suggestions":"335"},{"ruleId":"326","severity":1,"message":"336","line":22,"column":10,"nodeType":"328","messageId":"329","endLine":22,"endColumn":33},{"ruleId":"326","severity":1,"message":"337","line":27,"column":10,"nodeType":"328","messageId":"329","endLine":27,"endColumn":29},{"ruleId":"326","severity":1,"message":"338","line":31,"column":10,"nodeType":"328","messageId":"329","endLine":31,"endColumn":24},{"ruleId":"293","severity":1,"message":"297","line":18,"column":6,"nodeType":"295","endLine":18,"endColumn":8,"suggestions":"339"},{"ruleId":"326","severity":1,"message":"340","line":22,"column":10,"nodeType":"328","messageId":"329","endLine":22,"endColumn":22},{"ruleId":"326","severity":1,"message":"341","line":27,"column":10,"nodeType":"328","messageId":"329","endLine":27,"endColumn":30},{"ruleId":"326","severity":1,"message":"342","line":28,"column":10,"nodeType":"328","messageId":"329","endLine":28,"endColumn":25},{"ruleId":"293","severity":1,"message":"297","line":18,"column":6,"nodeType":"295","endLine":18,"endColumn":8,"suggestions":"343"},{"ruleId":"326","severity":1,"message":"344","line":22,"column":10,"nodeType":"328","messageId":"329","endLine":22,"endColumn":33},{"ruleId":"326","severity":1,"message":"341","line":27,"column":10,"nodeType":"328","messageId":"329","endLine":27,"endColumn":30},{"ruleId":"326","severity":1,"message":"345","line":27,"column":32,"nodeType":"328","messageId":"329","endLine":27,"endColumn":55},{"ruleId":"326","severity":1,"message":"346","line":28,"column":10,"nodeType":"328","messageId":"329","endLine":28,"endColumn":27},{"ruleId":"326","severity":1,"message":"347","line":28,"column":29,"nodeType":"328","messageId":"329","endLine":28,"endColumn":48},{"ruleId":"293","severity":1,"message":"297","line":12,"column":6,"nodeType":"295","endLine":12,"endColumn":8,"suggestions":"348"},{"ruleId":"293","severity":1,"message":"297","line":19,"column":6,"nodeType":"295","endLine":19,"endColumn":8,"suggestions":"349"},{"ruleId":"326","severity":1,"message":"350","line":27,"column":10,"nodeType":"328","messageId":"329","endLine":27,"endColumn":28},{"ruleId":"326","severity":1,"message":"351","line":33,"column":10,"nodeType":"328","messageId":"329","endLine":33,"endColumn":33},{"ruleId":"326","severity":1,"message":"344","line":39,"column":10,"nodeType":"328","messageId":"329","endLine":39,"endColumn":33},{"ruleId":"326","severity":1,"message":"338","line":47,"column":10,"nodeType":"328","messageId":"329","endLine":47,"endColumn":24},"no-native-reassign",["352"],"no-negated-in-lhs",["353"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'klientContext'. Either include it or remove the dependency array.","ArrayExpression",["354"],"React Hook useEffect has a missing dependency: 'depoContext'. Either include it or remove the dependency array.",["355"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'klientConext'. Either include it or remove the dependency array.",["356"],["357"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["358"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["359"],["360"],["361"],["362"],["363"],["364"],["365"],["366"],["367"],["368"],["352"],["353"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'user.email', 'user.image_profile', and 'user.name'. Either include them or remove the dependency array.",["369"],["370"],["371"],["372"],"'kategoriProduktZgjedhur' is assigned a value but never used.","'kategoriteKlienteve' is assigned a value but never used.","'klientSpecifik' is assigned a value but never used.",["373"],"'emriKlientit' is assigned a value but never used.","'kategoriteProdukteve' is assigned a value but never used.","'produktSpecifik' is assigned a value but never used.",["374"],"'kategoriKlientiZgjedhur' is assigned a value but never used.","'setKategoriteProdukteve' is assigned a value but never used.","'produkteSpecifike' is assigned a value but never used.","'setProdukteSpecfike' is assigned a value but never used.",["375"],["376"],"'catProductZgjedhur' is assigned a value but never used.","'produktSpecifikZgjedhur' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"377","fix":"383"},{"desc":"377","fix":"384"},{"desc":"379","fix":"385"},{"desc":"379","fix":"386"},{"desc":"379","fix":"387"},{"desc":"379","fix":"388"},{"desc":"379","fix":"389"},{"desc":"379","fix":"390"},{"desc":"379","fix":"391"},{"desc":"379","fix":"392"},{"desc":"379","fix":"393"},{"desc":"379","fix":"394"},{"desc":"395","fix":"396"},{"desc":"379","fix":"397"},{"desc":"398","fix":"399"},{"desc":"379","fix":"400"},{"desc":"379","fix":"401"},{"desc":"379","fix":"402"},{"desc":"379","fix":"403"},{"desc":"379","fix":"404"},"Update the dependencies array to be: [klientContext]",{"range":"405","text":"406"},"Update the dependencies array to be: [depoContext]",{"range":"407","text":"408"},"Update the dependencies array to be: [klientConext]",{"range":"409","text":"410"},{"range":"411","text":"406"},{"range":"412","text":"406"},{"range":"413","text":"408"},{"range":"414","text":"408"},{"range":"415","text":"408"},{"range":"416","text":"408"},{"range":"417","text":"408"},{"range":"418","text":"408"},{"range":"419","text":"408"},{"range":"420","text":"408"},{"range":"421","text":"408"},{"range":"422","text":"408"},"Update the dependencies array to be: [user.email, user.image_profile, user.name]",{"range":"423","text":"424"},{"range":"425","text":"408"},"Update the dependencies array to be: [depoContext, produktiZgjedhur]",{"range":"426","text":"427"},{"range":"428","text":"408"},{"range":"429","text":"408"},{"range":"430","text":"408"},{"range":"431","text":"408"},{"range":"432","text":"408"},[1192,1194],"[klientContext]",[1874,1876],"[depoContext]",[3913,3915],"[klientConext]",[1853,1855],[3744,3746],[500,502],[4849,4851],[5190,5192],[1642,1644],[2834,2836],[2864,2866],[2931,2933],[3304,3306],[1419,1421],[1374,1376],[1481,1483],"[user.email, user.image_profile, user.name]",[1570,1572],[1757,1775],"[depoContext, produktiZgjedhur]",[828,830],[862,864],[866,868],[561,563],[852,854]]