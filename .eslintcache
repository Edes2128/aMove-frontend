[{"C:\\Users\\User\\Desktop\\a-move\\src\\index.js":"1","C:\\Users\\User\\Desktop\\a-move\\src\\App.js":"2","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\KlientDashboard.jsx":"3","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\ProtectedRoutes.jsx":"4","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\AdminDashboard.jsx":"5","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\FormLogin.jsx":"6","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoState.jsx":"7","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientState.jsx":"8","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertState.jsx":"9","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\types.js":"10","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\types.js":"11","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\types.js":"12","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\Alert.jsx":"13","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientContext.jsx":"14","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoContext.jsx":"15","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoReducer.jsx":"16","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientReducer.jsx":"17","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertContext.jsx":"18","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertReducer.jsx":"19","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Porosite.jsx":"20","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Header.jsx":"21","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Sidebar.jsx":"22","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Shporta.jsx":"23","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Produktet.jsx":"24","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Wishlist.jsx":"25","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\SingleProduct.jsx":"26","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Header.jsx":"27","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Home.jsx":"28","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Oferta.jsx":"29","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Klient.jsx":"30","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Produkte.jsx":"31","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Porosite.jsx":"32","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriProduktesh.jsx":"33","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoZonaKlientesh.jsx":"34","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriKlientesh.jsx":"35","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoAttributes.jsx":"36","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoProduktPopup.jsx":"37","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKlientPopup.jsx":"38","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseState.jsx":"39","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\types.js":"40","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollapseReducer.jsx":"41","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseContext.jsx":"42","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoOfertePop.jsx":"43","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\AccountDetails.jsx":"44","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertaSingleProductForm.jsx":"45","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\CategoryProductOfertaForm.jsx":"46","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\ClientSpecifikOfertaForm.jsx":"47","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\CategoryClientOfertaForm.jsx":"48","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertSetForm.jsx":"49","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertaGrupForm.jsx":"50","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Home.jsx":"51"},{"size":244,"mtime":1611153731996,"results":"52","hashOfConfig":"53"},{"size":1086,"mtime":1612537604769,"results":"54","hashOfConfig":"53"},{"size":2463,"mtime":1612539803623,"results":"55","hashOfConfig":"53"},{"size":442,"mtime":1601629298684,"results":"56","hashOfConfig":"53"},{"size":7092,"mtime":1611141933753,"results":"57","hashOfConfig":"53"},{"size":3052,"mtime":1613749985706,"results":"58","hashOfConfig":"53"},{"size":6658,"mtime":1613988674076,"results":"59","hashOfConfig":"53"},{"size":6486,"mtime":1613570909790,"results":"60","hashOfConfig":"53"},{"size":769,"mtime":1608284703555,"results":"61","hashOfConfig":"53"},{"size":677,"mtime":1613984131481,"results":"62","hashOfConfig":"53"},{"size":530,"mtime":1612436163863,"results":"63","hashOfConfig":"53"},{"size":80,"mtime":1608220546675,"results":"64","hashOfConfig":"53"},{"size":913,"mtime":1608284826165,"results":"65","hashOfConfig":"53"},{"size":111,"mtime":1605518101889,"results":"66","hashOfConfig":"53"},{"size":107,"mtime":1606839892052,"results":"67","hashOfConfig":"53"},{"size":1507,"mtime":1613988589269,"results":"68","hashOfConfig":"53"},{"size":803,"mtime":1612436255025,"results":"69","hashOfConfig":"53"},{"size":109,"mtime":1608214944739,"results":"70","hashOfConfig":"53"},{"size":255,"mtime":1611752885111,"results":"71","hashOfConfig":"53"},{"size":31482,"mtime":1613752310811,"results":"72","hashOfConfig":"53"},{"size":9783,"mtime":1613484076465,"results":"73","hashOfConfig":"53"},{"size":2312,"mtime":1612539441943,"results":"74","hashOfConfig":"53"},{"size":4663,"mtime":1611747057855,"results":"75","hashOfConfig":"53"},{"size":20880,"mtime":1613663056337,"results":"76","hashOfConfig":"53"},{"size":3439,"mtime":1611747110456,"results":"77","hashOfConfig":"53"},{"size":4612,"mtime":1611747101984,"results":"78","hashOfConfig":"53"},{"size":3214,"mtime":1613744444453,"results":"79","hashOfConfig":"53"},{"size":2262,"mtime":1613988793332,"results":"80","hashOfConfig":"53"},{"size":2299,"mtime":1611063343977,"results":"81","hashOfConfig":"53"},{"size":30839,"mtime":1613752125035,"results":"82","hashOfConfig":"53"},{"size":28560,"mtime":1613752229760,"results":"83","hashOfConfig":"53"},{"size":32732,"mtime":1613751976264,"results":"84","hashOfConfig":"53"},{"size":13370,"mtime":1613744405672,"results":"85","hashOfConfig":"53"},{"size":13448,"mtime":1611746876277,"results":"86","hashOfConfig":"53"},{"size":13984,"mtime":1611746721042,"results":"87","hashOfConfig":"53"},{"size":21510,"mtime":1613749490069,"results":"88","hashOfConfig":"53"},{"size":16272,"mtime":1612963623728,"results":"89","hashOfConfig":"53"},{"size":6366,"mtime":1611746792152,"results":"90","hashOfConfig":"53"},{"size":753,"mtime":1610730641601,"results":"91","hashOfConfig":"53"},{"size":111,"mtime":1610730192730,"results":"92","hashOfConfig":"53"},{"size":295,"mtime":1610730504309,"results":"93","hashOfConfig":"53"},{"size":121,"mtime":1610730041373,"results":"94","hashOfConfig":"53"},{"size":3094,"mtime":1611226842508,"results":"95","hashOfConfig":"53"},{"size":8611,"mtime":1612968907148,"results":"96","hashOfConfig":"53"},{"size":7083,"mtime":1612353168167,"results":"97","hashOfConfig":"53"},{"size":5753,"mtime":1611853006308,"results":"98","hashOfConfig":"53"},{"size":7301,"mtime":1612368017690,"results":"99","hashOfConfig":"53"},{"size":7408,"mtime":1612370610285,"results":"100","hashOfConfig":"53"},{"size":3871,"mtime":1612365746373,"results":"101","hashOfConfig":"53"},{"size":10555,"mtime":1612358940290,"results":"102","hashOfConfig":"53"},{"size":145,"mtime":1613988852832,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"z82e08",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"106"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"106"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\a-move\\src\\index.js",[],["226","227"],"C:\\Users\\User\\Desktop\\a-move\\src\\App.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\KlientDashboard.jsx",["228"],"import React, { useContext, useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ProtectedRoutes from \"../components/ProtectedRoutes\";\r\nimport Home from \"./components/Home\";\r\nimport Porosite from \"./components/Porosite\";\r\nimport Produktet from \"./components/Produktet\";\r\nimport SingleProduct from \"./components/SingleProduct\";\r\nimport KlientContext from \"../../context/klientContext/KlientContext\";\r\nimport Shporta from \"./components/Shporta\";\r\nimport Wishlist from \"./components/Wishlist\";\r\nimport Alert from \"../components/Alert\";\r\nimport CollapseContext from \"../../context/collpaseContext/CollpaseContext\";\r\n\r\nexport default function KlientDashboard({ history }) {\r\n  const klientContext = useContext(KlientContext);\r\n  const { name, image_profile } = klientContext.user;\r\n  const collpaseContext = useContext(CollapseContext);\r\n  const { value } = collpaseContext;\r\n\r\n  const handleLogout = () => {\r\n    localStorage.setItem(\"auth\", false);\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/\");\r\n  };\r\n  useEffect(() => {\r\n    klientContext.getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Alert />\r\n      <div className=\"klient-dashboard\">\r\n        <Sidebar />\r\n        <Header\r\n          name={name}\r\n          userImg={image_profile}\r\n          handleLogout={() => handleLogout()}\r\n        />\r\n\r\n        <div\r\n          className={\r\n            value === true\r\n              ? \"klient-dashboard-body klient-dashboard-body-collapse\"\r\n              : \"klient-dashboard-body\"\r\n          }\r\n        >\r\n          <Switch>\r\n            <ProtectedRoutes exact path=\"/klient\" component={Home} />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/klient/porosite\"\r\n              component={Porosite}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/klient/produktet\"\r\n              render={(props) => <Produktet {...props} />}\r\n            />\r\n            <ProtectedRoutes exact path=\"/klient/shporta\" component={Shporta} />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/klient/wishlist\"\r\n              component={Wishlist}\r\n            />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/klient/:id\"\r\n              component={SingleProduct}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\ProtectedRoutes.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\AdminDashboard.jsx",["229"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport Porosite from \"./components/Porosite\";\r\nimport ProtectedRoutes from \"../components/ProtectedRoutes\";\r\nimport Home from \"./components/Home\";\r\nimport Produkte from \"./components/Produkte\";\r\nimport Oferta from \"./components/Oferta\";\r\nimport Klient from \"./components/Klient\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LocalMallIcon from \"@material-ui/icons/LocalMall\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport ArrowDropUpOutlinedIcon from \"@material-ui/icons/ArrowDropUpOutlined\";\r\nimport DepoContext from \"../../context/depoContext/DepoContext\";\r\nimport Alerts from \"../components/Alert\";\r\nimport ShtoAttributes from \"./components/ShtoAttributes\";\r\nimport ShtoKategoriProduktesh from \"./components/ShtoKategoriProduktesh\";\r\nimport ShtoKategoriKlientesh from \"./components/ShtoKategoriKlientesh\";\r\nimport ShtoZonaKlientesh from \"./components/ShtoZonaKlientesh\";\r\nimport CollapseContext from \"../../context/collpaseContext/CollpaseContext\";\r\nimport AccountDetails from \"./components/AccountDetails\";\r\n\r\nexport default function AdminDashboard({ history }) {\r\n  const [dropdownKlient, Showklientdropdown] = useState(false);\r\n  const [dropdownProdukt, showProduktDropdown] = useState(false);\r\n  const depoContext = useContext(DepoContext);\r\n  const { user } = depoContext;\r\n  const collpaseContext = useContext(CollapseContext);\r\n  const { value } = collpaseContext;\r\n\r\n  useEffect(() => {\r\n    depoContext.getUser();\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.setItem(\"auth\", false);\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Alerts />\r\n      <Header\r\n        name={user.name}\r\n        userImg={user.image_profile}\r\n        handleLogout={() => handleLogout()}\r\n      />\r\n      <div className=\"sidebar\">\r\n        <div\r\n          className={\r\n            value === true\r\n              ? \"sidebar-dashboard sidebar-dashboard-collapse\"\r\n              : \"sidebar-dashboard\"\r\n          }\r\n        >\r\n          <div className=\"sidebar-dashboard-image\">\r\n            <img\r\n              src=\"/move-logo.png\"\r\n              style={{ display: value === true ? \"none\" : \"\" }}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Link className=\"link\" to=\"/admin\">\r\n              <HomeIcon style={{ fontSize: \"40px\" }} />{\" \"}\r\n              <p style={{ display: value === true ? \"none\" : \"\" }}>Kreu</p>\r\n            </Link>\r\n            <Link className=\"link\" to=\"/admin/porosite\">\r\n              <LocalMallIcon style={{ fontSize: \"40px\" }} />{\" \"}\r\n              <p style={{ display: value === true ? \"none\" : \"\" }}>Porosite</p>\r\n            </Link>\r\n            <Link\r\n              className=\"link\"\r\n              to=\"/admin/produktet\"\r\n              onClick={() => showProduktDropdown(!dropdownProdukt)}\r\n            >\r\n              <FormatListNumberedIcon style={{ fontSize: \"40px\" }} />\r\n              <p style={{ display: value === true ? \"none\" : \"\" }}>\r\n                Produkte\r\n                {!dropdownProdukt ? (\r\n                  <ArrowDropDownOutlinedIcon\r\n                    onClick={() => showProduktDropdown(!dropdownProdukt)}\r\n                  />\r\n                ) : (\r\n                  <ArrowDropUpOutlinedIcon\r\n                    onClick={() => showProduktDropdown(!dropdownProdukt)}\r\n                  />\r\n                )}\r\n              </p>\r\n            </Link>\r\n            {dropdownProdukt && (\r\n              <div>\r\n                <Link className=\"link\" to=\"/admin/produktet/attributes\">\r\n                  Shto attribut\r\n                </Link>\r\n                <Link className=\"link\" to=\"/admin/produktet/kategori\">\r\n                  Shto kategori\r\n                </Link>\r\n              </div>\r\n            )}\r\n            <Link className=\"link\" to=\"/admin/oferta\">\r\n              <LocalOfferIcon style={{ fontSize: \"40px\" }} />{\" \"}\r\n              <p style={{ display: value === true ? \"none\" : \"\" }}>Oferta</p>\r\n            </Link>\r\n            <Link\r\n              className=\"link\"\r\n              to=\"/admin/klient\"\r\n              onClick={() => Showklientdropdown(!dropdownKlient)}\r\n            >\r\n              <PersonIcon style={{ fontSize: \"40px\" }} />\r\n              <p style={{ display: value === true ? \"none\" : \"\" }}>\r\n                Kliente{\" \"}\r\n                {!dropdownKlient ? (\r\n                  <ArrowDropDownOutlinedIcon\r\n                    onClick={() => Showklientdropdown(!dropdownKlient)}\r\n                  />\r\n                ) : (\r\n                  <ArrowDropUpOutlinedIcon\r\n                    onClick={() => Showklientdropdown(!dropdownKlient)}\r\n                  />\r\n                )}\r\n              </p>\r\n            </Link>\r\n            {dropdownKlient && (\r\n              <div>\r\n                <Link className=\"link\" to=\"/admin/klient\">\r\n                  Te gjithe\r\n                </Link>\r\n                <Link className=\"link\" to=\"/admin/klient/kategori\">\r\n                  Shto kategori\r\n                </Link>\r\n                <Link className=\"link\" to=\"/admin/klient/zona\">\r\n                  Shto zone\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            value === true\r\n              ? \"sidebar-right sidebar-right-collapse\"\r\n              : \"sidebar-right\"\r\n          }\r\n        >\r\n          <Switch>\r\n            <ProtectedRoutes exact path=\"/admin\" component={Home} />\r\n            <ProtectedRoutes path=\"/admin/porosite\" component={Porosite} />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/admin/produktet\"\r\n              component={Produkte}\r\n            />\r\n            <ProtectedRoutes\r\n              path=\"/admin/produktet/attributes\"\r\n              component={ShtoAttributes}\r\n            />\r\n            <ProtectedRoutes\r\n              path=\"/admin/produktet/kategori\"\r\n              component={ShtoKategoriProduktesh}\r\n            />\r\n            <ProtectedRoutes path=\"/admin/oferta\" component={Oferta} />\r\n            <ProtectedRoutes exact path=\"/admin/klient\" component={Klient} />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/admin/klient/kategori\"\r\n              component={ShtoKategoriKlientesh}\r\n            />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/admin/klient/zona\"\r\n              component={ShtoZonaKlientesh}\r\n            />\r\n            <ProtectedRoutes\r\n              exact\r\n              path=\"/admin/account\"\r\n              component={AccountDetails}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\FormLogin.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\Alert.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientContext.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoContext.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoReducer.jsx",["230"],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientReducer.jsx",["231"],"import {\r\n  GET_ALL_PRODUCTS,\r\n  GET_CART_PRODUCTS,\r\n  GET_USER,\r\n  GET_WISHLIST_PRODUCTS,\r\n  GET_ORDERS_SINGLE_USER,\r\n  GET_PRODUCTS_CATEGORIES,\r\n} from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      return { ...state, user: action.payload };\r\n    case GET_ALL_PRODUCTS:\r\n      return { ...state, products: action.payload };\r\n    case GET_CART_PRODUCTS:\r\n      return { ...state, cartProducts: action.payload };\r\n    case GET_WISHLIST_PRODUCTS:\r\n      return { ...state, wishlistProducts: action.payload };\r\n    case GET_ORDERS_SINGLE_USER:\r\n      return { ...state, ordersSingleUser: action.payload };\r\n    case GET_PRODUCTS_CATEGORIES:\r\n      return { ...state, produktCategories: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertContext.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertReducer.jsx",["232"],"import { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Porosite.jsx",["233"],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Header.jsx",["234"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport ArrowDropUpOutlinedIcon from \"@material-ui/icons/ArrowDropUpOutlined\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport KlientContext from \"../../../context/klientContext/KlientContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIosOutlinedIcon from \"@material-ui/icons/ArrowBackIosOutlined\";\r\nimport ArrowForwardIosOutlinedIcon from \"@material-ui/icons/ArrowForwardIosOutlined\";\r\nimport CollapseContext from \"../../../context/collpaseContext/CollpaseContext\";\r\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\r\n\r\nexport default function Header({ name, userImg, handleLogout }) {\r\n  const [logout, Setlogout] = useState(false);\r\n  const [showProducts, setShowProducts] = useState(false);\r\n  const [showWishlist, setShowWishlist] = useState(false);\r\n  const klientContext = useContext(KlientContext);\r\n  const cartProducts = klientContext.cartProducts;\r\n  const wishlistProducts = klientContext.wishlistProducts;\r\n  const collpaseContext = useContext(CollapseContext);\r\n  const { value } = collpaseContext;\r\n\r\n  useEffect(() => {\r\n    klientContext.getCartProducts();\r\n    klientContext.getWishlistProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        value === true\r\n          ? \"klient-dashboard-header klient-dashboard-header-collapse\"\r\n          : \"klient-dashboard-header\"\r\n      }\r\n    >\r\n      {!value && (\r\n        <IconButton onClick={collpaseContext.setTrue}>\r\n          <ArrowBackIosOutlinedIcon />\r\n        </IconButton>\r\n      )}\r\n      {value && (\r\n        <IconButton onClick={collpaseContext.setFalse}>\r\n          <ArrowForwardIosOutlinedIcon />\r\n        </IconButton>\r\n      )}\r\n\r\n      <div className=\"klient-dashboard-header-widgets-klient\">\r\n        <Badge badgeContent={wishlistProducts.length} color=\"primary\">\r\n          <StarBorderOutlinedIcon\r\n            onClick={() => {\r\n              setShowWishlist(!showWishlist);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </Badge>\r\n\r\n        <Badge badgeContent={cartProducts.length} color=\"primary\">\r\n          <ShoppingCartOutlinedIcon\r\n            onClick={() => {\r\n              setShowProducts(!showProducts);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </Badge>\r\n\r\n        <Badge badgeContent={2} color=\"primary\">\r\n          <NotificationsNoneOutlinedIcon />\r\n        </Badge>\r\n        <Avatar\r\n          className=\"logo-user-loggedin\"\r\n          src={`https://amove.alcodeit.com/images/${userImg}`}\r\n          alt=\"LogoUser\"\r\n        />\r\n        <ClickAwayListener onClickAway={() => Setlogout(false)}>\r\n          <p onClick={() => Setlogout(!logout)} style={{ cursor: \"pointer\" }}>\r\n            {name}\r\n          </p>\r\n        </ClickAwayListener>\r\n        {!logout && (\r\n          <ClickAwayListener onClickAway={() => Setlogout(false)}>\r\n            <ArrowDropDownOutlinedIcon\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => Setlogout(!logout)}\r\n            />\r\n          </ClickAwayListener>\r\n        )}\r\n        {logout && (\r\n          <ClickAwayListener onClickAway={() => Setlogout(false)}>\r\n            <ArrowDropUpOutlinedIcon\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => Setlogout(!logout)}\r\n            />\r\n          </ClickAwayListener>\r\n        )}\r\n      </div>\r\n      <div className={!logout ? \"hover-logout\" : \"hover-logout display-block\"}>\r\n        <p onClick={handleLogout}>\r\n          {\" \"}\r\n          <PowerSettingsNewIcon onClick={handleLogout} />\r\n          Logout\r\n        </p>\r\n      </div>\r\n\r\n      {showProducts === true && (\r\n        <ClickAwayListener onClickAway={() => setShowProducts(false)}>\r\n          <div className=\"header-cart-products\">\r\n            {cartProducts.length > 0 ? (\r\n              <>\r\n                <div className=\"header-cart-products-length\">\r\n                  <h2> {cartProducts.length} items </h2>\r\n                  <p>In your cart</p>\r\n                </div>\r\n                <div className=\"header-cart-products-content\">\r\n                  {cartProducts.map((item) => (\r\n                    <div\r\n                      className=\"header-cart-products-content-item\"\r\n                      key={item.id}\r\n                    >\r\n                      <div className=\"header-cart-products-content-item-image\">\r\n                        <img\r\n                          src={`https://amove.alcodeit.com/images/${item.image}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"header-cart-products-content-item-title-remove\">\r\n                        <h4 style={{ fontSize: \"15px\" }}> {item.titulli} </h4>\r\n                        <p style={{ fontSize: \"12px\" }}>{item.pershkrimi} </p>\r\n                        <CloseOutlinedIcon\r\n                          style={{\r\n                            fontSize: \"16px\",\r\n                            color: \"red\",\r\n                            alignSelf: \"flex-end\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            klientContext.removeFromCart(item);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"header-cart-products-shporta\">\r\n                  <Link\r\n                    to=\"/klient/shporta\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      color: \"inherit\",\r\n                      textDecoration: \"none\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      style={{ width: \"100%\" }}\r\n                      startIcon={<ShoppingCartOutlinedIcon />}\r\n                    >\r\n                      Shporta\r\n                    </Button>{\" \"}\r\n                  </Link>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"header-cart-empty\">\r\n                <h4>Shporta eshte bosh</h4>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </ClickAwayListener>\r\n      )}\r\n\r\n      {showWishlist === true && (\r\n        <ClickAwayListener onClickAway={() => setShowWishlist(false)}>\r\n          <div className=\"header-cart-products\">\r\n            {wishlistProducts.length > 0 ? (\r\n              <>\r\n                <div className=\"header-cart-products-length\">\r\n                  <h2> {wishlistProducts.length} items</h2>\r\n                  <p>In your wishlist</p>\r\n                </div>\r\n                <div className=\"header-cart-products-content\">\r\n                  {wishlistProducts.map((item) => (\r\n                    <div\r\n                      className=\"header-cart-products-content-item\"\r\n                      key={item.id}\r\n                    >\r\n                      <div className=\"header-cart-products-content-item-image\">\r\n                        <img\r\n                          src={`https://amove.alcodeit.com/images/${item.image}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"header-cart-products-content-item-title-remove\">\r\n                        <h4 style={{ fontSize: \"15px\" }}> {item.titulli} </h4>\r\n                        <p style={{ fontSize: \"12px\" }}>{item.pershkrimi} </p>\r\n                        <CloseOutlinedIcon\r\n                          style={{\r\n                            fontSize: \"16px\",\r\n                            color: \"red\",\r\n                            alignSelf: \"flex-end\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            klientContext.removeFromWishlist(item);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"header-cart-products-shporta\">\r\n                  <Link\r\n                    to=\"/klient/wishlist\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      color: \"inherit\",\r\n                      textDecoration: \"none\",\r\n                      overflow: \"hidden\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    <Button\r\n                      color=\"primary\"\r\n                      style={{ width: \"100%\" }}\r\n                      startIcon={<StarBorderOutlinedIcon />}\r\n                    >\r\n                      Wishlist\r\n                    </Button>{\" \"}\r\n                  </Link>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"header-cart-empty\">\r\n                <h4>Wishlist eshte bosh</h4>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </ClickAwayListener>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Sidebar.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Shporta.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Produktet.jsx",["235","236"],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Wishlist.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\SingleProduct.jsx",["237"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowBackOutlinedIcon from \"@material-ui/icons/ArrowBackOutlined\";\r\nimport KlientContext from \"../../../context/klientContext/KlientContext\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\n\r\nexport default function SingleProduct({ match }) {\r\n  const [products, setProducts] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://amove.alcodeit.com/get_allProducts.php\")\r\n      .then((res) => setProducts(res.data));\r\n  }, []);\r\n\r\n  const produkt = products.filter((produkt) => produkt.id == match.params.id);\r\n  const klientContext = useContext(KlientContext);\r\n  const { cartProducts, wishlistProducts } = klientContext;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"shko-te-produktet\">\r\n        <Link\r\n          style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n          to=\"/klient/produktet\"\r\n        >\r\n          <Button\r\n            startIcon={<ArrowBackOutlinedIcon />}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            style={{ backgroundColor: \"white\" }}\r\n          >\r\n            Shko te produktet\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      {produkt.map((single) => (\r\n        <div key={single.id} className=\"single-product\">\r\n          <div className=\"single-product-left\">\r\n            <img\r\n              src={`https://amove.alcodeit.com/images/${single.image}`}\r\n              alt={single.titulli}\r\n            />\r\n          </div>\r\n          <div className=\"single-product-right\">\r\n            <div className=\"single-product-right-title-price\">\r\n              <p className=\"single-product-right-title\">{single.titulli}</p>\r\n              <p className=\"single-product-right-price\">{single.cmimi} Leke</p>\r\n            </div>\r\n            <div className=\"single-product-right-description-sku\">\r\n              <p className=\"single-product-right-description\">\r\n                {single.pershkrimi}\r\n              </p>\r\n              <p className=\"single-product-right-sku\">SKU: {single.sku} </p>\r\n            </div>\r\n            <div className=\"single-product-right-stock-addcart\">\r\n              <p className=\"single-product-right-stock\">\r\n                Available - {single.sasia > 0 ? \"Ka stock\" : \"Nuk ka stock\"}{\" \"}\r\n              </p>\r\n              <div className=\"buttons-wish-cart\">\r\n                {cartProducts.some((item) => item.product_id === single.id) ===\r\n                true ? (\r\n                  <Button\r\n                    startIcon={<ShoppingCartOutlinedIcon />}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    <Link\r\n                      to=\"/klient/shporta\"\r\n                      style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n                    >\r\n                      View in Cart\r\n                    </Link>\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    size=\"large\"\r\n                    startIcon={<ShoppingCartOutlinedIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      klientContext.addToCart(single);\r\n                    }}\r\n                  >\r\n                    Add to Cart\r\n                  </Button>\r\n                )}\r\n\r\n                {wishlistProducts.some(\r\n                  (item) => item.product_id === single.id\r\n                ) === true ? (\r\n                  <Button\r\n                    size=\"large\"\r\n                    startIcon={<StarIcon />}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={() => klientContext.removeFromWishlist(single)}\r\n                  >\r\n                    Add to Wishlist\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    size=\"large\"\r\n                    startIcon={<StarBorderOutlinedIcon />}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={() => klientContext.addToWishlist(single)}\r\n                  >\r\n                    Add to Wishlist\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Header.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Home.jsx",["238","239"],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Oferta.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Klient.jsx",["240"],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Produkte.jsx",["241","242","243"],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Porosite.jsx",["244"],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriProduktesh.jsx",["245"],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoZonaKlientesh.jsx",["246"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\n\r\nexport default function ShtoZonaKlientesh() {\r\n  const depoContext = useContext(DepoContext);\r\n  const { zonaClients } = depoContext;\r\n  const alertContext = useContext(AlertContext);\r\n  const [shtoZonaPop, showShtoZonaPop] = useState(false);\r\n  const [emriZones, setEmriZones] = useState(\"\");\r\n  const [deleteZonaPop, showDeleteZonaPop] = useState(false);\r\n  const [deleteID, setDeleteID] = useState(\"\");\r\n  const [editZonaPop, showEditZonaPop] = useState(false);\r\n  const [editZonaName, setEditZonaName] = useState(\"\");\r\n  const [editZonaID, setEditZonaID] = useState(\"\");\r\n  const [itemPage, setItempage] = useState(5);\r\n  const [page, setPage] = useState(1);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"id\",\r\n    direction: \"descending\",\r\n  });\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  if (propertyName !== null) {\r\n    zonaClients.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    depoContext.getZonaClients();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {editZonaPop && (\r\n        <div className=\"edit-klient-zona-pop\">\r\n          <div\r\n            className=\"edit-klient-zona-pop-opa\"\r\n            onClick={() => {\r\n              showEditZonaPop(false);\r\n              setEditZonaID(\"\");\r\n              setEditZonaName(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"edit-klient-zona-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showEditZonaPop(false);\r\n                setEditZonaID(\"\");\r\n                setEditZonaName(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Emri i zones\"\r\n              value={editZonaName}\r\n              onChange={(e) => {\r\n                setEditZonaName(e.target.value);\r\n              }}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n            <div className=\"edit-klient-zona-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\"https://amove.alcodeit.com/edit_zona_clients.php\", {\r\n                      id: editZonaID,\r\n                      name: editZonaName,\r\n                    })\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        depoContext.getZonaClients();\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        setEditZonaName(\"\");\r\n                        setEditZonaID(\"\");\r\n                        showEditZonaPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setEditZonaName(\"\");\r\n                  setEditZonaID(\"\");\r\n                  showEditZonaPop(false);\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {deleteZonaPop && (\r\n        <div className=\"delete-klient-zona-pop\">\r\n          <div\r\n            className=\"delete-klient-zona-pop-opa\"\r\n            onClick={() => {\r\n              showDeleteZonaPop(false);\r\n              setDeleteID(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"delete-klient-zona-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showDeleteZonaPop(false);\r\n                setDeleteID(\"\");\r\n              }}\r\n            />\r\n            <h4>Jeni te sigurt qe doni te fshini zonen?</h4>\r\n            <div className=\"delete-klient-zona-pop-container-buttons\">\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://amove.alcodeit.com/delete_zona_clients.php\",\r\n                      { id: deleteID }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        depoContext.getZonaClients();\r\n                        setDeleteID(\"\");\r\n                        showDeleteZonaPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                PO\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setDeleteID(\"\");\r\n                  showDeleteZonaPop(false);\r\n                }}\r\n              >\r\n                JO\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoZonaPop && (\r\n        <div className=\"shto-klient-zona-pop\">\r\n          <div\r\n            className=\"shto-klient-zona-pop-opa\"\r\n            onClick={() => {\r\n              showShtoZonaPop(false);\r\n              setEmriZones(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"shto-klient-zona-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showShtoZonaPop(false);\r\n                setEmriZones(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Emri i zones\"\r\n              style={{ width: \"60%\" }}\r\n              value={emriZones}\r\n              onChange={(e) => setEmriZones(e.target.value)}\r\n              variant=\"outlined\"\r\n            />\r\n            <div className=\"shto-klient-zona-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\"https://amove.alcodeit.com/add_zona_client.php\", {\r\n                      name: emriZones,\r\n                    })\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        depoContext.getZonaClients();\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        setEmriZones(\"\");\r\n                        showShtoZonaPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setEmriZones(\"\");\r\n                  showShtoZonaPop(false);\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"shto-klient-zona\">\r\n        <div className=\"shto-klient-zona-header\">\r\n          <h4>Zonat e klienteve</h4>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            startIcon={<AddBoxOutlinedIcon />}\r\n            onClick={() => {\r\n              showShtoZonaPop(true);\r\n            }}\r\n          >\r\n            Shto zone\r\n          </Button>\r\n        </div>\r\n\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"id\")}\r\n              >\r\n                ID\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"name\")}\r\n              >\r\n                Emri\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"center\">Veprimet</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {zonaClients.slice(start, end).map((zona) => (\r\n              <TableRow>\r\n                <TableCell align=\"center\">{zona.id}</TableCell>\r\n                <TableCell align=\"center\">{zona.name}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EditOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      showEditZonaPop(true);\r\n                      setEditZonaID(zona.id);\r\n                      setEditZonaName(zona.name);\r\n                    }}\r\n                  />\r\n                  <DeleteOutlineOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      showDeleteZonaPop(true);\r\n                      setDeleteID(zona.id);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className=\"pagination\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n              Zona ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(zonaClients.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriKlientesh.jsx",["247"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\n\r\nexport default function ShtoKategoriKlientesh() {\r\n  const depoContext = useContext(DepoContext);\r\n  const { categoryClients } = depoContext;\r\n  const alertContext = useContext(AlertContext);\r\n  const [shtoKategoriPop, showShtoKategoriPop] = useState(false);\r\n  const [deleteKategoriPop, showDeleteKategoriPop] = useState(false);\r\n  const [editKategoriPopm, showEditKategoriPop] = useState(false);\r\n  const [editKategoriName, setEditKategoriName] = useState(\"\");\r\n  const [editIDKategori, setEditIDKategori] = useState(\"\");\r\n  const [emriKategorise, setEmriKategorise] = useState(\"\");\r\n  const [deleteID, setDeleteID] = useState(\"\");\r\n  const [itemPage, setItempage] = useState(5);\r\n  const [page, setPage] = useState(1);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"id\",\r\n    direction: \"descending\",\r\n  });\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  if (propertyName !== null) {\r\n    categoryClients.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    depoContext.getCategoryClients();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {editKategoriPopm && (\r\n        <div className=\"edit-kategori-klientesh-pop\">\r\n          <div\r\n            className=\"edit-kategori-klientesh-pop-opa\"\r\n            onClick={() => {\r\n              showEditKategoriPop(false);\r\n              setEditKategoriName(\"\");\r\n              setEditIDKategori(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"edit-kategori-klientesh-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showEditKategoriPop(false);\r\n                setEditKategoriName(\"\");\r\n                setEditIDKategori(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              value={editKategoriName}\r\n              onChange={(e) => {\r\n                setEditKategoriName(e.target.value);\r\n              }}\r\n              variant=\"outlined\"\r\n              label=\"Emri i kategorise\"\r\n              style={{ width: \"60%\" }}\r\n            />\r\n            <div className=\"edit-kategori-klientesh-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://amove.alcodeit.com/edit_category_client.php\",\r\n                      { id: editIDKategori, name: editKategoriName }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        showEditKategoriPop(false);\r\n                        setEditKategoriName(\"\");\r\n                        setEditIDKategori(\"\");\r\n                        depoContext.getCategoryClients();\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  showEditKategoriPop(false);\r\n                  setEditKategoriName(\"\");\r\n                  setEditIDKategori(\"\");\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {deleteKategoriPop && (\r\n        <div className=\"delete-kategori-klientesh-pop\">\r\n          <div\r\n            className=\"delete-kategori-klientesh-pop-opa\"\r\n            onClick={() => {\r\n              showDeleteKategoriPop(false);\r\n              setDeleteID(\"\");\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"delete-kategori-klientesh-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showDeleteKategoriPop(false);\r\n                setDeleteID(\"\");\r\n              }}\r\n            />\r\n            <h4>Jeni te sigurt qe doni te fshni kateogrine?</h4>\r\n            <div className=\"delete-kategori-klientesh-pop-container-buttons\">\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://amove.alcodeit.com/delete_category_client.php\",\r\n                      { id: deleteID }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        showDeleteKategoriPop(false);\r\n                        setDeleteID(\"\");\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        depoContext.getCategoryClients();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  showDeleteKategoriPop(false);\r\n                  setDeleteID(\"\");\r\n                }}\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoKategoriPop && (\r\n        <div className=\"shto-kategori-klientesh-pop\">\r\n          <div\r\n            className=\"shto-kategori-klientesh-pop-opa\"\r\n            onClick={() => {\r\n              showShtoKategoriPop(false);\r\n              setEmriKategorise(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"shto-kategori-klientesh-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showShtoKategoriPop(false);\r\n                setEmriKategorise(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"60%\" }}\r\n              label=\"Emri i kategorise\"\r\n              variant=\"outlined\"\r\n              value={emriKategorise}\r\n              onChange={(e) => {\r\n                setEmriKategorise(e.target.value);\r\n              }}\r\n            />\r\n            <div className=\"shto-kategori-klientesh-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://amove.alcodeit.com/add_category_client.php\",\r\n                      { name: emriKategorise }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        showShtoKategoriPop(false);\r\n                        depoContext.getCategoryClients();\r\n                        setEmriKategorise(\"\");\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  showShtoKategoriPop(false);\r\n                  setEmriKategorise(\"\");\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"shto-kategori-klientesh\">\r\n        <div className=\"shto-kategori-klientesh-header\">\r\n          <h3>Kategorite e klienteve</h3>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            startIcon={<AddBoxOutlinedIcon />}\r\n            onClick={() => {\r\n              showShtoKategoriPop(true);\r\n            }}\r\n          >\r\n            Shto kategori\r\n          </Button>\r\n        </div>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"id\")}\r\n              >\r\n                ID\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"name\")}\r\n              >\r\n                Emri\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell style={{ cursor: \"pointer\" }} align=\"center\">\r\n                Veprimet\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categoryClients.slice(start, end).map((category) => (\r\n              <TableRow>\r\n                <TableCell align=\"center\">{category.id}</TableCell>\r\n                <TableCell align=\"center\">{category.name}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EditOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      setEditIDKategori(category.id);\r\n                      setEditKategoriName(category.name);\r\n                      showEditKategoriPop(true);\r\n                    }}\r\n                  />\r\n                  <DeleteOutlineOutlinedIcon\r\n                    onClick={() => {\r\n                      showDeleteKategoriPop(true);\r\n                      setDeleteID(category.id);\r\n                    }}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className=\"pagination\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n              Kategori ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(categoryClients.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoAttributes.jsx",["248"],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoProduktPopup.jsx",["249","250"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport CancelPresentationIcon from \"@material-ui/icons/CancelPresentation\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nexport default function ShtoProduktPopup({ closePopup }) {\r\n  useEffect(() => {\r\n    depoContext.getAttrNames();\r\n    depoContext.getAttrValues();\r\n    depoContext.getCategoryProducts();\r\n  }, []);\r\n\r\n  const [titulli, setTitulli] = useState(\"\");\r\n  const [sku, setSku] = useState(\"\");\r\n  const [pershkrimi, setPershkrimi] = useState(\"\");\r\n  const [kategoriForm, setKategoriForm] = useState(\"\");\r\n  const [cmimi, setCmimi] = useState(0);\r\n  const [sasia, setSasia] = useState(0);\r\n  const [njesia, setNjesia] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [productAttributes, setProductAtrributes] = useState([]);\r\n  const [productAttributesNames, setProductAtrributesNames] = useState([]);\r\n  const [productAttributesValuesIDS, setProductAttributesValuesIDS] = useState(\r\n    []\r\n  );\r\n  const depoContext = useContext(DepoContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { attrNames, attrValues, categoryProducts } = depoContext;\r\n  const [arrayOfObjects, setArrayofObjects] = useState([]);\r\n\r\n  const writeDesc = (e) => {\r\n    setPershkrimi(e.target.value);\r\n  };\r\n\r\n  const arrayOfObject2 = productAttributesValuesIDS.map((id) =>\r\n    arrayOfObjects.filter((arrayObj) => arrayObj.id == id)\r\n  );\r\n  const arrayOfObject3 = arrayOfObject2.map((array) => array[0]);\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let fd = new FormData();\r\n    fd.append(\"titulli\", titulli);\r\n    fd.append(\"sku\", sku);\r\n    fd.append(\"pershkrimi\", pershkrimi);\r\n    fd.append(\"kategoria\", kategoriForm);\r\n    fd.append(\"cmimi\", cmimi);\r\n    fd.append(\"sasia\", sasia);\r\n    fd.append(\"njesia\", njesia);\r\n    fd.append(\"image\", image);\r\n    fd.append(\"attributes[]\", JSON.stringify(arrayOfObject3));\r\n    axios\r\n      .post(\"https://amove.alcodeit.com/shto_produkt.php\", fd)\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          alertContext.setAlert(\r\n            \"Plotesoni fushat,produkti nuk u shtua\",\r\n            \"error\"\r\n          );\r\n        } else if (res.data.status === 1) {\r\n          alertContext.setAlert(\"Produkti u shtua\", \"success\");\r\n          depoContext.getAllProducts();\r\n          closePopup();\r\n        }\r\n      });\r\n  };\r\n\r\n  const addNgjyrat = (e) => {\r\n    if (e.target.checked) {\r\n      setProductAtrributes(productAttributes.concat(e.target.value));\r\n    } else {\r\n      setProductAtrributes(\r\n        productAttributes.filter((attribute) => attribute !== e.target.value)\r\n      );\r\n    }\r\n  };\r\n  const addNames = (e) => {\r\n    if (e.target.checked) {\r\n      setProductAtrributesNames(productAttributesNames.concat(e.target.name));\r\n    } else {\r\n      setProductAtrributesNames(\r\n        productAttributesNames.filter(\r\n          (attribute) => attribute !== e.target.name\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const addIDS = (e) => {\r\n    if (e.target.checked) {\r\n      setProductAttributesValuesIDS(\r\n        productAttributesValuesIDS.concat(e.target.id)\r\n      );\r\n    } else {\r\n      setProductAttributesValuesIDS(\r\n        productAttributesValuesIDS.filter((attr) => attr !== e.target.id)\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"shtoprodukt-popup\">\r\n        <div\r\n          className=\"shtoprodukt-popup-opa\"\r\n          onClick={() => {\r\n            alertContext.setAlert(\"Shtimi i produktit u anullua\", \"warning\");\r\n            closePopup();\r\n          }}\r\n        ></div>\r\n        <div className=\"shtoprodukt-popup-form\">\r\n          <div className=\"shtoprodukt-popup-form-header\">\r\n            <h2>Shto Produkt</h2>\r\n            <CancelPresentationIcon\r\n              style={{ fontSize: \"35px\", cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                alertContext.setAlert(\r\n                  \"Shtimi i produktit u anullua\",\r\n                  \"warning\"\r\n                );\r\n                closePopup();\r\n              }}\r\n            />\r\n          </div>\r\n          <form className=\"form\" onSubmit={submit}>\r\n            <div className=\"form-titulli-sku\">\r\n              <div className=\"titulli\">\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setTitulli(e.target.value)}\r\n                  type=\"text\"\r\n                  style={{ width: \"70%\" }}\r\n                  placeholder=\"Titulli\"\r\n                  label=\"Titulli\"\r\n                />\r\n              </div>\r\n              <div className=\"sku\">\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setSku(e.target.value)}\r\n                  type=\"text\"\r\n                  style={{ width: \"60%\" }}\r\n                  placeholder=\"SKU\"\r\n                  label=\"SKU\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-pershkrimi-image\">\r\n              <div className=\"pershkrimi\">\r\n                <InputLabel>Pershkrimi</InputLabel>\r\n                <textarea\r\n                  onChange={writeDesc}\r\n                  style={{ width: \"80%\", height: \"80%\" }}\r\n                ></textarea>\r\n              </div>\r\n              <div\r\n                className={image === \"\" ? \"image\" : \"image outlinestyle-none\"}\r\n              >\r\n                {image === \"\" ? (\r\n                  <>\r\n                    <InputLabel\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      htmlFor=\"image\"\r\n                    >\r\n                      <AddIcon style={{ fontSize: \"70px\" }} /> upload{\" \"}\r\n                    </InputLabel>\r\n\r\n                    <Input\r\n                      onChange={(e) => {\r\n                        setImage(e.target.files[0]);\r\n                        setFile(URL.createObjectURL(e.target.files[0]));\r\n                      }}\r\n                      id=\"image\"\r\n                      type=\"file\"\r\n                      style={{ display: \"none\" }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <DeleteOutlineOutlinedIcon\r\n                      onClick={() => {\r\n                        setImage(\"\");\r\n                        setFile(\"\");\r\n                      }}\r\n                      className=\"delete-icon-image\"\r\n                    />\r\n                    <img src={file} alt=\"\" />\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"kategori-cmimi-stock\">\r\n              <FormControl variant=\"outlined\">\r\n                <InputLabel htmlFor=\"kategoria-label\">Kategoria</InputLabel>\r\n                <Select\r\n                  onChange={(e) => setKategoriForm(e.target.value)}\r\n                  style={{ width: \"150px\" }}\r\n                  value={kategoriForm === \"\" ? \"none\" : kategoriForm}\r\n                  label=\"Kategoria\"\r\n                  inputProps={{\r\n                    name: \"kategoria\",\r\n                    id: \"kategoria-label\",\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"\">None</MenuItem>\r\n                  {categoryProducts.map((category) => (\r\n                    <MenuItem value={category.name}> {category.name} </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                onChange={(e) => setCmimi(e.target.value)}\r\n                label=\"Cmimi\"\r\n                placeholder=\"Cmimi\"\r\n                type=\"number\"\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                onChange={(e) => setSasia(e.target.value)}\r\n                label=\"Stock\"\r\n                placeholder=\"Sasia\"\r\n                type=\"number\"\r\n              />\r\n              <FormControl variant=\"outlined\">\r\n                <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n                <Select\r\n                  value={njesia}\r\n                  onChange={(e) => setNjesia(e.target.value)}\r\n                  style={{ width: \"150px\" }}\r\n                  label=\"Njesia\"\r\n                  inputProps={{\r\n                    name: \"njesia\",\r\n                    id: \"njesia-label\",\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"cop\">Cop</MenuItem>\r\n                  <MenuItem value=\"kuti\">Kuti</MenuItem>\r\n                  <MenuItem value=\"pako\">Pako</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n\r\n            <div className=\"atribute-tjera\">\r\n              <h3 style={{ marginBottom: \"10px\" }}>Atribute te tjera</h3>\r\n              <div className=\"atributes-title\">\r\n                {attrNames.map((attr) => (\r\n                  <p key={attr.id_name}>\r\n                    {\" \"}\r\n                    <AddIcon style={{ fontSize: \"15px\" }} /> Mundesia e{\" \"}\r\n                    {attr.name}\r\n                  </p>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"ngjyrat-masat\">\r\n                {attrNames.map((attr) => (\r\n                  <div className=\"ngjyrat\" key={attr.name}>\r\n                    {attrValues\r\n                      .filter((attrValue) => attrValue.name_id === attr.id_name)\r\n                      .map((newValues) => (\r\n                        <FormControlLabel\r\n                          key={newValues.value}\r\n                          control={\r\n                            <Checkbox\r\n                              id={newValues.id}\r\n                              name={newValues.name}\r\n                              defaultValue={newValues.value}\r\n                              value={newValues.value}\r\n                              onClick={(e) => {\r\n                                addNames(e);\r\n                                addIDS(e);\r\n                                addNgjyrat(e);\r\n\r\n                                if (e.target.checked) {\r\n                                  setArrayofObjects((result) => [\r\n                                    ...result,\r\n                                    {\r\n                                      id: newValues.id,\r\n                                      sku: \"\",\r\n                                      cmimi: 0,\r\n                                      sasia: 0,\r\n                                    },\r\n                                  ]);\r\n                                } else {\r\n                                  setArrayofObjects(\r\n                                    arrayOfObjects.filter(\r\n                                      (object) => object.id !== newValues.id\r\n                                    )\r\n                                  );\r\n                                }\r\n                              }}\r\n                              color=\"primary\"\r\n                            />\r\n                          }\r\n                          label={newValues.value}\r\n                        />\r\n                      ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"extra-attr-price\">\r\n              {attrNames.map((attrName) => (\r\n                <div\r\n                  className=\"extra-attr-price-names\"\r\n                  style={{\r\n                    display:\r\n                      productAttributesNames.some(\r\n                        (attr) => attr === attrName.name\r\n                      ) === true\r\n                        ? \"\"\r\n                        : \"none\",\r\n                  }}\r\n                >\r\n                  <p>{attrName.name}</p>\r\n                  {attrValues\r\n                    .filter(\r\n                      (attrValue) => attrValue.name_id === attrName.id_name\r\n                    )\r\n                    .map((newAttrValue) => (\r\n                      <Accordion\r\n                        style={{\r\n                          backgroundColor: \"#ededed\",\r\n                          display:\r\n                            productAttributes.some(\r\n                              (attr) => attr === newAttrValue.value\r\n                            ) === true\r\n                              ? \"\"\r\n                              : \"none\",\r\n                        }}\r\n                      >\r\n                        <AccordionSummary\r\n                          expandIcon={<ExpandMoreIcon />}\r\n                          aria-controls=\"panel1a-content\"\r\n                          id=\"panel1a-header\"\r\n                        >\r\n                          {newAttrValue.value}\r\n                        </AccordionSummary>\r\n                        <Divider />\r\n                        <AccordionDetails className=\"accordion-details\">\r\n                          {arrayOfObjects\r\n                            .filter(\r\n                              (arrObject) => arrObject.id === newAttrValue.id\r\n                            )\r\n                            .map((values) => (\r\n                              <>\r\n                                <TextField\r\n                                  label=\"SKU\"\r\n                                  variant=\"outlined\"\r\n                                  onChange={(e) => {\r\n                                    values.sku = e.target.value;\r\n                                  }}\r\n                                />\r\n                                <TextField\r\n                                  label=\"Cmimi\"\r\n                                  variant=\"outlined\"\r\n                                  type=\"number\"\r\n                                  onChange={(e) => {\r\n                                    values.cmimi = e.target.value;\r\n                                  }}\r\n                                />\r\n                                <TextField\r\n                                  label=\"Sasia\"\r\n                                  variant=\"outlined\"\r\n                                  type=\"number\"\r\n                                  onChange={(e) => {\r\n                                    values.sasia = e.target.value;\r\n                                  }}\r\n                                />\r\n                              </>\r\n                            ))}\r\n                        </AccordionDetails>\r\n                      </Accordion>\r\n                    ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  closePopup();\r\n                  alertContext.setAlert(\r\n                    \"Shtimi i produktit u anullua\",\r\n                    \"warning\"\r\n                  );\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n              <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                Publiko\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKlientPopup.jsx",["251"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nexport default function ShtoKlientPopup({ closePopup }) {\r\n  const [emri, setEmer] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [zonaForm, setZonaForm] = useState(\"\");\r\n  const [kategoriForm, setKategoriForm] = useState(\"\");\r\n  const [image, setAvatar] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const depoContext = useContext(DepoContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { categoryClients, zonaClients } = depoContext;\r\n\r\n  useEffect(() => {\r\n    depoContext.getCategoryClients();\r\n    depoContext.getZonaClients();\r\n  }, []);\r\n\r\n  const shtoKlient = (e) => {\r\n    e.preventDefault();\r\n\r\n    let avatar = new FormData();\r\n\r\n    avatar.append(\"name\", emri);\r\n    avatar.append(\"email\", email);\r\n    avatar.append(\"password\", password);\r\n    avatar.append(\"role\", 3);\r\n    avatar.append(\"zona\", zonaForm);\r\n    avatar.append(\"kategoria\", kategoriForm);\r\n    avatar.append(\"image\", image);\r\n\r\n    const config = {\r\n      headers: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n    axios\r\n      .post(\"https://amove.alcodeit.com/register_klient.php\", avatar, config)\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          alertContext.setAlert(\"Plotesoni te gjitha fushat!\", \"error\");\r\n        } else if (res.data.status === 1) {\r\n          alertContext.setAlert(\"Klienti u shtua!\", \"success\");\r\n          depoContext.getAllClients();\r\n          closePopup();\r\n          setEmer(\"\");\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          setZonaForm(\"\");\r\n          setKategoriForm(\"\");\r\n          setAvatar(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"shtoklient-popup\">\r\n      <div className=\"shtoklient-popup-opa\" onClick={() => closePopup()}></div>\r\n      <div className=\"shtoklient-popup-container\">\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            padding: \"2px 5px\",\r\n          }}\r\n        >\r\n          <CloseOutlinedIcon\r\n            color=\"secondary\"\r\n            fontSize={\"large\"}\r\n            cursor=\"pointer\"\r\n            onClick={() => closePopup()}\r\n          />\r\n        </div>\r\n        <form className=\"shtoklient-popup-form\" onSubmit={shtoKlient}>\r\n          <TextField\r\n            className=\"input-popup\"\r\n            label=\"Emri\"\r\n            variant=\"outlined\"\r\n            value={emri}\r\n            onChange={(e) => setEmer(e.target.value)}\r\n          />\r\n          <TextField\r\n            className=\"input-popup\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            value={email}\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <TextField\r\n            className=\"input-popup\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            value={password}\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <div className=\"select-group\">\r\n            <InputLabel id=\"zonaForm\">Zona</InputLabel>\r\n            <Select\r\n              className=\"input-select\"\r\n              labelId=\"zonaForm\"\r\n              value={zonaForm}\r\n              onChange={(e) => setZonaForm(e.target.value)}\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value=\"None\"></MenuItem>\r\n\r\n              {zonaClients.map((zona) => (\r\n                <MenuItem value={zona.name}>{zona.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n            <InputLabel id=\"kategoriForm\">Kategoria</InputLabel>\r\n            <Select\r\n              className=\"input-select\"\r\n              labelId=\"kategoriForm\"\r\n              value={kategoriForm}\r\n              onChange={(e) => setKategoriForm(e.target.value)}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              <MenuItem value=\"None\"></MenuItem>\r\n              {categoryClients.map((category) => (\r\n                <MenuItem value={category.name}>{category.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n          {image === \"\" ? (\r\n            <>\r\n              <InputLabel\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                htmlFor=\"image\"\r\n              >\r\n                <AddIcon style={{ fontSize: \"70px\" }} /> Upload image{\" \"}\r\n              </InputLabel>\r\n              <Input\r\n                type=\"file\"\r\n                id=\"image\"\r\n                className=\"input-file\"\r\n                style={{ display: \"none\" }}\r\n                onChange={(e) => {\r\n                  setAvatar(e.target.files[0]);\r\n                  setFile(URL.createObjectURL(e.target.files[0]));\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <div className=\"image-klient-form\">\r\n              <DeleteOutlineOutlinedIcon\r\n                onClick={() => {\r\n                  setAvatar(\"\");\r\n                  setFile(\"\");\r\n                }}\r\n                className=\"delete-icon-image\"\r\n              />\r\n              <img src={file} alt=\"\" />\r\n            </div>\r\n          )}\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            style={{ width: \"40%\", marginTop: \"50px\", marginBottom: \"40px\" }}\r\n          >\r\n            Shto\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollapseReducer.jsx",["252"],"import { SET_COLLAPSE_FALSE, SET_COLLAPSE_TRUE } from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_COLLAPSE_TRUE:\r\n      return action.payload;\r\n    case SET_COLLAPSE_FALSE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseContext.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoOfertePop.jsx",["253","254"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport OfertaSingleProductForm from \"./ofertaForms/OfertaSingleProductForm\";\r\nimport CategoryProductOfertaForm from \"./ofertaForms/CategoryProductOfertaForm\";\r\nimport ClientSpecifikOfertaForm from \"./ofertaForms/ClientSpecifikOfertaForm\";\r\nimport CategoryClientOfertaForm from \"./ofertaForms/CategoryClientOfertaForm\";\r\nimport OfertSetForm from \"./ofertaForms/OfertSetForm\";\r\nimport OfertaGrupForm from \"./ofertaForms/OfertaGrupForm\";\r\nimport { CloseOutlined } from \"@material-ui/icons\";\r\nexport default function ShtoOfertePop({ closePop }) {\r\n  const [ofertaType, setOfertaType] = useState(\"singleProduct\");\r\n\r\n  return (\r\n    <div className=\"shto-oferte-pop\">\r\n      <div className=\"shto-oferte-pop-opa\" onClick={closePop}></div>\r\n      <div className=\"shto-oferte-pop-container\">\r\n        <CloseOutlined\r\n          style={{\r\n            alignSelf: \"flex-end\",\r\n            marginRight: \"10px\",\r\n            marginTop: \"5px\",\r\n            fontSize: \"30px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={closePop}\r\n        />\r\n        <div className=\"shto-oferte-pop-cotnainer-header-tabs\">\r\n          <Button\r\n            style={{ color: ofertaType === \"singleProduct\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"singleProduct\")}\r\n          >\r\n            Single Product\r\n          </Button>\r\n          <Button\r\n            style={{ color: ofertaType === \"categoryProduct\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"categoryProduct\")}\r\n          >\r\n            Kategori Produkti\r\n          </Button>\r\n          <Button\r\n            style={{ color: ofertaType === \"specifikClient\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"specifikClient\")}\r\n          >\r\n            Klient Specifik\r\n          </Button>\r\n          <Button\r\n            style={{ color: ofertaType === \"categoryClient\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"categoryClient\")}\r\n          >\r\n            Kategori Klienti\r\n          </Button>\r\n          <Button\r\n            style={{ color: ofertaType === \"ofertSet\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"ofertSet\")}\r\n          >\r\n            Ofert Set\r\n          </Button>\r\n          <Button\r\n            style={{ color: ofertaType === \"ofertGrup\" ? \"#2a7ebf\" : \"\" }}\r\n            onClick={() => setOfertaType(\"ofertGrup\")}\r\n          >\r\n            Ofert Grup\r\n          </Button>\r\n        </div>\r\n        <div className=\"shto-oferte-pop-cotnainer-forms\">\r\n          {ofertaType === \"singleProduct\" && <OfertaSingleProductForm />}\r\n          {ofertaType === \"categoryProduct\" && <CategoryProductOfertaForm />}\r\n          {ofertaType === \"specifikClient\" && <ClientSpecifikOfertaForm />}\r\n          {ofertaType === \"categoryClient\" && <CategoryClientOfertaForm />}\r\n          {ofertaType === \"ofertSet\" && <OfertSetForm />}\r\n          {ofertaType === \"ofertGrup\" && <OfertaGrupForm />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\AccountDetails.jsx",["255"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SaveOutlinedIcon from \"@material-ui/icons/SaveOutlined\";\r\nimport axios from \"axios\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\n\r\nexport default function AccountDetails() {\r\n  const depoContext = useContext(DepoContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { user } = depoContext;\r\n  const [userSettings, setUserSettings] = useState(\"general\");\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editEmail, setEditEmail] = useState(\"\");\r\n  const [deletedImage, setDeletedImage] = useState(false);\r\n  const [editImage, setEditImage] = useState(\"\");\r\n  const [editFile, setEditFile] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setEditImage(user.image_profile);\r\n    setEditFile(user.image_profile);\r\n    setEditName(user.name);\r\n    setEditEmail(user.email);\r\n  },[]);\r\n\r\n  const onChangeGeneral = (e) => {\r\n    e.preventDefault();\r\n\r\n    const fd = new FormData();\r\n    fd.append(\"id\", user.id);\r\n    fd.append(\"name\", editName);\r\n    fd.append(\"email\", editEmail);\r\n    fd.append(\"image\", editImage);\r\n\r\n    axios\r\n      .post(\"https://amove.alcodeit.com/change_general_settings.php\", fd)\r\n      .then((res) => {\r\n        if (res.data.status === 1) {\r\n          alertContext.setAlert(`${res.data.message}`, \"success\");\r\n          depoContext.getUser();\r\n        } else {\r\n          alertContext.setAlert(`${res.data.message}`, \"error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\"https://amove.alcodeit.com/change_password.php\", {\r\n        id: user.id,\r\n        newPassword: newPassword,\r\n        oldPassword: currentPassword,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.status === 1) {\r\n          alertContext.setAlert(`${res.data.message}`, \"success\");\r\n          setNewPassword(\"\");\r\n          setCurrentPassword(\"\");\r\n        } else {\r\n          alertContext.setAlert(`${res.data.message}`, \"error\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"account-details\">\r\n        <div className=\"account-details-buttons\">\r\n          <Button\r\n            style={{\r\n              color: userSettings === \"general\" ? \"#1b75bc\" : \"inherit\",\r\n            }}\r\n            onClick={() => setUserSettings(\"general\")}\r\n          >\r\n            {\" \"}\r\n            General Info{\" \"}\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              color: userSettings === \"password\" ? \"#1b75bc\" : \"inherit\",\r\n            }}\r\n            onClick={() => setUserSettings(\"password\")}\r\n          >\r\n            {\" \"}\r\n            Change Password{\" \"}\r\n          </Button>\r\n        </div>\r\n        <div className=\"account-details-container\">\r\n          {userSettings === \"general\" && (\r\n            <form\r\n              className=\"account-details-general\"\r\n              onSubmit={onChangeGeneral}\r\n            >\r\n              <div className=\"account-details-general-left\">\r\n                <div className=\"account-details-general-image\">\r\n                  {editImage === \"\" ? (\r\n                    <>\r\n                      <InputLabel\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        htmlFor=\"image\"\r\n                      >\r\n                        <AddIcon style={{ fontSize: \"70px\" }} /> upload{\" \"}\r\n                      </InputLabel>\r\n                      <Input\r\n                        onChange={(e) => {\r\n                          setEditImage(e.target.files[0]);\r\n                          setEditFile(URL.createObjectURL(e.target.files[0]));\r\n                        }}\r\n                        id=\"image\"\r\n                        type=\"file\"\r\n                        style={{ display: \"none\" }}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {deletedImage === true ? (\r\n                        <>\r\n                          <div className=\"account-details-delete-img\">\r\n                            <DeleteOutlineOutlinedIcon\r\n                              onClick={() => {\r\n                                setEditImage(\"\");\r\n                                setEditFile(\"\");\r\n                                setDeletedImage(true);\r\n                              }}\r\n                              style={{\r\n                                fontSize: \"30px\",\r\n                                color: \"red\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <img src={editFile} alt=\"\" />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <div className=\"account-details-delete-img\">\r\n                            <DeleteOutlineOutlinedIcon\r\n                              onClick={() => {\r\n                                setEditImage(\"\");\r\n                                setEditFile(\"\");\r\n                                setDeletedImage(true);\r\n                              }}\r\n                              style={{\r\n                                fontSize: \"30px\",\r\n                                color: \"red\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <img\r\n                            src={`https://amove.alcodeit.com/images/${editImage}`}\r\n                            alt=\"\"\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"account-details-general-right\">\r\n                <TextField\r\n                  value={editName}\r\n                  onChange={(e) => setEditName(e.target.value)}\r\n                  label=\"Emri\"\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <TextField\r\n                  value={editEmail}\r\n                  onChange={(e) => setEditEmail(e.target.value)}\r\n                  label=\"Email\"\r\n                  variant=\"outlined\"\r\n                  style={{ width: \"80%\" }}\r\n                />\r\n                <Button\r\n                  startIcon={<EditOutlinedIcon />}\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  style={{ padding: \"6px 50px\", fontSize: \"16px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n          {userSettings === \"password\" && (\r\n            <form\r\n              className=\"account-details-changepasword\"\r\n              onSubmit={onChangePassword}\r\n            >\r\n              <TextField\r\n                style={{ width: \"60%\" }}\r\n                label=\"Current Password\"\r\n                variant=\"outlined\"\r\n                value={currentPassword}\r\n                onChange={(e) => setCurrentPassword(e.target.value)}\r\n                type=\"password\"\r\n              />\r\n              <TextField\r\n                style={{ width: \"60%\" }}\r\n                label=\"New Password\"\r\n                variant=\"outlined\"\r\n                value={newPassword}\r\n                onChange={(e) => setNewPassword(e.target.value)}\r\n                type=\"password\"\r\n              />\r\n              <Button\r\n                startIcon={<SaveOutlinedIcon />}\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n              >\r\n                Ruaj\r\n              </Button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertaSingleProductForm.jsx",["256","257"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport default function OfertaSingleProductForm() {\r\n  const depoContext = useContext(DepoContext);\r\n  const {\r\n    produktet,\r\n    produktAttr,\r\n    attrValues,\r\n    klientet,\r\n    categoryClients,\r\n  } = depoContext;\r\n  const [produktiZgjedhur, setProduktiZgjedhur] = useState({});\r\n  const [njesia, setNjesia] = useState(\"\");\r\n  const [ulja, setUlja] = useState(\"\");\r\n  const [dataFillimit, setDataFillimit] = useState(\"\");\r\n  const [dataMbarimit, setDataMbarimit] = useState(\"\");\r\n  const attrIDPr = produktAttr.map((pr) => pr.attr_id);\r\n  const attrProduktesh = attrValues.filter((atrr) =>\r\n    attrIDPr.includes(atrr.id)\r\n  );\r\n  const [teGjitheKlientet, setTeGjitheKlientet] = useState(false);\r\n  const [teGithaAtributet, setTeGjithaAtributet] = useState(false);\r\n  useEffect(() => {\r\n    depoContext.getAllProducts();\r\n    depoContext.getAttrValues();\r\n    depoContext.getCategoryClients();\r\n    depoContext.getAllClients();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (produktiZgjedhur === null) {\r\n      depoContext.getProduktAttr(0);\r\n    } else {\r\n      depoContext.getProduktAttr(produktiZgjedhur.id);\r\n    }\r\n  }, [produktiZgjedhur]);\r\n\r\n  return (\r\n    <>\r\n      <form className=\"ofert-sinlgeProduct-form\">\r\n        <div className=\"ofert-singleProduct-form-emriProduktit\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={produktet}\r\n            getOptionLabel={(option) => option.titulli}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setProduktiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Emri Produktit\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={ulja}\r\n            onChange={(e) => setUlja(e.target.value)}\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={njesia}\r\n              onChange={(e) => setNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setDataFillimit(e.target.value)}\r\n            value={dataFillimit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={dataMbarimit}\r\n            onChange={(e) => setDataMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {produktiZgjedhur !== {} || produktiZgjedhur !== null ? (\r\n          <div className=\"ofert-singleProduct-form-prAttributes\">\r\n            <>\r\n              {attrProduktesh.length === 0 ? (\r\n                <p> Ky produkt nuk ka atribute </p>\r\n              ) : (\r\n                <>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color={\"primary\"}\r\n                        onChange={(e) => setTeGjithaAtributet(e.target.checked)}\r\n                        checked={teGithaAtributet}\r\n                      />\r\n                    }\r\n                    label={\"Zgjidh te gjitha\"}\r\n                  />\r\n                  <div className=\"ofert-singleProduct-form-attributet\">\r\n                    {attrProduktesh.map((attr) => (\r\n                      <FormControlLabel\r\n                        disabled={teGithaAtributet}\r\n                        control={<Checkbox color={\"primary\"} />}\r\n                        label={attr.value}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div className=\"ofert-singleProduct-form-kategoriKlienti\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            disabled={teGjitheKlientet}\r\n            multiple\r\n            filterSelectedOptions\r\n            options={categoryClients}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setProduktiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategori Klienti\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            multiple\r\n            filterSelectedOptions\r\n            disabled={teGjitheKlientet}\r\n            options={klientet}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setProduktiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Klient Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                color={\"primary\"}\r\n                onChange={(e) => setTeGjitheKlientet(e.target.checked)}\r\n                checked={teGjitheKlientet}\r\n              />\r\n            }\r\n            label={\"Zgjidh te gjithe klientet\"}\r\n          />\r\n        </div>\r\n        <div className=\"ofert-singleProduct-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\CategoryProductOfertaForm.jsx",["258","259","260","261"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default function CategoryProductOfertaForm() {\r\n  useEffect(() => {\r\n    depoContext.getCategoryProducts();\r\n    depoContext.getCategoryClients();\r\n    depoContext.getAllClients();\r\n  }, []);\r\n\r\n  const depoContext = useContext(DepoContext);\r\n  const { categoryProducts, categoryClients, klientet } = depoContext;\r\n  const [kategoriProduktZgjedhur, setKategoriProduktZgjedhur] = useState({});\r\n  const [njesia, setNjesia] = useState(\"\");\r\n  const [ulja, setUlja] = useState(\"\");\r\n  const [dataFillimit, setDataFillimit] = useState(\"\");\r\n  const [dataMbarimit, setDataMbarimit] = useState(\"\");\r\n  const [kategoriteKlienteve, setKategoriteKlienteve] = useState([]);\r\n  const [tegjithekateogritKient, settegjitheKategoriteKliente] = useState(\r\n    false\r\n  );\r\n  const [klientSpecifik, setKlientSpecifik] = useState({});\r\n\r\n  return (\r\n    <>\r\n      <form className=\"ofert-categoryProduct-form\">\r\n        <div className=\"ofert-categoryProduct-form-kategoriProdukti\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={categoryProducts}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKategoriProduktZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategoria e Produktit\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={ulja}\r\n            onChange={(e) => setUlja(e.target.value)}\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={njesia}\r\n              onChange={(e) => setNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setDataFillimit(e.target.value)}\r\n            value={dataFillimit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={dataMbarimit}\r\n            onChange={(e) => setDataMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"ofert-categoryProduct-form-kategoriKlienti\">\r\n          <Autocomplete\r\n            multiple\r\n            filterSelectedOptions\r\n            id=\"combo-box-demo\"\r\n            options={categoryClients}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            disabled={tegjithekateogritKient}\r\n            onChange={(event, newValue) => {\r\n              setKategoriteKlienteve(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategorite e Klienteve\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                id={\"check-all-categoriesClient\"}\r\n                name={\"check-all-categoriesClient\"}\r\n                defaultValue={\"check-all-categoriesClient\"}\r\n                onChange={() => {\r\n                  settegjitheKategoriteKliente(!tegjithekateogritKient);\r\n                }}\r\n                color=\"primary\"\r\n                checked={tegjithekateogritKient}\r\n              />\r\n            }\r\n            label={\"Zgjidh te gjithe kategorite e klienteve\"}\r\n          />\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            multiple\r\n            options={klientet}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKlientSpecifik(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Klient Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"ofert-categoryProduct-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\ClientSpecifikOfertaForm.jsx",["262","263","264","265"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport PlaylistAddOutlinedIcon from \"@material-ui/icons/PlaylistAddOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\n\r\nexport default function ClientSpecifikOfertaForm() {\r\n  useEffect(() => {\r\n    depoContext.getAllClients();\r\n    depoContext.getCategoryProducts();\r\n    depoContext.getAllProducts();\r\n  }, []);\r\n\r\n  const depoContext = useContext(DepoContext);\r\n  const { klientet, categoryProducts, produktet } = depoContext;\r\n  const [emriKlientit, setEmriKlientit] = useState({});\r\n  const [njesia, setNjesia] = useState(\"\");\r\n  const [ulja, setUlja] = useState(\"\");\r\n  const [dataFillimit, setDataFillimit] = useState(\"\");\r\n  const [dataMbarimit, setDataMbarimit] = useState(\"\");\r\n  const [kategoriteProdukteve, setKategoriteProdukteve] = useState([]);\r\n  const [produktSpecifik, setProduktSpecifik] = useState([]);\r\n  const [setet, setSetet] = useState([\r\n    { emriProduktit: {}, bli: \"\", perfito: \"\" },\r\n  ]);\r\n\r\n  const deleteSet = (seti) => {\r\n    setSetet(setet.filter((obj) => obj !== seti));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"oferta-clientSpecifikForm-form\">\r\n        <div className=\"oferta-clientSpecifikForm-form-emerKlienti\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={klientet}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setEmriKlientit(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Emri Klientit\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={ulja}\r\n            onChange={(e) => setUlja(e.target.value)}\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={njesia}\r\n              onChange={(e) => setNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setDataFillimit(e.target.value)}\r\n            value={dataFillimit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={dataMbarimit}\r\n            onChange={(e) => setDataMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-clientSpecifikForm-form-kategoriProdukti\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            multiple\r\n            filterSelectedOptions\r\n            options={categoryProducts}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKategoriteProdukteve(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategorite e Produkteve\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            multiple\r\n            filterSelectedOptions\r\n            options={produktet}\r\n            getOptionLabel={(option) => option.titulli}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setProduktSpecifik(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Produkt Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-clientSpecifikForm-form-setProdukti\">\r\n          <div className=\"oferta-clientSpecifikForm-form-setProdukti-btnShtoSet\">\r\n            <p>Set Produkti</p>\r\n            <Button\r\n              startIcon={<PlaylistAddOutlinedIcon />}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setSetet((result) => [\r\n                  ...result,\r\n                  { emriProduktit: {}, bli: \"\", perfito: \"\" },\r\n                ]);\r\n              }}\r\n            >\r\n              Shto set\r\n            </Button>\r\n          </div>\r\n          {setet.map((set) => (\r\n            <div className=\"oferta-clientSpecifikForm-form-setProdukti-item\">\r\n              <DeleteOutlineOutlinedIcon\r\n                onClick={() => deleteSet(set)}\r\n                style={{\r\n                  color: \"red\",\r\n                  fontSize: \"25px\",\r\n                  cursor: \"pointer\",\r\n                  display: setet.length === 1 ? \"none\" : \"\",\r\n                }}\r\n              />\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={produktet}\r\n                getOptionLabel={(option) => option.titulli}\r\n                style={{ width: \"30%\" }}\r\n                autoHighlight\r\n                onChange={(event, newValue) => {\r\n                  set.emriProduktit = newValue;\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"Produktet\" variant=\"outlined\" />\r\n                )}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Bli\"\r\n                type={\"number\"}\r\n                onChange={(e) => (set.bli = e.target.value)}\r\n              />\r\n              <p style={{ fontSize: \"30px\" }}>+</p>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Perfito\"\r\n                type={\"number\"}\r\n                onChange={(e) => (set.perfito = e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"oferta-clientSpecifikForm-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\CategoryClientOfertaForm.jsx",["266","267","268","269","270","271"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PlaylistAddOutlinedIcon from \"@material-ui/icons/PlaylistAddOutlined\";\r\nimport DeleteSweepOutlinedIcon from \"@material-ui/icons/DeleteSweepOutlined\";\r\n\r\nexport default function CategoryClientOfertaForm() {\r\n  useEffect(() => {\r\n    depoContext.getCategoryClients();\r\n    depoContext.getCategoryProducts();\r\n    depoContext.getAllProducts();\r\n  }, []);\r\n\r\n  const depoContext = useContext(DepoContext);\r\n  const { categoryClients, produktet, categoryProducts } = depoContext;\r\n  const [kategoriKlientiZgjedhur, setKategoriKlientiZgjedhur] = useState({});\r\n  const [njesia, setNjesia] = useState(\"\");\r\n  const [ulja, setUlja] = useState(\"\");\r\n  const [dataFillimit, setDataFillimit] = useState(\"\");\r\n  const [dataMbarimit, setDataMbarimit] = useState(\"\");\r\n  const [kategoriteProdukteve, setKategoriteProdukteve] = useState([]);\r\n  const [produkteSpecifike, setProdukteSpecfike] = useState([]);\r\n  const [setet, setSetet] = useState([\r\n    { emriProduktit: {}, bli: \"\", perfito: \"\" },\r\n  ]);\r\n  const deleteSet = (seti) => {\r\n    setSetet(setet.filter((obj) => obj !== seti));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"oferta-categoryClient-form\">\r\n        <div className=\"oferta-categoryClient-form-catKlient\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={categoryClients}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKategoriKlientiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategoria Klientit\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={ulja}\r\n            onChange={(e) => setUlja(e.target.value)}\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={njesia}\r\n              onChange={(e) => setNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setDataFillimit(e.target.value)}\r\n            value={dataFillimit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={dataMbarimit}\r\n            onChange={(e) => setDataMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-categoryClient-form-categoryProduct\">\r\n          <Autocomplete\r\n            multiple\r\n            filterSelectedOptions\r\n            id=\"combo-box-demo\"\r\n            options={categoryProducts}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKategoriKlientiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategoria e Produktit\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            filterSelectedOptions\r\n            id=\"combo-box-demo\"\r\n            options={produktet}\r\n            getOptionLabel={(option) => option.titulli}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKategoriKlientiZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Produkt Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-categoryClient-form-setProduktesh\">\r\n          <div className=\"oferta-categoryClient-form-setProduktesh-btnShtoSet\">\r\n            <p>Set Produktesh</p>\r\n            <Button\r\n              startIcon={<PlaylistAddOutlinedIcon />}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={() => {\r\n                setSetet((result) => [\r\n                  ...result,\r\n                  { emriProduktit: {}, bli: \"\", perfito: \"\" },\r\n                ]);\r\n              }}\r\n            >\r\n              Shto set\r\n            </Button>\r\n          </div>\r\n          {setet.map((set) => (\r\n            <div className=\"oferta-categoryClient-form-setProduktesh-item\">\r\n              <DeleteSweepOutlinedIcon\r\n                style={{\r\n                  color: \"red\",\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"25px\",\r\n                  display: setet.length === 1 ? \"none\" : \"\",\r\n                }}\r\n                onClick={() => deleteSet(set)}\r\n              />\r\n              <Autocomplete\r\n                id=\"combo-box-demo\"\r\n                options={produktet}\r\n                getOptionLabel={(option) => option.titulli}\r\n                style={{ width: \"30%\" }}\r\n                autoHighlight\r\n                onChange={(event, newValue) => {\r\n                  set.emriProduktit = newValue;\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField {...params} label=\"Produktet\" variant=\"outlined\" />\r\n                )}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Bli\"\r\n                type={\"number\"}\r\n                onChange={(e) => (set.bli = e.target.value)}\r\n              />\r\n              <p style={{ fontSize: \"30px\" }}>+</p>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Perfito\"\r\n                type={\"number\"}\r\n                onChange={(e) => (set.perfito = e.target.value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"oferta-categoryClient-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertSetForm.jsx",["272"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PlaylistAddOutlinedIcon from \"@material-ui/icons/PlaylistAddOutlined\";\r\nimport DeleteSweepOutlinedIcon from \"@material-ui/icons/DeleteSweepOutlined\";\r\n\r\nexport default function OfertSetForm() {\r\n  useEffect(() => {\r\n    depoContext.getAllProducts();\r\n  }, []);\r\n\r\n  const depoContext = useContext(DepoContext);\r\n  const { produktet } = depoContext;\r\n  const [setet, setSetet] = useState([\r\n    {\r\n      emriProduktit: {},\r\n      sasiaProduktit: \"\",\r\n      sasiaFalas: \"\",\r\n      produktiDhurat: {},\r\n    },\r\n  ]);\r\n\r\n  const deleteSet = (seti) => {\r\n    setSetet(setet.filter((obj) => obj !== seti));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"oferta-set-form\">\r\n        <div className=\"oferta-set-form-shtoSetBtn\">\r\n          <Button\r\n            startIcon={<PlaylistAddOutlinedIcon />}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            onClick={() => {\r\n              setSetet((result) => [\r\n                ...result,\r\n                {\r\n                  emriProduktit: {},\r\n                  sasiaProduktit: \"\",\r\n                  sasiaFalas: \"\",\r\n                  produktiDhurat: {},\r\n                },\r\n              ]);\r\n            }}\r\n          >\r\n            Shto Set\r\n          </Button>\r\n        </div>\r\n\r\n        {setet.map((set, index) => (\r\n          <div key={index} className=\"oferta-set-form-emriProduktit\">\r\n            <DeleteSweepOutlinedIcon\r\n              style={{\r\n                color: \"red\",\r\n                fontSize: \"26px\",\r\n                cursor: \"pointer\",\r\n                display: setet.length === 1 ? \"none\" : \"\",\r\n              }}\r\n              onClick={() => deleteSet(set)}\r\n            />\r\n            <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={produktet}\r\n              getOptionLabel={(option) => option.titulli}\r\n              style={{ width: 200 }}\r\n              autoHighlight\r\n              onChange={(event, newValue) => {\r\n                set.emriProduktit = newValue;\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Emri Produktit\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n            <TextField\r\n              label=\"Sasia\"\r\n              onChange={(e) => (set.sasiaProduktit = e.target.value)}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n            />\r\n            <TextField\r\n              label=\"Falas\"\r\n              onChange={(e) => (set.sasiaFalas = e.target.value)}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n            />\r\n            <Autocomplete\r\n              id=\"combo-box-demo\"\r\n              options={produktet}\r\n              getOptionLabel={(option) => option.titulli}\r\n              style={{ width: 200 }}\r\n              autoHighlight\r\n              onChange={(event, newValue) => {\r\n                set.produktiDhurat = newValue;\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Produkti Dhurat\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        <div className=\"oferta-set-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ofertaForms\\OfertaGrupForm.jsx",["273","274","275","276","277"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport DepoContext from \"../../../../context/depoContext/DepoContext\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nexport default function OfertaGrupForm() {\r\n  useEffect(() => {\r\n    depoContext.getCategoryClients();\r\n    depoContext.getCategoryProducts();\r\n    depoContext.getAllProducts();\r\n    depoContext.getAllClients();\r\n  }, []);\r\n  const depoContext = useContext(DepoContext);\r\n  const {\r\n    categoryClients,\r\n    produktet,\r\n    categoryProducts,\r\n    klientet,\r\n  } = depoContext;\r\n  const [catProductZgjedhur, setCatProductZgjedhur] = useState({});\r\n  const [catPrUlja, setCatPrUlja] = useState(\"\");\r\n  const [catPrNjesia, setCatPrNjesia] = useState(\"\");\r\n  const [catPrPeriudhaFillimit, setCatPrPeriudhaFillimit] = useState(\"\");\r\n  const [catPrPeriudhaMbarimit, setCatPrPeriudhaMbarimit] = useState(\"\");\r\n\r\n  const [produktSpecifikZgjedhur, setProduktSpecifikZgjedhur] = useState({});\r\n  const [prSpeUlja, setPrSpeUlja] = useState(\"\");\r\n  const [prSpeNjesia, setPrSpeNjesia] = useState(\"\");\r\n  const [prSpePeriudhaFillmit, setPrSpePeriudhaFillmit] = useState(\"\");\r\n  const [prSpePeriudhaMbarimit, setPrSpePeriudhaMbarimit] = useState(\"\");\r\n\r\n  const [kategoriKlientiZgjedhur, setKategoriKlientiZgjedhur] = useState({});\r\n  const [katKliUlja, setKatKliUlja] = useState(\"\");\r\n  const [katKliNjesia, setKatKliNjesia] = useState(\"\");\r\n  const [katKliPeriudhaFillimit, setKatKliPeriudhaFillimit] = useState(\"\");\r\n  const [katKliPeriudhaMbarimit, setKatKliPeriudhaMbarimit] = useState(\"\");\r\n  const [tegjithekateogritKient, settegjitheKategoriteKliente] = useState(\r\n    false\r\n  );\r\n  const [klientSpecifik, setKlientSpecifik] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <form className=\"oferta-grup-form\">\r\n        <div className=\"oferta-grup-form-kategoriProdukti\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={categoryProducts}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setCatProductZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Kategoria Produktit\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={catPrUlja}\r\n            onChange={(e) => setCatPrUlja(e.target.value)}\r\n            type=\"number\"\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={catPrNjesia}\r\n              onChange={(e) => setCatPrNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setCatPrPeriudhaFillimit(e.target.value)}\r\n            value={catPrPeriudhaFillimit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={catPrPeriudhaMbarimit}\r\n            onChange={(e) => setCatPrPeriudhaMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-grup-form-produktSpecifik\">\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={produktet}\r\n            getOptionLabel={(option) => option.titulli}\r\n            style={{ width: 200 }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setProduktSpecifikZgjedhur(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Produkt Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            style={{ width: \"100px\" }}\r\n            variant=\"outlined\"\r\n            label=\"Ulja\"\r\n            value={prSpeUlja}\r\n            onChange={(e) => setPrSpeUlja(e.target.value)}\r\n            type=\"number\"\r\n          />\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n            <Select\r\n              value={prSpeNjesia}\r\n              onChange={(e) => setPrSpeNjesia(e.target.value)}\r\n              style={{ width: \"130px\" }}\r\n              label=\"Status\"\r\n              inputProps={{\r\n                name: \"status\",\r\n                id: \"njesia-label\",\r\n              }}\r\n            >\r\n              <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n              <MenuItem value={\"%\"}>%</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e fillimit\"\r\n            onChange={(e) => setPrSpePeriudhaFillmit(e.target.value)}\r\n            value={prSpePeriudhaFillmit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"date\"\r\n            variant=\"outlined\"\r\n            label=\"Data e mbarimit\"\r\n            value={prSpePeriudhaMbarimit}\r\n            onChange={(e) => setPrSpePeriudhaMbarimit(e.target.value)}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-grup-form-kategoriKlienti\">\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Autocomplete\r\n              disabled={tegjithekateogritKient}\r\n              id=\"combo-box-demo\"\r\n              options={categoryClients}\r\n              getOptionLabel={(option) => option.name}\r\n              style={{ width: 200 }}\r\n              autoHighlight\r\n              onChange={(event, newValue) => {\r\n                setKategoriKlientiZgjedhur(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Kategori Klienti\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n            <TextField\r\n              style={{ width: \"100px\" }}\r\n              variant=\"outlined\"\r\n              label=\"Ulja\"\r\n              value={katKliUlja}\r\n              onChange={(e) => setKatKliUlja(e.target.value)}\r\n              type=\"number\"\r\n            />\r\n            <FormControl variant=\"outlined\">\r\n              <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n              <Select\r\n                value={katKliNjesia}\r\n                onChange={(e) => setKatKliNjesia(e.target.value)}\r\n                style={{ width: \"130px\" }}\r\n                label=\"Status\"\r\n                inputProps={{\r\n                  name: \"status\",\r\n                  id: \"njesia-label\",\r\n                }}\r\n              >\r\n                <MenuItem value={\"Leke\"}>Leke</MenuItem>\r\n                <MenuItem value={\"%\"}>%</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              label=\"Data e fillimit\"\r\n              onChange={(e) => setKatKliPeriudhaFillimit(e.target.value)}\r\n              value={katKliPeriudhaFillimit}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              label=\"Data e mbarimit\"\r\n              value={katKliPeriudhaMbarimit}\r\n              onChange={(e) => setKatKliPeriudhaMbarimit(e.target.value)}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </div>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                id={\"check-all-categoriesClient\"}\r\n                name={\"check-all-categoriesClient\"}\r\n                defaultValue={\"check-all-categoriesClient\"}\r\n                onChange={() => {\r\n                  settegjitheKategoriteKliente(!tegjithekateogritKient);\r\n                }}\r\n                color=\"primary\"\r\n                checked={tegjithekateogritKient}\r\n              />\r\n            }\r\n            label={\"Zgjidh te gjithe kategorite e klienteve\"}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-grup-form-klientSpecifik\">\r\n          <Autocomplete\r\n            multiple\r\n            disabled={tegjithekateogritKient}\r\n            filterSelectedOptions\r\n            id=\"combo-box-demo\"\r\n            options={klientet}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            autoHighlight\r\n            onChange={(event, newValue) => {\r\n              setKlientSpecifik(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Klient Specifik\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"oferta-grup-form-buttons\">\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Ruaj\r\n          </Button>\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            Anullo\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Home.jsx",[],{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","severity":1,"message":"283","line":29,"column":6,"nodeType":"284","endLine":29,"endColumn":8,"suggestions":"285"},{"ruleId":"282","severity":1,"message":"286","line":37,"column":6,"nodeType":"284","endLine":37,"endColumn":8,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":17,"column":1,"nodeType":"290","endLine":48,"endColumn":3},{"ruleId":"288","severity":1,"message":"289","line":10,"column":1,"nodeType":"290","endLine":27,"endColumn":3},{"ruleId":"288","severity":1,"message":"289","line":3,"column":1,"nodeType":"290","endLine":12,"endColumn":2},{"ruleId":"282","severity":1,"message":"291","line":89,"column":6,"nodeType":"284","endLine":89,"endColumn":8,"suggestions":"292"},{"ruleId":"282","severity":1,"message":"283","line":33,"column":6,"nodeType":"284","endLine":33,"endColumn":8,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":49,"column":51,"nodeType":"296","messageId":"297","endLine":49,"endColumn":53},{"ruleId":"282","severity":1,"message":"283","line":95,"column":6,"nodeType":"284","endLine":95,"endColumn":8,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":19,"column":59,"nodeType":"301","messageId":"302","endLine":19,"endColumn":61},{"ruleId":"303","severity":1,"message":"304","line":1,"column":40,"nodeType":"305","messageId":"306","endLine":1,"endColumn":48},{"ruleId":"282","severity":1,"message":"286","line":16,"column":6,"nodeType":"284","endLine":16,"endColumn":8,"suggestions":"307"},{"ruleId":"282","severity":1,"message":"286","line":110,"column":6,"nodeType":"284","endLine":110,"endColumn":8,"suggestions":"308"},{"ruleId":"282","severity":1,"message":"286","line":131,"column":6,"nodeType":"284","endLine":131,"endColumn":8,"suggestions":"309"},{"ruleId":"299","severity":1,"message":"300","line":138,"column":14,"nodeType":"301","messageId":"302","endLine":138,"endColumn":16},{"ruleId":"299","severity":1,"message":"300","line":476,"column":59,"nodeType":"301","messageId":"302","endLine":476,"endColumn":61},{"ruleId":"282","severity":1,"message":"286","line":30,"column":6,"nodeType":"284","endLine":30,"endColumn":8,"suggestions":"310"},{"ruleId":"282","severity":1,"message":"286","line":67,"column":6,"nodeType":"284","endLine":67,"endColumn":8,"suggestions":"311"},{"ruleId":"282","severity":1,"message":"286","line":72,"column":6,"nodeType":"284","endLine":72,"endColumn":8,"suggestions":"312"},{"ruleId":"282","severity":1,"message":"286","line":72,"column":6,"nodeType":"284","endLine":72,"endColumn":8,"suggestions":"313"},{"ruleId":"282","severity":1,"message":"286","line":77,"column":6,"nodeType":"284","endLine":77,"endColumn":8,"suggestions":"314"},{"ruleId":"282","severity":1,"message":"286","line":28,"column":6,"nodeType":"284","endLine":28,"endColumn":8,"suggestions":"315"},{"ruleId":"299","severity":1,"message":"300","line":54,"column":53,"nodeType":"301","messageId":"302","endLine":54,"endColumn":55},{"ruleId":"282","severity":1,"message":"286","line":30,"column":6,"nodeType":"284","endLine":30,"endColumn":8,"suggestions":"316"},{"ruleId":"288","severity":1,"message":"289","line":3,"column":1,"nodeType":"290","endLine":12,"endColumn":3},{"ruleId":"303","severity":1,"message":"317","line":1,"column":27,"nodeType":"305","messageId":"306","endLine":1,"endColumn":36},{"ruleId":"303","severity":1,"message":"318","line":1,"column":38,"nodeType":"305","messageId":"306","endLine":1,"endColumn":48},{"ruleId":"282","severity":1,"message":"319","line":32,"column":5,"nodeType":"284","endLine":32,"endColumn":7,"suggestions":"320"},{"ruleId":"282","severity":1,"message":"286","line":38,"column":6,"nodeType":"284","endLine":38,"endColumn":8,"suggestions":"321"},{"ruleId":"282","severity":1,"message":"286","line":46,"column":6,"nodeType":"284","endLine":46,"endColumn":24,"suggestions":"322"},{"ruleId":"282","severity":1,"message":"286","line":18,"column":6,"nodeType":"284","endLine":18,"endColumn":8,"suggestions":"323"},{"ruleId":"303","severity":1,"message":"324","line":22,"column":10,"nodeType":"305","messageId":"306","endLine":22,"endColumn":33},{"ruleId":"303","severity":1,"message":"325","line":27,"column":10,"nodeType":"305","messageId":"306","endLine":27,"endColumn":29},{"ruleId":"303","severity":1,"message":"326","line":31,"column":10,"nodeType":"305","messageId":"306","endLine":31,"endColumn":24},{"ruleId":"282","severity":1,"message":"286","line":18,"column":6,"nodeType":"284","endLine":18,"endColumn":8,"suggestions":"327"},{"ruleId":"303","severity":1,"message":"328","line":22,"column":10,"nodeType":"305","messageId":"306","endLine":22,"endColumn":22},{"ruleId":"303","severity":1,"message":"329","line":27,"column":10,"nodeType":"305","messageId":"306","endLine":27,"endColumn":30},{"ruleId":"303","severity":1,"message":"330","line":28,"column":10,"nodeType":"305","messageId":"306","endLine":28,"endColumn":25},{"ruleId":"282","severity":1,"message":"286","line":18,"column":6,"nodeType":"284","endLine":18,"endColumn":8,"suggestions":"331"},{"ruleId":"303","severity":1,"message":"332","line":22,"column":10,"nodeType":"305","messageId":"306","endLine":22,"endColumn":33},{"ruleId":"303","severity":1,"message":"329","line":27,"column":10,"nodeType":"305","messageId":"306","endLine":27,"endColumn":30},{"ruleId":"303","severity":1,"message":"333","line":27,"column":32,"nodeType":"305","messageId":"306","endLine":27,"endColumn":55},{"ruleId":"303","severity":1,"message":"334","line":28,"column":10,"nodeType":"305","messageId":"306","endLine":28,"endColumn":27},{"ruleId":"303","severity":1,"message":"335","line":28,"column":29,"nodeType":"305","messageId":"306","endLine":28,"endColumn":48},{"ruleId":"282","severity":1,"message":"286","line":12,"column":6,"nodeType":"284","endLine":12,"endColumn":8,"suggestions":"336"},{"ruleId":"282","severity":1,"message":"286","line":19,"column":6,"nodeType":"284","endLine":19,"endColumn":8,"suggestions":"337"},{"ruleId":"303","severity":1,"message":"338","line":27,"column":10,"nodeType":"305","messageId":"306","endLine":27,"endColumn":28},{"ruleId":"303","severity":1,"message":"339","line":33,"column":10,"nodeType":"305","messageId":"306","endLine":33,"endColumn":33},{"ruleId":"303","severity":1,"message":"332","line":39,"column":10,"nodeType":"305","messageId":"306","endLine":39,"endColumn":33},{"ruleId":"303","severity":1,"message":"326","line":47,"column":10,"nodeType":"305","messageId":"306","endLine":47,"endColumn":24},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'klientContext'. Either include it or remove the dependency array.","ArrayExpression",["342"],"React Hook useEffect has a missing dependency: 'depoContext'. Either include it or remove the dependency array.",["343"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'klientConext'. Either include it or remove the dependency array.",["344"],["345"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["346"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["347"],["348"],["349"],["350"],["351"],["352"],["353"],["354"],["355"],["356"],"'useEffect' is defined but never used.","'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'user.email', 'user.image_profile', and 'user.name'. Either include them or remove the dependency array.",["357"],["358"],["359"],["360"],"'kategoriProduktZgjedhur' is assigned a value but never used.","'kategoriteKlienteve' is assigned a value but never used.","'klientSpecifik' is assigned a value but never used.",["361"],"'emriKlientit' is assigned a value but never used.","'kategoriteProdukteve' is assigned a value but never used.","'produktSpecifik' is assigned a value but never used.",["362"],"'kategoriKlientiZgjedhur' is assigned a value but never used.","'setKategoriteProdukteve' is assigned a value but never used.","'produkteSpecifike' is assigned a value but never used.","'setProdukteSpecfike' is assigned a value but never used.",["363"],["364"],"'catProductZgjedhur' is assigned a value but never used.","'produktSpecifikZgjedhur' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"365","fix":"371"},{"desc":"365","fix":"372"},{"desc":"367","fix":"373"},{"desc":"367","fix":"374"},{"desc":"367","fix":"375"},{"desc":"367","fix":"376"},{"desc":"367","fix":"377"},{"desc":"367","fix":"378"},{"desc":"367","fix":"379"},{"desc":"367","fix":"380"},{"desc":"367","fix":"381"},{"desc":"367","fix":"382"},{"desc":"383","fix":"384"},{"desc":"367","fix":"385"},{"desc":"386","fix":"387"},{"desc":"367","fix":"388"},{"desc":"367","fix":"389"},{"desc":"367","fix":"390"},{"desc":"367","fix":"391"},{"desc":"367","fix":"392"},"Update the dependencies array to be: [klientContext]",{"range":"393","text":"394"},"Update the dependencies array to be: [depoContext]",{"range":"395","text":"396"},"Update the dependencies array to be: [klientConext]",{"range":"397","text":"398"},{"range":"399","text":"394"},{"range":"400","text":"394"},{"range":"401","text":"396"},{"range":"402","text":"396"},{"range":"403","text":"396"},{"range":"404","text":"396"},{"range":"405","text":"396"},{"range":"406","text":"396"},{"range":"407","text":"396"},{"range":"408","text":"396"},{"range":"409","text":"396"},{"range":"410","text":"396"},"Update the dependencies array to be: [user.email, user.image_profile, user.name]",{"range":"411","text":"412"},{"range":"413","text":"396"},"Update the dependencies array to be: [depoContext, produktiZgjedhur]",{"range":"414","text":"415"},{"range":"416","text":"396"},{"range":"417","text":"396"},{"range":"418","text":"396"},{"range":"419","text":"396"},{"range":"420","text":"396"},[1192,1194],"[klientContext]",[1874,1876],"[depoContext]",[3912,3914],"[klientConext]",[1853,1855],[3744,3746],[624,626],[4849,4851],[5190,5192],[1642,1644],[2834,2836],[2864,2866],[2931,2933],[3304,3306],[1419,1421],[1374,1376],[1481,1483],"[user.email, user.image_profile, user.name]",[1570,1572],[1757,1775],"[depoContext, produktiZgjedhur]",[828,830],[862,864],[866,868],[561,563],[852,854]]