[{"C:\\Users\\User\\Desktop\\a-move\\src\\index.js":"1","C:\\Users\\User\\Desktop\\a-move\\src\\App.js":"2","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\KlientDashboard.jsx":"3","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\ProtectedRoutes.jsx":"4","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\AdminDashboard.jsx":"5","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\FormLogin.jsx":"6","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoState.jsx":"7","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientState.jsx":"8","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertState.jsx":"9","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\types.js":"10","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\types.js":"11","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\types.js":"12","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\Alert.jsx":"13","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientContext.jsx":"14","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoContext.jsx":"15","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoReducer.jsx":"16","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientReducer.jsx":"17","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertContext.jsx":"18","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertReducer.jsx":"19","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Porosite.jsx":"20","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Header.jsx":"21","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Sidebar.jsx":"22","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Shporta.jsx":"23","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Home.jsx":"24","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Produktet.jsx":"25","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Wishlist.jsx":"26","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\SingleProduct.jsx":"27","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Header.jsx":"28","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Home.jsx":"29","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Oferta.jsx":"30","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Klient.jsx":"31","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Produkte.jsx":"32","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Porosite.jsx":"33","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriProduktesh.jsx":"34","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoZonaKlientesh.jsx":"35","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriKlientesh.jsx":"36","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoAttributes.jsx":"37","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoProduktPopup.jsx":"38","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKlientPopup.jsx":"39","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseState.jsx":"40","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\types.js":"41","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollapseReducer.jsx":"42","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseContext.jsx":"43"},{"size":243,"mtime":1609324247185,"results":"44","hashOfConfig":"45"},{"size":1087,"mtime":1610730731996,"results":"46","hashOfConfig":"45"},{"size":2334,"mtime":1608290051121,"results":"47","hashOfConfig":"45"},{"size":442,"mtime":1601629298684,"results":"48","hashOfConfig":"45"},{"size":6887,"mtime":1610972055254,"results":"49","hashOfConfig":"45"},{"size":2652,"mtime":1608200532134,"results":"50","hashOfConfig":"45"},{"size":6659,"mtime":1610459046133,"results":"51","hashOfConfig":"45"},{"size":5197,"mtime":1609168604766,"results":"52","hashOfConfig":"45"},{"size":769,"mtime":1608284703555,"results":"53","hashOfConfig":"45"},{"size":579,"mtime":1610458780006,"results":"54","hashOfConfig":"45"},{"size":463,"mtime":1606471118490,"results":"55","hashOfConfig":"45"},{"size":80,"mtime":1608220546675,"results":"56","hashOfConfig":"45"},{"size":913,"mtime":1608284826165,"results":"57","hashOfConfig":"45"},{"size":111,"mtime":1605518101889,"results":"58","hashOfConfig":"45"},{"size":107,"mtime":1606839892052,"results":"59","hashOfConfig":"45"},{"size":1283,"mtime":1610458859201,"results":"60","hashOfConfig":"45"},{"size":677,"mtime":1606840695961,"results":"61","hashOfConfig":"45"},{"size":109,"mtime":1608214944739,"results":"62","hashOfConfig":"45"},{"size":256,"mtime":1608223840201,"results":"63","hashOfConfig":"45"},{"size":7259,"mtime":1608210347407,"results":"64","hashOfConfig":"45"},{"size":8516,"mtime":1608553727537,"results":"65","hashOfConfig":"45"},{"size":1783,"mtime":1606819992276,"results":"66","hashOfConfig":"45"},{"size":4677,"mtime":1608719511221,"results":"67","hashOfConfig":"45"},{"size":145,"mtime":1604931601960,"results":"68","hashOfConfig":"45"},{"size":11476,"mtime":1608718617894,"results":"69","hashOfConfig":"45"},{"size":3453,"mtime":1608210564890,"results":"70","hashOfConfig":"45"},{"size":4554,"mtime":1608719730850,"results":"71","hashOfConfig":"45"},{"size":2555,"mtime":1610732412904,"results":"72","hashOfConfig":"45"},{"size":145,"mtime":1601645508956,"results":"73","hashOfConfig":"45"},{"size":149,"mtime":1601645727267,"results":"74","hashOfConfig":"45"},{"size":28623,"mtime":1610711270538,"results":"75","hashOfConfig":"45"},{"size":27026,"mtime":1610709321269,"results":"76","hashOfConfig":"45"},{"size":24532,"mtime":1610709191160,"results":"77","hashOfConfig":"45"},{"size":13448,"mtime":1610124215129,"results":"78","hashOfConfig":"45"},{"size":13548,"mtime":1610462813155,"results":"79","hashOfConfig":"45"},{"size":14059,"mtime":1610456760293,"results":"80","hashOfConfig":"45"},{"size":20574,"mtime":1610115781862,"results":"81","hashOfConfig":"45"},{"size":15758,"mtime":1611052716136,"results":"82","hashOfConfig":"45"},{"size":6428,"mtime":1610622416116,"results":"83","hashOfConfig":"45"},{"size":753,"mtime":1610730641601,"results":"84","hashOfConfig":"45"},{"size":111,"mtime":1610730192730,"results":"85","hashOfConfig":"45"},{"size":295,"mtime":1610730504309,"results":"86","hashOfConfig":"45"},{"size":121,"mtime":1610730041373,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"12n5hux",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"90"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\User\\Desktop\\a-move\\src\\index.js",[],["193","194"],"C:\\Users\\User\\Desktop\\a-move\\src\\App.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\KlientDashboard.jsx",["195"],"import React, { useContext, useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ProtectedRoutes from \"../components/ProtectedRoutes\";\r\nimport Home from \"./components/Home\";\r\nimport Porosite from \"./components/Porosite\";\r\nimport Produktet from \"./components/Produktet\";\r\nimport SingleProduct from \"./components/SingleProduct\";\r\nimport KlientContext from \"../../context/klientContext/KlientContext\";\r\nimport Shporta from \"./components/Shporta\";\r\nimport Wishlist from \"./components/Wishlist\";\r\nimport Alert from \"../components/Alert\";\r\nexport default function KlientDashboard({ history }) {\r\n  const klientContext = useContext(KlientContext);\r\n  const { name, image_profile } = klientContext.user;\r\n\r\n  const handleLogout = () => {\r\n    localStorage.setItem(\"auth\", false);\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/\");\r\n  };\r\n  useEffect(() => {\r\n    klientContext.getUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Alert />\r\n      <div className=\"klient-dashboard\">\r\n        <Sidebar />\r\n        <div className=\"klient-dashboard-header-body\">\r\n          <Header\r\n            name={name}\r\n            userImg={image_profile}\r\n            handleLogout={() => handleLogout()}\r\n          />\r\n          <div className=\"klient-dashboard-body\">\r\n            <Switch>\r\n              <ProtectedRoutes exact path=\"/klient\" component={Home} />\r\n              <ProtectedRoutes\r\n                exact\r\n                path=\"/klient/porosite\"\r\n                component={Porosite}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/klient/produktet\"\r\n                render={(props) => <Produktet {...props} />}\r\n              />\r\n              <ProtectedRoutes\r\n                exact\r\n                path=\"/klient/shporta\"\r\n                component={Shporta}\r\n              />\r\n              <ProtectedRoutes\r\n                exact\r\n                path=\"/klient/wishlist\"\r\n                component={Wishlist}\r\n              />\r\n              <ProtectedRoutes\r\n                exact\r\n                path=\"/klient/:id\"\r\n                component={SingleProduct}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\ProtectedRoutes.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\AdminDashboard.jsx",["196"],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\FormLogin.jsx",["197"],"import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nexport default function FormLogin({ history }) {\r\n  const [email, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  useEffect(() => {\r\n    if (!error == \"\") {\r\n      setTimeout(() => setError(\"\"), 3000);\r\n    }\r\n  });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"https://192.168.88.250/demo_react_server/api/config/login.php\", {\r\n        email,\r\n        password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data.status === 1 && res.data.role === \"1\") {\r\n          localStorage.setItem(\"token\", JSON.stringify(res.data.token));\r\n          localStorage.setItem(\"auth\", true);\r\n          history.push(\"/admin\");\r\n        } else if (res.data.status === 1 && res.data.role === \"3\") {\r\n          localStorage.setItem(\"token\", JSON.stringify(res.data.token));\r\n          localStorage.setItem(\"auth\", true);\r\n          localStorage.setItem(\"id\", JSON.stringify(res.data.id));\r\n          history.push(\"/klient/produktet\");\r\n        } else {\r\n          setError(res.data.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form className=\"form-login-home\" onSubmit={onSubmit}>\r\n        <div className=\"div-img-form-login-home\">\r\n          <img\r\n            className=\"img-form-login-home\"\r\n            src=\"move-logo.png\"\r\n            width=\"100px\"\r\n            alt=\"amove logo\"\r\n          />\r\n        </div>\r\n        <p style={{ fontSize: \"17px\" }}>Sign in to continue</p>\r\n        <div className=\"div-input-form-login-home\">\r\n          <TextField\r\n            className=\"input-form-login-home\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            required\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"div-input-form-login-home\">\r\n          <TextField\r\n            className=\"input-form-login-home\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            name=\"passowrd\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button\r\n          className=\"submit-form-login-home\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n        >\r\n          Submit\r\n        </Button>\r\n        <p className=\"error\">{error}</p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\components\\Alert.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientContext.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoContext.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\depoContext\\DepoReducer.jsx",["198"],"import {\r\n  GET_ALL_CLIENTS,\r\n  GET_ORDER_DETAILS,\r\n  GET_ALL_ORDERS,\r\n  GET_USER,\r\n  GET_ALL_PRODUCTS,\r\n  EMPTY_ORDER_DETAILS,\r\n  GET_ATTR_VALUES,\r\n  GET_ATTR_NAMES,\r\n  GET_CATEGORY_PRODUCTS,\r\n  GET_CATEGORY_CLIENTS,\r\n  GET_ZONA_CLIENTS,\r\n} from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      return { ...state, user: action.payload };\r\n    case GET_ALL_CLIENTS:\r\n      return { ...state, klientet: action.payload };\r\n    case GET_ALL_PRODUCTS:\r\n      return { ...state, produktet: action.payload };\r\n    case GET_ALL_ORDERS:\r\n      return { ...state, porosite: action.payload };\r\n    case GET_ORDER_DETAILS:\r\n      return { ...state, orderDetails: action.payload };\r\n    case EMPTY_ORDER_DETAILS:\r\n      return { ...state, orderDetails: [] };\r\n    case GET_ATTR_NAMES:\r\n      return { ...state, attrNames: action.payload };\r\n    case GET_ATTR_VALUES:\r\n      return { ...state, attrValues: action.payload };\r\n    case GET_CATEGORY_PRODUCTS:\r\n      return { ...state, categoryProducts: action.payload };\r\n    case GET_CATEGORY_CLIENTS:\r\n      return { ...state, categoryClients: action.payload };\r\n    case GET_ZONA_CLIENTS:\r\n      return { ...state, zonaClients: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\context\\klientContext\\KlientReducer.jsx",["199"],"import {\r\n  GET_ALL_PRODUCTS,\r\n  GET_CART_PRODUCTS,\r\n  GET_USER,\r\n  GET_WISHLIST_PRODUCTS,\r\n  GET_ORDERS_SINGLE_USER,\r\n} from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      return { ...state, user: action.payload };\r\n    case GET_ALL_PRODUCTS:\r\n      return { ...state, products: action.payload };\r\n    case GET_CART_PRODUCTS:\r\n      return { ...state, cartProducts: action.payload };\r\n    case GET_WISHLIST_PRODUCTS:\r\n      return { ...state, wishlistProducts: action.payload };\r\n    case GET_ORDERS_SINGLE_USER:\r\n      return { ...state, ordersSingleUser: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertContext.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\alertContext\\AlertReducer.jsx",["200"],"import { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Porosite.jsx",["201","202","203","204","205","206","207"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddShoppingCartOutlinedIcon from \"@material-ui/icons/AddShoppingCartOutlined\";\r\nimport axios from \"axios\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport KlientContext from \"../../../context/klientContext/KlientContext\";\r\n\r\nexport default function Porosite() {\r\n  const klientConext = useContext(KlientContext);\r\n  const { ordersSingleUser } = klientConext;\r\n  const [orderDetails, showOrderDetails] = useState(false);\r\n  const [orderContentDetails, setOrderDetailsContent] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [itemPage, setItempage] = useState(5);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n\r\n  useEffect(() => {\r\n    klientConext.getAllOrders();\r\n  }, []);\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const renderButtonStatus = (status) => {\r\n    if (status == 1) {\r\n      return \"Aktive\";\r\n    } else if (status == 2) {\r\n      return \"Ne Pritje\";\r\n    } else if (status == 3) {\r\n      return \"Anulluar\";\r\n    } else {\r\n      return \"Perfunduar\";\r\n    }\r\n  };\r\n\r\n  const renderButtonColorsStatus = (status) => {\r\n    if (status == 1) {\r\n      return \"green\";\r\n    } else if (status == 2) {\r\n      return \"yellow\";\r\n    } else if (status == 3) {\r\n      return \"red\";\r\n    } else {\r\n      return \"purple\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n     {orderDetails && (\r\n        <div className=\"order-details-pop\">\r\n          <div\r\n            className=\"order-details-pop-opa\"\r\n            onClick={() => {\r\n              showOrderDetails(false);\r\n              setOrderDetailsContent([]);\r\n            }}\r\n          ></div>\r\n          <div className=\"order-details-pop-content\" >\r\n            {orderContentDetails.map((order) => (\r\n              <div className=\"order-details-pop-content-item\" key={order.ID}>\r\n                <div className=\"order-details-pop-content-item-image\">\r\n                  <img src={`https://192.168.88.250/demo_react_server/images/${order.image}`} alt=\"\" />\r\n                </div>\r\n                <div className=\"order-details-pop-content-item-title\">\r\n                  <h2> {order.titulli} </h2>\r\n                  <p> {order.pershkrimi} </p>\r\n                </div>\r\n                <div className=\"order-details-pop-content-item-price\">\r\n                  <h3> {order.cmimiProduktit} Leke</h3>\r\n                  <p>Sasia: {order.qty} </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"klient-porosite\">\r\n        <h2>Porosite e mia</h2>\r\n\r\n        <div className=\"klient-porosite-data-table\">\r\n          <div className=\"klient-porosite-data-table-header\">\r\n            <TextField\r\n              style={{ marginRight: \"30px\" }}\r\n              variant=\"outlined\"\r\n              placeholder=\"Kerko...\"\r\n              label=\"Kerko\"\r\n              size=\"small\"\r\n            />\r\n            <Link\r\n              to=\"/klient/shporta\"\r\n              style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n            >\r\n              <Button\r\n                startIcon={<AddShoppingCartOutlinedIcon />}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                {\" \"}\r\n                Shto Porosi{\" \"}\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>ID</TableCell>\r\n                <TableCell align=\"left\">Data</TableCell>\r\n                <TableCell align=\"left\">Status</TableCell>\r\n                <TableCell align=\"left\">Totali</TableCell>\r\n                <TableCell align=\"center\">Veprimet</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {ordersSingleUser.slice(start, end).map((order) => (\r\n                <TableRow>\r\n                  <TableCell> {order.ID} </TableCell>\r\n                  <TableCell> {order.orderDate} </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      size=\"medium\"\r\n                      style={{\r\n                        backgroundColor: renderButtonColorsStatus(order.status),\r\n                        color: \"white\",\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      {renderButtonStatus(order.status)}{\" \"}\r\n                    </Button>\r\n                  </TableCell>\r\n                  <TableCell> {order.totali} Leke </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"veprime\" style={{ cursor: \"pointer\" }}>\r\n                      <VisibilityOutlinedIcon\r\n                        onClick={() => {\r\n                          showOrderDetails(true);\r\n                          axios\r\n                            .get(\r\n                              `https://192.168.88.250/demo_react_server/api/config/get_orderDetails.php?klient=${order.klientID}&order_id=${order.ID}`\r\n                            )\r\n                            .then((res) => setOrderDetailsContent(res.data));\r\n                        }}\r\n                      />\r\n                      <EditOutlinedIcon />\r\n                      <DeleteOutlineOutlinedIcon />\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <div className=\"pagination\">\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n                User ne faqe\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"row\"\r\n                onChange={(e) => setItempage(e.target.value)}\r\n                value={itemPage}\r\n              >\r\n                <MenuItem value={5}>5</MenuItem>\r\n                <MenuItem value={8}>8</MenuItem>\r\n                <MenuItem value={10}>10</MenuItem>\r\n                <MenuItem value={15}>15</MenuItem>\r\n                <MenuItem value={20}>20</MenuItem>\r\n              </Select>\r\n            </div>\r\n            <Pagination\r\n              count={Math.ceil(ordersSingleUser.length / itemPage)}\r\n              color=\"primary\"\r\n              page={page}\r\n              size=\"large\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Header.jsx",["208"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport ArrowDropDownOutlinedIcon from \"@material-ui/icons/ArrowDropDownOutlined\";\r\nimport ArrowDropUpOutlinedIcon from \"@material-ui/icons/ArrowDropUpOutlined\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport KlientContext from \"../../../context/klientContext/KlientContext\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\n\r\nexport default function Header({ name, userImg, handleLogout }) {\r\n  const [logout, Setlogout] = useState(false);\r\n  const [showProducts, setShowProducts] = useState(false);\r\n  const [showWishlist, setShowWishlist] = useState(false);\r\n  const klientContext = useContext(KlientContext);\r\n  const cartProducts = klientContext.cartProducts;\r\n  const wishlistProducts = klientContext.wishlistProducts;\r\n\r\n  useEffect(() => {\r\n    klientContext.getCartProducts();\r\n    klientContext.getWishlistProducts();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"klient-dashboard-header\">\r\n      <div className=\"klient-dashboard-header-widgets-klient\">\r\n        \r\n        <Badge badgeContent={wishlistProducts.length} color=\"primary\">\r\n          <StarBorderOutlinedIcon\r\n            onClick={() => {\r\n              setShowWishlist(!showWishlist);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </Badge>\r\n\r\n\r\n\r\n\r\n        <Badge badgeContent={cartProducts.length} color=\"primary\">\r\n          <ShoppingCartOutlinedIcon\r\n            onClick={() => {\r\n              setShowProducts(!showProducts);\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          />\r\n        </Badge>\r\n\r\n        \r\n        \r\n        <Badge badgeContent={9} color=\"primary\">\r\n          <NotificationsIcon />\r\n        </Badge>\r\n        <Avatar\r\n          className=\"logo-user-loggedin\"\r\n          src={`https://192.168.88.250/demo_react_server/images/${userImg}`}\r\n          alt=\"LogoUser\"\r\n        />\r\n        <ClickAwayListener onClickAway={() => Setlogout(false)} >\r\n        <p onClick={() => Setlogout(!logout)} style={{cursor:'pointer'}} >{name}</p>\r\n        </ClickAwayListener>\r\n        {!logout && (\r\n                  <ClickAwayListener onClickAway={() => Setlogout(false)} >\r\n          <ArrowDropDownOutlinedIcon style={{cursor:'pointer'}}  onClick={() => Setlogout(!logout)} />\r\n          </ClickAwayListener>\r\n        )}\r\n        {logout && (\r\n                <ClickAwayListener onClickAway={() => Setlogout(false)} >\r\n          <ArrowDropUpOutlinedIcon style={{cursor:'pointer'}} onClick={() => Setlogout(!logout)} />\r\n          </ClickAwayListener>\r\n        )}\r\n\r\n      </div>\r\n      <div className={!logout ? \"hover-logout\" : \"hover-logout display-block\"}>\r\n        <p onClick={handleLogout}>\r\n          {\" \"}\r\n          <PowerSettingsNewIcon onClick={handleLogout} />\r\n          Logout\r\n        </p>\r\n      </div>\r\n\r\n      { showProducts === true && (\r\n                  <ClickAwayListener onClickAway={() => setShowProducts(false)} >\r\n        <div className=\"header-cart-products\">\r\n          {cartProducts.length > 0 ? (\r\n            <>\r\n              <div className=\"header-cart-products-length\">\r\n                <h2> {cartProducts.length} items </h2>\r\n                <p>In your cart</p>\r\n              </div>\r\n              <div className=\"header-cart-products-content\">\r\n                {cartProducts.map((item) => (\r\n                  <div className=\"header-cart-products-content-item\" key={item.id} >\r\n                    <div className=\"header-cart-products-content-item-image\">\r\n                      <img\r\n                        src={`http://localhost/demo_react_server/images/${item.image}`}\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"header-cart-products-content-item-title-remove\">\r\n                      <h4 style={{ fontSize: \"15px\" }}> {item.titulli} </h4>\r\n                      <p style={{ fontSize: \"12px\" }}>{item.pershkrimi} </p>\r\n                      <CloseOutlinedIcon\r\n                        style={{\r\n                          fontSize: \"16px\",\r\n                          color: \"red\",\r\n                          alignSelf: \"flex-end\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => {\r\n                          klientContext.removeFromCart(item);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"header-cart-products-shporta\">\r\n                <Link\r\n                  to=\"/klient/shporta\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    color: \"inherit\",\r\n                    textDecoration: \"none\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  <Button\r\n                    color=\"primary\"\r\n                    style={{ width: \"100%\" }}\r\n                    startIcon={<ShoppingCartOutlinedIcon />}\r\n                  >\r\n                    Shporta\r\n                  </Button>{\" \"}\r\n                </Link>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"header-cart-empty\">\r\n              <h4>Shporta eshte bosh</h4>\r\n            </div>\r\n          )}\r\n        </div>\r\n        </ClickAwayListener>\r\n      )}\r\n\r\n      { showWishlist === true && (\r\n            <ClickAwayListener onClickAway={() => setShowWishlist(false)}>\r\n        <div className=\"header-cart-products\">\r\n          {wishlistProducts.length > 0 ? (\r\n            <>\r\n              <div className=\"header-cart-products-length\">\r\n                <h2>  {wishlistProducts.length} items</h2>\r\n                <p>In your wishlist</p>\r\n              </div>\r\n              <div className=\"header-cart-products-content\">\r\n                {wishlistProducts.map((item) => (\r\n                  <div className=\"header-cart-products-content-item\" key={item.id} >\r\n                    <div className=\"header-cart-products-content-item-image\">\r\n                      <img\r\n                        src={`http://localhost/demo_react_server/images/${item.image}`}\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"header-cart-products-content-item-title-remove\">\r\n                      <h4 style={{ fontSize: \"15px\" }}> {item.titulli} </h4>\r\n                      <p style={{ fontSize: \"12px\" }}>{item.pershkrimi} </p>\r\n                      <CloseOutlinedIcon\r\n                        style={{\r\n                          fontSize: \"16px\",\r\n                          color: \"red\",\r\n                          alignSelf: \"flex-end\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onClick={() => {\r\n                          klientContext.removeFromWishlist(item);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"header-cart-products-shporta\">\r\n                <Link\r\n                  to=\"/klient/wishlist\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    color: \"inherit\",\r\n                    textDecoration: \"none\",\r\n                    overflow: \"hidden\",\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  <Button\r\n                    color=\"primary\"\r\n                    style={{ width: \"100%\" }}\r\n                    startIcon={<StarBorderOutlinedIcon />}\r\n                  >\r\n                    Wishlist\r\n                  </Button>{\" \"}\r\n                </Link>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"header-cart-empty\">\r\n              <h4>Wishlist eshte bosh</h4>\r\n            </div>\r\n          )}\r\n        </div>\r\n        </ClickAwayListener>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Sidebar.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Shporta.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Home.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Produktet.jsx",["209","210","211"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport BorderAllOutlinedIcon from \"@material-ui/icons/BorderAllOutlined\";\r\nimport ListOutlinedIcon from \"@material-ui/icons/ListOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\r\nimport LocalMallOutlinedIcon from \"@material-ui/icons/LocalMallOutlined\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport KlientContext from \"../../../context/klientContext/KlientContext\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nexport default function Produktet() {\r\n  const [sliderPrice, setSliderPrice] = useState([0, 1000]);\r\n  const [range, setRange] = useState(\"all\");\r\n  const [kategori, setKategori] = useState(\"\");\r\n  const [priceSort, setPriceSort] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [itemPage, setItempage] = useState(6);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const klientContext = useContext(KlientContext);\r\n  const products = klientContext.products;\r\n  const { cartProducts, wishlistProducts } = klientContext;\r\n\r\n  console.log(products)\r\n\r\n\r\n  useEffect(() => {\r\n    klientContext.getAllProducts();\r\n  }, []);\r\n\r\n  const handleChange2 = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setSliderPrice(newValue);\r\n    setRange(\"\");\r\n  };\r\n  function valuetext(sliderPrice) {\r\n    return `${sliderPrice}$`;\r\n  }\r\n  const removeFilter = () => {\r\n    setSliderPrice([0, 1000]);\r\n    setRange(\"all\");\r\n    setKategori(\"\");\r\n  };\r\n\r\n  function sortByProperty(property) {\r\n    return function (a, b) {\r\n      if (priceSort === \"high\") {\r\n        if (a[property] > b[property]) {\r\n          return 1;\r\n        }\r\n      } else if (priceSort === \"low\") {\r\n        if (a[property] < b[property]) {\r\n          return -1;\r\n        }\r\n      }\r\n      return 0;\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"filter-produkte\">\r\n        <div className=\"filter\">\r\n          <div className=\"filter-content\">\r\n            <div className=\"filter-content-multi-range\">\r\n              <h3>Multi Range</h3>\r\n              <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                  onChange={(e) => setRange(e.target.value)}\r\n                  value={range}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"all\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"All\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"10\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"<=$10\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"100\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"$10-$100\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"500\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"$500\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"600\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\">=$500\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"filter-content-price-slider\">\r\n              <h3>Price Slider</h3>\r\n              <Slider\r\n                value={sliderPrice}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                style={{ width: \"90%\", alignSelf: \"center\" }}\r\n                getAriaValueText={valuetext}\r\n                max={1000}\r\n              />\r\n            </div>\r\n            <div className=\"filter-content-category\">\r\n              <h3>Category</h3>\r\n              <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                  onChange={(e) => setKategori(e.target.value)}\r\n                  value={kategori}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"kategoria1\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Kategoria 1\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"kategoria2\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Kategoria 2\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"kategoria3\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Kategoria 3\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"kategoria4\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Kategoria 4\"\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"kategoria5\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Kategoria 5\"\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </div>\r\n            <Button\r\n              variant=\"contained\"\r\n              style={{ marginTop: \"10px\" }}\r\n              color=\"primary\"\r\n              onClick={removeFilter}\r\n            >\r\n              Remove Filters\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"produkte\">\r\n          <div className=\"produkte-featured\">\r\n            <FormControl\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"50%\", backgroundColor: \"white\" }}\r\n            >\r\n              <InputLabel>Featured</InputLabel>\r\n              <Select\r\n                onChange={(e) => setPriceSort(e.target.value)}\r\n                value={priceSort}\r\n              >\r\n                <MenuItem value=\"low\">Lowest Price</MenuItem>\r\n                <MenuItem value=\"high\">Highest Price</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <div className=\"katror\">\r\n              <BorderAllOutlinedIcon style={{ fontSize: \"25px\" }} />\r\n            </div>\r\n            <div className=\"drejtkendesh\">\r\n              <ListOutlinedIcon style={{ fontSize: \"30px\" }} />\r\n            </div>\r\n          </div>\r\n          <div className=\"produkte-search\">\r\n            <TextField\r\n              label=\"Kerko\"\r\n              style={{ width: \"100%\", backgroundColor: \"white\" }}\r\n              placeholder=\"Kerko...\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <SearchOutlinedIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"produktet-list\">\r\n            {products.slice(start,end).map((product) => (\r\n              <div className=\"produktet-list-item\" key={product.id}>\r\n                <div className=\"produkte-header-item-image\">\r\n                  <Link to={`/klient/${product.id}`}>\r\n                    <img\r\n                      width=\"100\"\r\n                      src={`http://localhost/demo_react_server/images/${product.image}`}\r\n                      alt=\"\"\r\n                    />\r\n                  </Link>\r\n                </div>\r\n\r\n                <div className=\"produktet-list-item-price\">\r\n                  <p> {product.cmimi} Leke </p>\r\n                </div>\r\n                <div className=\"produkte-header-item-title-description\">\r\n                  <h4> {product.titulli} </h4>\r\n                  <p> {product.pershkrimi} </p>\r\n                </div>\r\n\r\n                <div className=\"produkte-header-item-wish-cart\">\r\n                  {cartProducts.some(\r\n                    (item) => item.product_id === product.id\r\n                  ) === true ? (\r\n                    <Button\r\n                      startIcon={<LocalMallOutlinedIcon />}\r\n                      color=\"primary\"\r\n                      style={{ width: \"50%\" }}\r\n                    >\r\n                      <Link to=\"/klient/shporta\" style={{color:'inherit',textDecoration:'none'}}>\r\n                      View in Cart\r\n                      </Link>\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      startIcon={<LocalMallOutlinedIcon />}\r\n                      disabled={product.sasia == 0 ? true : false}\r\n                      color=\"primary\"\r\n                      style={{ width: \"50%\" }}\r\n                      onClick={() => {\r\n                        klientContext.addToCart(product);\r\n                      }}\r\n                    >\r\n                      Add to Cart\r\n                    </Button>\r\n                  )}\r\n\r\n                  {wishlistProducts.some(\r\n                    (item) => item.product_id === product.id\r\n                  ) ? (\r\n                    <Button\r\n                      startIcon={<FavoriteIcon />}\r\n                      color=\"secondary\"\r\n                      style={{ width: \"50%\" }}\r\n                      onClick={() => klientContext.removeFromWishlist(product)}\r\n                    >\r\n                      Wish List\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      startIcon={<FavoriteBorderOutlinedIcon />}\r\n                      color=\"secondary\"\r\n                      style={{ width: \"50%\" }}\r\n                      onClick={() => klientContext.addToWishlist(product)}\r\n                    >\r\n                      Wish List\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))} \r\n          </div>\r\n          <div className=\"produkte-pagination\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n                Produkte ne faqe\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"row\"\r\n                onChange={(e) => setItempage(e.target.value)}\r\n                value={itemPage}\r\n              >\r\n                <MenuItem value={6}>6</MenuItem>\r\n                <MenuItem value={12}>12</MenuItem>\r\n                <MenuItem value={18}>18</MenuItem>\r\n                <MenuItem value={24}>24</MenuItem>\r\n                <MenuItem value={30}>30</MenuItem>\r\n              </Select>\r\n            </div>\r\n            <Pagination\r\n              count={Math.ceil(products.length / itemPage)}\r\n              color=\"primary\"\r\n              page={page}\r\n              size=\"large\"\r\n              onChange={handleChange2}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\Wishlist.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\klientDashboard\\components\\SingleProduct.jsx",["212"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowBackOutlinedIcon from \"@material-ui/icons/ArrowBackOutlined\";\r\nimport KlientContext from \"../../../context/klientContext/KlientContext\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\nexport default function SingleProduct({ match }) {\r\n  const [products, setProducts] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost/demo_react_server/api/config/get_allProducts.php\")\r\n      .then((res) => setProducts(res.data));\r\n  }, []);\r\n\r\n  const produkt = products.filter((produkt) => produkt.id == match.params.id);\r\n  const klientContext = useContext(KlientContext);\r\n  const { cartProducts, wishlistProducts } = klientContext;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"shko-te-produktet\">\r\n        <Link\r\n          style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n          to=\"/klient/produktet\"\r\n        >\r\n          <Button\r\n            startIcon={<ArrowBackOutlinedIcon />}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            style={{ backgroundColor: \"white\" }}\r\n          >\r\n            Shko te produktet\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n      {produkt.map((single) => (\r\n        <div key={single.id} className=\"single-product\">\r\n          <div className=\"single-product-left\">\r\n            <img\r\n              src={`https://192.168.88.250/demo_react_server/images/${single.image}`}\r\n              alt={single.titulli}\r\n            />\r\n          </div>\r\n          <div className=\"single-product-right\">\r\n            <div className=\"single-product-right-title-price\">\r\n              <p className=\"single-product-right-title\">{single.titulli}</p>\r\n              <p className=\"single-product-right-price\">{single.cmimi} Leke</p>\r\n            </div>\r\n            <div className=\"single-product-right-description-sku\">\r\n              <p className=\"single-product-right-description\">\r\n                {single.pershkrimi}\r\n              </p>\r\n              <p className=\"single-product-right-sku\">SKU: {single.sku} </p>\r\n            </div>\r\n            <div className=\"single-product-right-stock-addcart\">\r\n              <p className=\"single-product-right-stock\">\r\n                Available - {single.sasia > 0 ? \"Ka stock\" : \"Nuk ka stock\"}{\" \"}\r\n              </p>\r\n              <div className=\"buttons-wish-cart\">\r\n                {cartProducts.some((item) => item.product_id === single.id) ===\r\n                true ? (\r\n                  <Button\r\n                  startIcon={<ShoppingCartOutlinedIcon />}\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                >\r\n                  <Link to=\"/klient/shporta\" style={{color:'inherit',textDecoration:'none'}}>\r\n                  View in Cart\r\n                  </Link>\r\n                </Button>\r\n                ) : (\r\n                  <Button\r\n                    size=\"large\"\r\n                    startIcon={<ShoppingCartOutlinedIcon />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      klientContext.addToCart(single);\r\n                    }}\r\n                  >\r\n                    Add to Cart\r\n                  </Button>\r\n                )}\r\n\r\n                {wishlistProducts.some(\r\n                  (item) => item.product_id === single.id\r\n                ) === true ? (\r\n                  <Button\r\n                    size=\"large\"\r\n                    startIcon={<StarIcon />}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={() => klientContext.removeFromWishlist(single)}\r\n                  >\r\n                    Add to Wishlist\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    size=\"large\"\r\n                    startIcon={<StarBorderOutlinedIcon />}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={() => klientContext.addToWishlist(single)}\r\n                  >\r\n                    Add to Wishlist\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Header.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Home.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Oferta.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Klient.jsx",["213"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport CategoryOutlinedIcon from \"@material-ui/icons/CategoryOutlined\";\r\nimport ExploreOutlinedIcon from \"@material-ui/icons/ExploreOutlined\";\r\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\r\nimport GroupAddOutlinedIcon from \"@material-ui/icons/GroupAddOutlined\";\r\nimport ShtoKlientPopup from \"./ShtoKlientPopup\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport { CloseOutlined } from \"@material-ui/icons\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport axios from \"axios\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nexport default function Klient() {\r\n  const [deletedID, setDeletedID] = useState(\"\");\r\n  const [deletePop, setDeletePop] = useState(false);\r\n  const [editID, setEditID] = useState(\"\");\r\n  const [editEmri, setEditEmri] = useState(\"\");\r\n  const [editEmail, setEditEmail] = useState(\"\");\r\n  const [editPassword, setEditPassword] = useState(\"\");\r\n  const [editStatus, setEditStatus] = useState(\"\");\r\n  const [editZona, setEditZona] = useState(\"\");\r\n  const [editKategoria, setEditKategoria] = useState(\"\");\r\n  const [editFile, setEditFile] = useState(\"\");\r\n  const [editImage, setEditImage] = useState(\"\");\r\n  const [deletedImage, setDeletedImage] = useState(false);\r\n  const [userEditPop, setUserEditPop] = useState(false);\r\n  const [userPopup, shotUserPopup] = useState(false);\r\n  const alertContext = useContext(AlertContext);\r\n  const [kategori, Setkategori] = useState(\"\");\r\n  const [zona, Setzona] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [itemPage, setItempage] = useState(5);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const depoContext = useContext(DepoContext);\r\n  const { klientet } = depoContext;\r\n  const [userDetails, setUserDetails] = useState({});\r\n  const [userDetailsPop, showUserDetailsPop] = useState(false);\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"id\",\r\n    direction: \"descending\",\r\n  });\r\n  const [searchFilter, setSearchFilter] = useState(\"\");\r\n\r\n  const klientetFiltered = klientet.filter(\r\n    (order) =>\r\n      order.id.toString().toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.name.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.email.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.zona.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.kategoria.toLowerCase().includes(searchFilter.toLowerCase())\r\n  );\r\n\r\n  const onEditUser = (e) => {\r\n    e.preventDefault();\r\n\r\n    let fd = new FormData();\r\n    fd.append(\"name\", editEmri);\r\n    fd.append(\"email\", editEmail);\r\n    fd.append(\"password\", editPassword);\r\n    fd.append(\"zona\", editZona);\r\n    fd.append(\"kategoria\", editKategoria);\r\n    fd.append(\"image\", editImage);\r\n    fd.append(\"status\", editStatus);\r\n\r\n    axios\r\n      .post(\r\n        `https://192.168.88.250/demo_react_server/api/config/edit_user.php?user_id=${editID}`,\r\n        fd\r\n      )\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          alertContext.setAlert(`${res.data.message}`, \"error\");\r\n        } else if (res.data.status === 1) {\r\n          alertContext.setAlert(`${res.data.message}`, \"success\");\r\n          depoContext.getAllClients();\r\n          setUserEditPop(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    depoContext.getAllClients();\r\n  }, []);\r\n\r\n  if (propertyName !== null) {\r\n    klientetFiltered.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const renderButtonStatus = (status) => {\r\n    if (status === 1) {\r\n      return \"Aktive\";\r\n    } else if (status === 0) {\r\n      return \"Joaktive\";\r\n    }\r\n  };\r\n\r\n  const renderButtonColorsStatus = (status) => {\r\n    if (status === 1) {\r\n      return \"#73C850\";\r\n    } else if (status === 0) {\r\n      return \"#FF0000\";\r\n    }\r\n  };\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      {deletePop && (\r\n        <div className=\"user-delete-pop\">\r\n          <div\r\n            className=\"user-delete-pop-opa\"\r\n            onClick={() => {\r\n              alertContext.setAlert(\"Klienti nuk u fshi\", \"info\");\r\n              setDeletePop(false);\r\n            }}\r\n          ></div>\r\n          <div className=\"user-delete-pop-container\">\r\n            <h3>Jeni te sigurt qe doni te fshini klientin?</h3>\r\n            <div className=\"user-delete-pop-buttons\">\r\n              <ButtonGroup size=\"large\" disableElevation variant=\"contained\">\r\n                <Button\r\n                  style={{\r\n                    borderTopLeftRadius: \"30px\",\r\n                    borderBottomLeftRadius: \"30px\",\r\n                    backgroundColor: \"white\",\r\n                    color: \"black\",\r\n                  }}\r\n                  onClick={() => {\r\n                    depoContext.deleteUser(deletedID);\r\n                    setDeletePop(false);\r\n                    alertContext.setAlert(\"Klienti u fshi\", \"warning\");\r\n                  }}\r\n                >\r\n                  Po\r\n                </Button>\r\n                <Button\r\n                  style={{\r\n                    borderTopRightRadius: \"30px\",\r\n                    borderBottomRightRadius: \"30px\",\r\n                    backgroundColor: \"#FF0000\",\r\n                    color: \"white\",\r\n                  }}\r\n                  onClick={() => {\r\n                    setDeletePop(false);\r\n                    alertContext.setAlert(\"Klienti nuk u fshi\", \"info\");\r\n                  }}\r\n                >\r\n                  Jo\r\n                </Button>\r\n              </ButtonGroup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {userEditPop && (\r\n        <div className=\"user-edit-pop\">\r\n          <div\r\n            className=\"user-edit-pop-opa\"\r\n            onClick={() => {\r\n              setUserEditPop(false);\r\n              alertContext.setAlert(\"Klienti nuk u ndryshua\", \"info\");\r\n              setDeletedImage(false);\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"user-edit-pop-container\">\r\n            <form\r\n              className=\"user-edit-pop-container-form\"\r\n              onSubmit={onEditUser}\r\n            >\r\n              <div className=\"user-edit-pop-container-form-left-right\">\r\n                <div className=\"user-edit-pop-container-form-left\">\r\n                  <TextField\r\n                    label=\"Emri\"\r\n                    style={{ width: \"80%\" }}\r\n                    variant=\"outlined\"\r\n                    value={editEmri}\r\n                    type=\"text\"\r\n                    onChange={(e) => setEditEmri(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    label=\"Email\"\r\n                    style={{ width: \"80%\" }}\r\n                    variant=\"outlined\"\r\n                    value={editEmail}\r\n                    type=\"email\"\r\n                    onChange={(e) => setEditEmail(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    type=\"password\"\r\n                    label=\"Password\"\r\n                    style={{ width: \"80%\" }}\r\n                    variant=\"outlined\"\r\n                    value={editPassword}\r\n                    onChange={(e) => setEditPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"user-edit-pop-container-form-right\">\r\n                  <FormControl variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"njesia-label\">Status</InputLabel>\r\n                    <Select\r\n                      value={editStatus}\r\n                      onChange={(e) => setEditStatus(e.target.value)}\r\n                      style={{ width: \"227px\" }}\r\n                      label=\"Status\"\r\n                      inputProps={{\r\n                        name: \"status\",\r\n                        id: \"njesia-label\",\r\n                      }}\r\n                    >\r\n                      <MenuItem value={1}>Aktive</MenuItem>\r\n                      <MenuItem value={0}>Joaktive</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"njesia-label\">Kategoria</InputLabel>\r\n                    <Select\r\n                      value={editKategoria}\r\n                      onChange={(e) => setEditKategoria(e.target.value)}\r\n                      style={{ width: \"227px\" }}\r\n                      label=\"Status\"\r\n                      inputProps={{\r\n                        name: \"status\",\r\n                        id: \"njesia-label\",\r\n                      }}\r\n                    >\r\n                      <MenuItem value=\"None\"></MenuItem>\r\n                      <MenuItem value={\"Kategoria 1\"}>Kategoria 1</MenuItem>\r\n                      <MenuItem value={\"Ktegoria 2\"}>Kategoria 2</MenuItem>\r\n                      <MenuItem value={\"Kategoria 3\"}>Kategoria 3</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <FormControl variant=\"outlined\">\r\n                    <InputLabel htmlFor=\"njesia-label\">Zona</InputLabel>\r\n                    <Select\r\n                      value={editZona}\r\n                      onChange={(e) => setEditZona(e.target.value)}\r\n                      style={{ width: \"227px\" }}\r\n                      label=\"Status\"\r\n                      inputProps={{\r\n                        name: \"status\",\r\n                        id: \"njesia-label\",\r\n                      }}\r\n                    >\r\n                      <MenuItem value=\"None\"></MenuItem>\r\n                      <MenuItem value={\"Zona 1\"}>Zona 1</MenuItem>\r\n                      <MenuItem value={\"Zona 2\"}>Zona 2</MenuItem>\r\n                      <MenuItem value={\"Zona 3\"}>Zona 3</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n              </div>\r\n              <div\r\n                className={\r\n                  editImage === \"\" ? \"image-2\" : \"image-2 outlinestyle-none\"\r\n                }\r\n              >\r\n                {editImage === \"\" ? (\r\n                  <>\r\n                    <InputLabel\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      htmlFor=\"image\"\r\n                    >\r\n                      <AddIcon style={{ fontSize: \"70px\" }} /> upload{\" \"}\r\n                    </InputLabel>\r\n                    <Input\r\n                      onChange={(e) => {\r\n                        setEditImage(e.target.files[0]);\r\n                        setEditFile(URL.createObjectURL(e.target.files[0]));\r\n                      }}\r\n                      id=\"image\"\r\n                      type=\"file\"\r\n                      style={{ display: \"none\" }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {deletedImage === true ? (\r\n                      <>\r\n                        <DeleteOutlineOutlinedIcon\r\n                          onClick={() => {\r\n                            setEditImage(\"\");\r\n                            setEditFile(\"\");\r\n                            setDeletedImage(true);\r\n                          }}\r\n                          className=\"delete-icon-image\"\r\n                        />\r\n                        <img src={editFile} alt=\"\" />\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <DeleteOutlineOutlinedIcon\r\n                          onClick={() => {\r\n                            setEditImage(\"\");\r\n                            setEditFile(\"\");\r\n                            setDeletedImage(true);\r\n                          }}\r\n                          className=\"delete-icon-image\"\r\n                        />\r\n                        <img\r\n                          src={`https://192.168.88.250/demo_react_server/images/${editFile}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div className=\"edit-user-pop-buttons\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  onClick={() => setDeletedImage(false)}\r\n                >\r\n                  {\" \"}\r\n                  Edit{\" \"}\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"contained\"\r\n                  onClick={() => {\r\n                    setUserEditPop(false);\r\n                    alertContext.setAlert(\"Klienti nuk u ndryshua\", \"info\");\r\n                  }}\r\n                >\r\n                  Anullo\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {userDetailsPop && (\r\n        <div className=\"user-details-pop\">\r\n          <div\r\n            className=\"user-details-pop-opa\"\r\n            onClick={() => showUserDetailsPop(false)}\r\n          ></div>\r\n          <div className=\"user-details-pop-container\">\r\n            <CloseOutlined\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                marginTop: \"20px\",\r\n                fontSize: \"30px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => showUserDetailsPop(false)}\r\n            />\r\n            <Avatar\r\n              src={`https://192.168.88.250/demo_react_server/images/${userDetails.image_profile}`}\r\n              style={{ height: \"200px\", width: \"200px\" }}\r\n            />\r\n            <div className=\"user-pop-details-content\">\r\n              <div className=\"user-pop-details-content-detail\">\r\n                <h4>Emri: </h4>\r\n                <i>\r\n                  <p>{userDetails.name}</p>\r\n                </i>\r\n              </div>\r\n\r\n              <div className=\"user-pop-details-content-detail\">\r\n                <h4>Email: </h4>\r\n                <i>\r\n                  {\" \"}\r\n                  <p>{userDetails.email}</p>\r\n                </i>\r\n              </div>\r\n              <div className=\"user-pop-details-content-detail\">\r\n                <h4>Zona: </h4>\r\n                <i>\r\n                  <p>{userDetails.zona}</p>\r\n                </i>\r\n              </div>\r\n              <div className=\"user-pop-details-content-detail\">\r\n                <h4>Kategoria: </h4>\r\n                <i>\r\n                  <p>{userDetails.kategoria}</p>\r\n                </i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {userPopup && <ShtoKlientPopup closePopup={() => shotUserPopup(false)} />}\r\n      <div className=\"klient\">\r\n        <div className=\"admin-klient\">\r\n          <div className=\"admin-klient-cat\">\r\n            <div className=\"admin-klient-cat-content\">\r\n              <p className=\"all-client\">Te gjithe klientet</p>\r\n              <h2 className=\"all-client-num\">{klientet.length}</h2>\r\n              {/* <span style={{ display: \"flex\" }} className=\"span-client-offer\">\r\n                20% <p>(30 dite)</p>\r\n              </span> */}\r\n            </div>\r\n            <div className=\"admin-klient-cat-icon\">\r\n              <PeopleAltOutlinedIcon style={{ fontSize: \"50px\" }} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-klient-cat\">\r\n            <div className=\"admin-klient-cat-content\">\r\n              <InputLabel id=\"kategori\" style={{ color: \"white\" }}>\r\n                Kategoria\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"kategori\"\r\n                value={kategori === \"\" ? \"none\" : kategori}\r\n                onChange={(e) => Setkategori(e.target.value)}\r\n                style={{ color: \"white\" }}\r\n              >\r\n                <MenuItem value=\"none\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={\"Kategoria 1\"}>Kategoria 1</MenuItem>\r\n                <MenuItem value={\"Kategoria 2\"}>Kategoria 2</MenuItem>\r\n                <MenuItem value={\"Kategoria 3\"}>Kategoria 3</MenuItem>\r\n              </Select>\r\n\r\n              <span className=\"span-client-offer\">\r\n                Asnje kategori e zgjedhur\r\n              </span>\r\n            </div>\r\n            <div className=\"admin-klient-cat-icon\">\r\n              <CategoryOutlinedIcon style={{ fontSize: \"50px\" }} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-klient-cat\">\r\n            <div className=\"admin-klient-cat-content\">\r\n              <InputLabel id=\"zona\" style={{ color: \"white\" }}>\r\n                Zona\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"zona\"\r\n                value={zona === \"\" ? \"none\" : zona}\r\n                onChange={(e) => Setzona(e.target.value)}\r\n                style={{ color: \"white\" }}\r\n              >\r\n                <MenuItem value=\"none\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={\"Zona 1\"}>Zona 1</MenuItem>\r\n                <MenuItem value={\"Zona 2\"}>Zona 2</MenuItem>\r\n                <MenuItem value={\"Zona 3\"}>Zona 3</MenuItem>\r\n              </Select>\r\n              <span className=\"span-client-offer\">Asnje zone e zgjedhur</span>\r\n            </div>\r\n            <div className=\"admin-klient-cat-icon\">\r\n              <ExploreOutlinedIcon style={{ fontSize: \"50px\" }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"data-table-klient\">\r\n          <div className=\"table-first-div\">\r\n            <h2>Klientet</h2>\r\n\r\n            <div className=\"table-search-add\">\r\n              <TextField\r\n                size=\"small\"\r\n                placeholder=\"Kerko\"\r\n                type=\"search\"\r\n                label=\"Kerko\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => setSearchFilter(e.target.value)}\r\n              ></TextField>\r\n              <Button\r\n                style={{\r\n                  backgroundColor: \"#2A7EBF\",\r\n                  borderRadius: \"8px\",\r\n                  padding: \"10px 20px\",\r\n                }}\r\n                variant=\"contained\"\r\n                onClick={() => shotUserPopup(true)}\r\n                color=\"primary\"\r\n              >\r\n                <GroupAddOutlinedIcon style={{ marginRight: \"10px\" }} />\r\n                <p style={{ color: \"white\", textDecoration: \"none\" }}>\r\n                  Shto klient\r\n                </p>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"data-table\">\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell onClick={() => requestSort(\"id\")}>\r\n                    ID\r\n                    {propertyName.key === \"id\" &&\r\n                      propertyName.direction === \"ascending\" && (\r\n                        <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                      )}\r\n                    {propertyName.key === \"id\" &&\r\n                      propertyName.direction === \"descending\" && (\r\n                        <ArrowDownwardOutlinedIcon\r\n                          style={{ fontSize: \"17px\" }}\r\n                        />\r\n                      )}\r\n                  </TableCell>\r\n                  <TableCell onClick={() => requestSort(\"name\")} align=\"left\">\r\n                    Emri\r\n                    {propertyName.key === \"name\" &&\r\n                      propertyName.direction === \"ascending\" && (\r\n                        <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                      )}\r\n                    {propertyName.key === \"name\" &&\r\n                      propertyName.direction === \"descending\" && (\r\n                        <ArrowDownwardOutlinedIcon\r\n                          style={{ fontSize: \"17px\" }}\r\n                        />\r\n                      )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => requestSort(\"email\")}\r\n                    width=\"300px\"\r\n                    align=\"left\"\r\n                  >\r\n                    Email\r\n                    {propertyName.key === \"email\" &&\r\n                      propertyName.direction === \"ascending\" && (\r\n                        <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                      )}\r\n                    {propertyName.key === \"email\" &&\r\n                      propertyName.direction === \"descending\" && (\r\n                        <ArrowDownwardOutlinedIcon\r\n                          style={{ fontSize: \"17px\" }}\r\n                        />\r\n                      )}\r\n                  </TableCell>\r\n                  <TableCell onClick={() => requestSort(\"zona\")} align=\"left\">\r\n                    Zona\r\n                    {propertyName.key === \"zona\" &&\r\n                      propertyName.direction === \"ascending\" && (\r\n                        <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                      )}\r\n                    {propertyName.key === \"zona\" &&\r\n                      propertyName.direction === \"descending\" && (\r\n                        <ArrowDownwardOutlinedIcon\r\n                          style={{ fontSize: \"17px\" }}\r\n                        />\r\n                      )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => requestSort(\"kategoria\")}\r\n                    align=\"left\"\r\n                  >\r\n                    Kategoria\r\n                    {propertyName.key === \"kategoria\" &&\r\n                      propertyName.direction === \"ascending\" && (\r\n                        <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                      )}\r\n                    {propertyName.key === \"kategoria\" &&\r\n                      propertyName.direction === \"descending\" && (\r\n                        <ArrowDownwardOutlinedIcon\r\n                          style={{ fontSize: \"17px\" }}\r\n                        />\r\n                      )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"left\"\r\n                    onClick={() => requestSort(\"status_user\")}\r\n                  >\r\n                    Status\r\n                    {propertyName.key === \"status_user\" &&\r\n                      propertyName.direction === \"ascending\" && (\r\n                        <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                      )}\r\n                    {propertyName.key === \"status_user\" &&\r\n                      propertyName.direction === \"descending\" && (\r\n                        <ArrowDownwardOutlinedIcon\r\n                          style={{ fontSize: \"17px\" }}\r\n                        />\r\n                      )}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">Veprimet</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {klientetFiltered.slice(start, end).map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell style={{ color: \"#287DBF\" }}>\r\n                      #{row.id}\r\n                    </TableCell>\r\n                    <TableCell>{row.name}</TableCell>\r\n                    <TableCell>{row.email}</TableCell>\r\n                    <TableCell>{row.zona}</TableCell>\r\n                    <TableCell>{row.kategoria}</TableCell>\r\n                    <TableCell>\r\n                      <p className=\"status-text\">\r\n                        {\" \"}\r\n                        <span\r\n                          className=\"status-pulse\"\r\n                          style={{\r\n                            backgroundColor: renderButtonColorsStatus(\r\n                              row.status_user\r\n                            ),\r\n                          }}\r\n                        ></span>{\" \"}\r\n                        {renderButtonStatus(row.status_user)}{\" \"}\r\n                      </p>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <div className=\"veprime\" style={{ cursor: \"pointer\" }}>\r\n                        <VisibilityOutlinedIcon\r\n                          onClick={() => {\r\n                            setUserDetails(row);\r\n                            showUserDetailsPop(true);\r\n                          }}\r\n                        />\r\n                        <EditOutlinedIcon\r\n                          onClick={() => {\r\n                            setUserEditPop(true);\r\n                            setEditID(row.id);\r\n                            setEditEmri(row.name);\r\n                            setEditEmail(row.email);\r\n                            setEditPassword(row.password);\r\n                            setEditStatus(row.status_user);\r\n                            setEditZona(row.zona);\r\n                            setEditKategoria(row.kategoria);\r\n                            setEditFile(row.image_profile);\r\n                            setEditImage(row.image_profile);\r\n                          }}\r\n                        />\r\n                        <DeleteOutlineOutlinedIcon\r\n                          style={{\r\n                            display: row.status_user === 0 ? \"none\" : \"\",\r\n                          }}\r\n                          onClick={() => {\r\n                            setDeletedID(row.id);\r\n                            setDeletePop(true);\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n\r\n            <div className=\"pagination\">\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n                  User ne faqe\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"row\"\r\n                  onChange={(e) => setItempage(e.target.value)}\r\n                  value={itemPage}\r\n                >\r\n                  <MenuItem value={5}>5</MenuItem>\r\n                  <MenuItem value={8}>8</MenuItem>\r\n                  <MenuItem value={10}>10</MenuItem>\r\n                  <MenuItem value={15}>15</MenuItem>\r\n                  <MenuItem value={20}>20</MenuItem>\r\n                </Select>\r\n              </div>\r\n              <Pagination\r\n                count={Math.ceil(klientetFiltered.length / itemPage)}\r\n                color=\"primary\"\r\n                page={page}\r\n                size=\"large\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Produkte.jsx",["214","215","216","217"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport LocalMallOutlinedIcon from \"@material-ui/icons/LocalMallOutlined\";\r\nimport AddOutlinedIcon from \"@material-ui/icons/AddOutlined\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport ShtoProduktPopup from \"./ShtoProduktPopup\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport axios from \"axios\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nexport default function Produkte() {\r\n  const [produktDetails, setProduktDetails] = useState({});\r\n  const [detailsPop, setDetailsPop] = useState(false);\r\n  const [editID, setEditID] = useState(1);\r\n  const [editTitulli, setEditTitulli] = useState(\"\");\r\n  const [editSku, setEditSku] = useState(\"\");\r\n  const [editPershkrimi, setEditPershkrimi] = useState(\"\");\r\n  const [editKategoria, setEditKategoria] = useState(\"\");\r\n  const [editCmimi, setEditCmimi] = useState(\"\");\r\n  const [editSasia, setEditSasia] = useState(\"\");\r\n  const [editStatus, setEditStatus] = useState(\"\");\r\n  const [editNjesia, setEditNjesia] = useState(\"\");\r\n  const [fileEdit, setEditFile] = useState(\"\");\r\n  const [imageEdit, setEditImage] = useState(\"\");\r\n  const [deletedImage, setDeletedImage] = useState(false);\r\n  const [kategoria, setKategoria] = useState(\"\");\r\n  const [produktDetailsPop, showPorduktDetailsPop] = useState(false);\r\n  const [produktPopup, showProduktPopup] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [idDelete, setDeleteId] = useState(\"\");\r\n  const [itemPage, setItempage] = useState(5);\r\n  const [searchFilter, setSearchFilter] = useState(\"\");\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const depoContext = useContext(DepoContext);\r\n  const { produktet } = depoContext;\r\n  const alertContext = useContext(AlertContext);\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"id\",\r\n    direction: \"descending\",\r\n  });\r\n  const [deletePop, showDeletePop] = useState(false);\r\n\r\n  const renderButtonStatus = (status) => {\r\n    if (status === 1) {\r\n      return \"Aktive\";\r\n    } else if (status === 0) {\r\n      return \"Joaktive\";\r\n    }\r\n  };\r\n\r\n  const renderButtonColorsStatus = (status) => {\r\n    if (status === 1) {\r\n      return \"#3ccc38\";\r\n    } else if (status === 0) {\r\n      return \"#fd3259\";\r\n    }\r\n  };\r\n\r\n  const onEditProducts = (e) => {\r\n    e.preventDefault();\r\n\r\n    let fd = new FormData();\r\n    fd.append(\"titulli\", editTitulli);\r\n    fd.append(\"sku\", editSku);\r\n    fd.append(\"pershkrimi\", editPershkrimi);\r\n    fd.append(\"kategoria\", editKategoria);\r\n    fd.append(\"cmimi\", editCmimi);\r\n    fd.append(\"sasia\", editSasia);\r\n    fd.append(\"njesia\", editNjesia);\r\n    fd.append(\"image\", imageEdit);\r\n    fd.append(\"status\", editStatus);\r\n\r\n    axios\r\n      .post(\r\n        `https://192.168.88.250/demo_react_server/api/config/edit_product.php?produkt_id=${editID}`,\r\n        fd\r\n      )\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          alertContext.setAlert(`${res.data.message}`, \"error\");\r\n        } else if (res.data.status === 1) {\r\n          alertContext.setAlert(`${res.data.message}`, \"success\");\r\n          showPorduktDetailsPop(false);\r\n          setDeletedImage(false);\r\n          depoContext.getAllProducts();\r\n        }\r\n      });\r\n  };\r\n\r\n  const filteredProducts = produktet.filter(\r\n    (order) =>\r\n      order.id.toString().toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.titulli.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.kategoria.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.sasia\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(searchFilter.toLowerCase()) ||\r\n      order.cmimi.toString().toLowerCase().includes(searchFilter.toLowerCase())\r\n  );\r\n\r\n  useEffect(() => {\r\n    depoContext.getAllProducts();\r\n  }, []);\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const stockColor = (item) => {\r\n    if (item == 0) {\r\n      return \"#fd3259\";\r\n    } else if (item >= 1 && item <= 20) {\r\n      return \"#FECD2F\";\r\n    } else {\r\n      return \"#3ccc38\";\r\n    }\r\n  };\r\n\r\n  if (propertyName !== null) {\r\n    filteredProducts.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  return (\r\n    <>\r\n      {detailsPop && (\r\n        <div className=\"produkt-details-pop\">\r\n          <div\r\n            className=\"produkt-details-pop-opa\"\r\n            onClick={() => {\r\n              setDetailsPop(false);\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"produkt-details-pop-container\">\r\n            <Avatar\r\n              style={{ width: \"80px\", height: \"80px\" }}\r\n              src={`https://192.168.88.250/demo_react_server/images/${produktDetails.image}`}\r\n              alt={produktDetails.titulli}\r\n            />\r\n            <h2>Titulli :</h2>\r\n            {produktDetails.titulli}\r\n            <h2>Pershkrimi</h2>\r\n            {produktDetails.pershkrimi}\r\n            <h2>Sku:</h2>\r\n            {produktDetails.sku}\r\n            <h2>Kategoria:</h2>\r\n            {produktDetails.kategoria}\r\n            <h2>Cmimi:</h2>\r\n            {produktDetails.cmimi}\r\n            <h2>Stock :</h2>\r\n            {produktDetails.sasia}\r\n            <h2>Status</h2>\r\n            {produktDetails.status === 1 ? \"Aktive\" : \"Joaktive\"}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {produktDetailsPop && (\r\n        <div className=\"produkt-edit-pop\">\r\n          <div\r\n            className=\"produkt-edit-pop-opa\"\r\n            onClick={() => {\r\n              showPorduktDetailsPop(false);\r\n              setDeletedImage(false);\r\n              alertContext.setAlert(\"Produkti nuk u ndryshua\", \"warning\");\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"produkt-edit-pop-container\">\r\n            <form className=\"form-edit-produkt\" onSubmit={onEditProducts}>\r\n              <div className=\"produkt-edit-pop-container-titulli\">\r\n                <FormControl variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"njesia-label\">Status</InputLabel>\r\n                  <Select\r\n                    value={editStatus}\r\n                    onChange={(e) => setEditStatus(e.target.value)}\r\n                    style={{ width: \"150px\" }}\r\n                    label=\"Status\"\r\n                    inputProps={{\r\n                      name: \"status\",\r\n                      id: \"njesia-label\",\r\n                    }}\r\n                  >\r\n                    <MenuItem value={1}>Aktive</MenuItem>\r\n                    <MenuItem value={0}>Joaktive</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  value={editTitulli}\r\n                  label=\"Titulli\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setEditTitulli(e.target.value)}\r\n                />\r\n                <TextField\r\n                  value={editSku}\r\n                  label=\"Sku\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setEditSku(e.target.value)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"produkt-edit-pop-container-pershkrimi\">\r\n                <textarea\r\n                  value={editPershkrimi}\r\n                  onChange={(e) => setEditPershkrimi(e.target.value)}\r\n                />\r\n                <div\r\n                  className={\r\n                    imageEdit === \"\" ? \"image\" : \"image outlinestyle-none\"\r\n                  }\r\n                >\r\n                  {imageEdit === \"\" ? (\r\n                    <>\r\n                      <InputLabel\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        htmlFor=\"image\"\r\n                      >\r\n                        <AddIcon style={{ fontSize: \"70px\" }} /> upload{\" \"}\r\n                      </InputLabel>\r\n                      <Input\r\n                        onChange={(e) => {\r\n                          setEditImage(e.target.files[0]);\r\n                          setEditFile(URL.createObjectURL(e.target.files[0]));\r\n                        }}\r\n                        id=\"image\"\r\n                        type=\"file\"\r\n                        style={{ display: \"none\" }}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {deletedImage === true ? (\r\n                        <>\r\n                          <DeleteOutlineOutlinedIcon\r\n                            onClick={() => {\r\n                              setEditImage(\"\");\r\n                              setEditFile(\"\");\r\n                              setDeletedImage(true);\r\n                            }}\r\n                            className=\"delete-icon-image\"\r\n                          />\r\n                          <img src={fileEdit} alt=\"\" />\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <DeleteOutlineOutlinedIcon\r\n                            onClick={() => {\r\n                              setEditImage(\"\");\r\n                              setEditFile(\"\");\r\n                              setDeletedImage(true);\r\n                            }}\r\n                            className=\"delete-icon-image\"\r\n                          />\r\n                          <img\r\n                            src={`https://192.168.88.250/demo_react_server/images/${fileEdit}`}\r\n                            alt=\"\"\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"produkt-edit-pop-container-kategoria\">\r\n                <FormControl variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"kategoria-label\">Kategoria</InputLabel>\r\n                  <Select\r\n                    onChange={(e) => setEditKategoria(e.target.value)}\r\n                    style={{ width: \"150px\" }}\r\n                    value={editKategoria}\r\n                    label=\"Kategoria\"\r\n                    inputProps={{\r\n                      name: \"kategoria\",\r\n                      id: \"kategoria-label\",\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"kategoria1\">Kategoria1</MenuItem>\r\n                    <MenuItem value=\"kategoria2\">Kategoria2</MenuItem>\r\n                    <MenuItem value=\"kategoria3\">Kategoria3</MenuItem>\r\n                    <MenuItem value=\"kategoria4\">Kategoria4</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  value={editCmimi}\r\n                  label=\"Cmimi\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setEditCmimi(e.target.value)}\r\n                />\r\n                <TextField\r\n                  value={editSasia}\r\n                  label=\"Sasia\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setEditSasia(e.target.value)}\r\n                />\r\n\r\n                <FormControl variant=\"outlined\">\r\n                  <InputLabel htmlFor=\"njesia-label\">Njesia</InputLabel>\r\n                  <Select\r\n                    value={editNjesia}\r\n                    onChange={(e) => setEditNjesia(e.target.value)}\r\n                    style={{ width: \"150px\" }}\r\n                    label=\"Njesia\"\r\n                    inputProps={{\r\n                      name: \"njesia\",\r\n                      id: \"njesia-label\",\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"cop\">Cop</MenuItem>\r\n                    <MenuItem value=\"kuti\">Kuti</MenuItem>\r\n                    <MenuItem value=\"pako\">Pako</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div className=\"produkt-edit-pop-container-buttons\">\r\n                <Button color=\"primary\" variant=\"outlined\" type=\"submit\">\r\n                  Edit\r\n                </Button>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    showPorduktDetailsPop(false);\r\n                    setDeletedImage(false);\r\n                    alertContext.setAlert(\"Produkti nuk u ndryshua\", \"warning\");\r\n                  }}\r\n                >\r\n                  Anullo\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {deletePop && (\r\n        <div className=\"delete-pop\">\r\n          <div\r\n            className=\"delete-pop-opa\"\r\n            onClick={() => {\r\n              showDeletePop(false);\r\n              alertContext.setAlert(\"Produkti nuk u fshi!\", \"info\");\r\n            }}\r\n          ></div>\r\n          <div className=\"delete-pop-container\">\r\n            <h3>Jeni te sigurt qe doni te fshini produktin?</h3>\r\n            <div className=\"delete-pop-buttons\">\r\n              <Button\r\n                className=\"btn-delete-opa\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  alertContext.setAlert(\"Produkti u fshi!\", \"warning\");\r\n                  showDeletePop(false);\r\n                  depoContext.deleteProduct(idDelete);\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  showDeletePop(false);\r\n                  alertContext.setAlert(\"Produkti nuk u fshi!\", \"info\");\r\n                }}\r\n                className=\"btn-delete-opa\"\r\n                variant=\"contained\"\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {produktPopup && (\r\n        <ShtoProduktPopup closePopup={() => showProduktPopup(false)} />\r\n      )}\r\n      <div className=\"produkte-header\">\r\n        <div className=\"produkte-header-item\">\r\n          <div className=\"produkte-header-item-left\">\r\n            <p>te gjitha produktet</p>\r\n            <h1>{produktet.length}</h1>\r\n            <p>20%(30 dite)</p>\r\n          </div>\r\n          <div className=\"produkte-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"produkte-header-item\">\r\n          <div className=\"produkte-header-item-left\">\r\n            <p>Kategoria</p>\r\n            <Select\r\n              variant=\"filled\"\r\n              fullWidth\r\n              onChange={(e) => setKategoria(e.target.value)}\r\n              value={kategoria === \"\" ? \"None\" : kategoria}\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"Kategoria1\">Kategoria1</MenuItem>\r\n              <MenuItem value=\"Kategoria2\">Kategoria2</MenuItem>\r\n              <MenuItem value=\"Kategoria3\">Kategoria3</MenuItem>\r\n            </Select>\r\n            <p>\r\n              {\" \"}\r\n              {kategoria === \"\" ? \"Asnje kategori e zgjedhur\" : kategoria}{\" \"}\r\n            </p>\r\n          </div>\r\n          <div className=\"produkte-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"produkte-header-item\">\r\n          <div className=\"produkte-header-item-left\">\r\n            <p>Produkte pa stok</p>\r\n            <h1> {produktet.filter((stock) => stock.sasia == 0).length} </h1>\r\n            <p>75%(30 dite)</p>\r\n          </div>\r\n          <div className=\"produkte-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"produkte-header-item\">\r\n          <div className=\"produkte-header-item-left\">\r\n            <p>Produkte drejt perfundimit</p>\r\n            <h1>\r\n              {\" \"}\r\n              {\r\n                produktet.filter((end) => end.sasia >= 1 && end.sasia <= 20)\r\n                  .length\r\n              }{\" \"}\r\n            </h1>\r\n            <p>75%(30 dite)</p>\r\n          </div>\r\n          <div className=\"produkte-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"data-table-produkte\">\r\n        <div className=\"data-table-produkte-header\">\r\n          <div className=\"data-table-produkte-header-left\">\r\n            {\" \"}\r\n            <h3>Produktet</h3>\r\n          </div>\r\n          <div className=\"data-table-produkte-header-right\">\r\n            <TextField\r\n              style={{ marginRight: \"30px\" }}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              label=\"Kerko\"\r\n              placeholder=\"Kerko\"\r\n              type=\"search\"\r\n              onChange={(e) => setSearchFilter(e.target.value)}\r\n            ></TextField>\r\n            <Button\r\n              style={{\r\n                backgroundColor: \"#2A7EBF\",\r\n                borderRadius: \"8px\",\r\n                padding: \"10px 20px\",\r\n              }}\r\n              color=\"primary\"\r\n              onClick={() => showProduktPopup(true)}\r\n              variant=\"contained\"\r\n              startIcon={<PostAddIcon style={{ fontSize: \"25px\" }} />}\r\n            >\r\n              Shto Produkt\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Table size=\"medium\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell onClick={() => requestSort(\"id\")}>\r\n                ID\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"left\">Foto</TableCell>\r\n              <TableCell onClick={() => requestSort(\"titulli\")} align=\"left\">\r\n                Titulli\r\n                {propertyName.key === \"titulli\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"titulli\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell onClick={() => requestSort(\"kategoria\")} align=\"left\">\r\n                Kategoria\r\n                {propertyName.key === \"kategoria\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"kategoria\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell onClick={() => requestSort(\"sasia\")} align=\"left\">\r\n                Stok\r\n                {propertyName.key === \"sasia\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"sasia\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell onClick={() => requestSort(\"cmimi\")} align=\"left\">\r\n                Cmimi\r\n                {propertyName.key === \"cmimi\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"cmimi\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"left\" onClick={() => requestSort(\"status\")}>\r\n                Status\r\n                {propertyName.key === \"status\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"status\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"center\">Veprimet</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filteredProducts.slice(start, end).map((produkt) => (\r\n              <TableRow key={produkt.id}>\r\n                <TableCell style={{ color: \"#287DBF\" }}>\r\n                  #{produkt.id}{\" \"}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <img\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    src={`https://192.168.88.250/demo_react_server/images/${produkt.image}`}\r\n                    alt=\"Foto Produkti\"\r\n                    style={{ borderRadius: \"50%\" }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>{produkt.titulli}</TableCell>\r\n                <TableCell>{produkt.kategoria}</TableCell>\r\n                <TableCell\r\n                  style={{\r\n                    color: stockColor(produkt.sasia),\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  {produkt.sasia === 0 ? \"Ska stok\" : produkt.sasia}\r\n                </TableCell>\r\n                <TableCell>{produkt.cmimi}</TableCell>\r\n                <TableCell>\r\n                  <p className=\"status-text\">\r\n                    {\" \"}\r\n                    <span\r\n                      className=\"status-pulse\"\r\n                      style={{\r\n                        backgroundColor: renderButtonColorsStatus(\r\n                          produkt.status\r\n                        ),\r\n                      }}\r\n                    ></span>{\" \"}\r\n                    {renderButtonStatus(produkt.status)}{\" \"}\r\n                  </p>\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <div className=\"veprime\" style={{ cursor: \"pointer\" }}>\r\n                    <VisibilityOutlinedIcon\r\n                      onClick={() => {\r\n                        setProduktDetails(produkt);\r\n                        setDetailsPop(true);\r\n                      }}\r\n                    />\r\n                    <EditOutlinedIcon\r\n                      onClick={() => {\r\n                        showPorduktDetailsPop(true);\r\n                        setEditTitulli(produkt.titulli);\r\n                        setEditSku(produkt.sku);\r\n                        setEditPershkrimi(produkt.pershkrimi);\r\n                        setEditKategoria(produkt.kategoria);\r\n                        setEditCmimi(produkt.cmimi);\r\n                        setEditSasia(produkt.sasia);\r\n                        setEditNjesia(produkt.njesia);\r\n                        setEditStatus(produkt.status);\r\n                        setEditFile(produkt.image);\r\n                        setEditImage(produkt.image);\r\n                        setEditID(produkt.id);\r\n                      }}\r\n                    />\r\n                    <DeleteOutlineOutlinedIcon\r\n                      onClick={() => {\r\n                        showDeletePop(true);\r\n                        setDeleteId(produkt.id);\r\n                      }}\r\n                      style={{ display: produkt.status === 0 ? \"none\" : \"\" }}\r\n                    />\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <div className=\"pagination\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n              Produkte ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => setItempage(e.target.value)}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(filteredProducts.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\Porosite.jsx",["218"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport LocalMallOutlinedIcon from \"@material-ui/icons/LocalMallOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport axios from \"axios\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport VisibilityOutlinedIcon from \"@material-ui/icons/VisibilityOutlined\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nexport default function Porosite() {\r\n  const depoContext = useContext(DepoContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { porosite, orderDetails, produktet } = depoContext;\r\n  const totali = orderDetails.map((order) => order.totali);\r\n  const orderDetailsProduktID = orderDetails.map((order) => order.produkt_id);\r\n  const orderDetailsID = orderDetails.map((oder) => oder.ID);\r\n  const [editOrderPop, setEditOrderPop] = useState(false);\r\n  const [orderDetailss, showOrderDetails] = useState(false);\r\n  const [deletePop, showDeletePop] = useState(false);\r\n  const [idDelete, setDeleteId] = useState(\"\");\r\n  const [orderContentDetails, setOrderDetailsContent] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [itemPage, setItempage] = useState(5);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"order_date\",\r\n    direction: \"descending\",\r\n  });\r\n\r\n  const findSamePrice = (produktID, produktCmimi, orderID, order) => {\r\n    const produktObjectFound = produktet.find(\r\n      (produkt) => produkt.id === produktID\r\n    );\r\n\r\n    if (produktObjectFound.cmimi === produktCmimi) {\r\n      depoContext.deleteProductFromOrder(orderID, produktID, order);\r\n    } else {\r\n      alert(\"No\");\r\n    }\r\n  };\r\n\r\n  const [searchFilter, setSearchFilter] = useState(\"\");\r\n  const filteredOrder = porosite.filter(\r\n    (order) =>\r\n      order.ID.toString().toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.klient_emer.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.order_date.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.klient_zona.toLowerCase().includes(searchFilter.toLowerCase()) ||\r\n      order.total_price\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(searchFilter.toLowerCase())\r\n  );\r\n\r\n  useEffect(() => {\r\n    depoContext.getAllOrders();\r\n    depoContext.getAllProducts();\r\n  }, []);\r\n\r\n  if (propertyName !== null) {\r\n    filteredOrder.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const renderButtonStatus = (status) => {\r\n    if (status === 1) {\r\n      return \"Aktive\";\r\n    } else if (status === 2) {\r\n      return \"Ne Pritje\";\r\n    } else if (status === 3) {\r\n      return \"Anulluar\";\r\n    } else {\r\n      return \"Perfunduar\";\r\n    }\r\n  };\r\n\r\n  const renderButtonColorsStatus = (status) => {\r\n    if (status === 1) {\r\n      return \"#3ccc38\";\r\n    } else if (status === 2) {\r\n      return \"#FECD2F\";\r\n    } else if (status === 3) {\r\n      return \"#fd3259\";\r\n    } else {\r\n      return \"#6569df\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {editOrderPop && (\r\n        <div className=\"edit-order-pop\">\r\n          <div\r\n            className=\"edit-order-pop-opa\"\r\n            onClick={() => {\r\n              setEditOrderPop(false);\r\n              depoContext.emptyOrderDetails();\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"edit-order-pop-container\">\r\n            <div className=\"edit-order-pop-container-left\">\r\n              <h3>Produktet e porosise</h3>\r\n              <div className=\"edit-order-pop-container-left-items\">\r\n                {orderDetails.map((order) => (\r\n                  <div\r\n                    className=\"edit-order-pop-container-item\"\r\n                    key={order.titulli}\r\n                  >\r\n                    <div className=\"edit-order-pop-container-item-image\">\r\n                      <img\r\n                        src={`https://192.168.88.250/demo_react_server/images/${order.image}`}\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"edit-order-pop-cotainer-item-titulli-buttons\">\r\n                      <div className=\"edit-order-pop-item-titulli\">\r\n                        <h4> {order.titulli} </h4>\r\n                        <h5> Cmimi fillestar : {order.cmimiProduktit} Leke </h5>\r\n                      </div>\r\n                      <div className=\"edit-order-pop-item-buttons\">\r\n                        <Tooltip title=\"Zbrit\">\r\n                          <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            disabled={order.qty === 1 ? true : false}\r\n                            onClick={() => {\r\n                              depoContext.decreaseOrderQty(order);\r\n                              alertContext.setAlert(\r\n                                `Sasia e produktit ${order.titulli} u ul`,\r\n                                \"success\"\r\n                              );\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n                            -{\" \"}\r\n                          </Button>\r\n                        </Tooltip>\r\n                        <p> {order.qty} </p>\r\n                        <Tooltip title=\"Rrit\">\r\n                          <Button\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            disabled={order.qty === order.sasia ? true : false}\r\n                            onClick={() => {\r\n                              depoContext.increaseOrderQty(order);\r\n                              alertContext.setAlert(\r\n                                `Sasia e produktit ${order.titulli} u rrit`,\r\n                                \"success\"\r\n                              );\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n                            +{\" \"}\r\n                          </Button>\r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"edit-order-pop-container-item-cmimi\">\r\n                      <Tooltip title=\"Delete\">\r\n                        <CloseOutlinedIcon\r\n                          style={{\r\n                            color: \"red\",\r\n                            alignSelf: \"flex-end\",\r\n                            justifySelf: \"flex-end\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            findSamePrice(\r\n                              order.produkt_id,\r\n                              order.cmimiProduktit,\r\n                              order.ID,\r\n                              order\r\n                            );\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                      <h5> Totali : {order.qty * order.cmimiProduktit} </h5>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"edit-order-pop-container-left-totali\">\r\n                <h2> Totali i porosise: {totali[0]} </h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"edit-order-pop-container-right\">\r\n              <h3>Produktet</h3>\r\n              <div className=\"edit-order-pop-container-right-items\">\r\n                {produktet.map((produkt) => (\r\n                  <>\r\n                    <div\r\n                      className=\"edit-order-pop-container-right-items-item\"\r\n                      key={produkt.titulli}\r\n                      style={{\r\n                        display:\r\n                          orderDetailsProduktID.some(\r\n                            (order) => order === produkt.id\r\n                          ) === true\r\n                            ? \"none\"\r\n                            : \"\",\r\n                      }}\r\n                    >\r\n                      <div className=\"edit-order-pop-container-right-items-item-image\">\r\n                        <img\r\n                          src={`https://192.168.88.250/demo_react_server/images/${produkt.image}`}\r\n                          alt=\"\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"edit-order-pop-container-right-items-item-titulli-buttons\">\r\n                        <div className=\"edit-order-pop-container-right-items-item-titulli\">\r\n                          <h3>{produkt.titulli}</h3>\r\n                          <p> {produkt.pershkrimi} </p>\r\n                        </div>\r\n                        <div className=\"edit-order-pop-container-right-items-item-buttons\">\r\n                          <Button\r\n                            startIcon={<AddShoppingCartIcon />}\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                              depoContext.addProductToOrder(\r\n                                produkt,\r\n                                orderDetailsID[0]\r\n                              );\r\n                            }}\r\n                          >\r\n                            {\" \"}\r\n                            Shto tek porosite{\" \"}\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"edit-order-right-items-item-cmimi\">\r\n                        <h4>Cmimi: {produkt.cmimi} Leke</h4>\r\n                        <h4>Stock: {produkt.sasia} </h4>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {deletePop && (\r\n        <div className=\"delete-pop\">\r\n          <div\r\n            className=\"delete-pop-opa\"\r\n            onClick={() => {\r\n              showDeletePop(false);\r\n              alertContext.setAlert(\"Porosia nuk u anullua!\", \"info\");\r\n            }}\r\n          ></div>\r\n          <div className=\"delete-pop-container\">\r\n            <h3>Jeni te sigurt qe doni te anulloni porosine?</h3>\r\n            <div className=\"delete-pop-buttons\">\r\n              <Button\r\n                className=\"btn-delete-opa\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  depoContext.cancelOrder(idDelete);\r\n                  alertContext.setAlert(\"Porosia u anullua!\", \"warning\");\r\n                  showDeletePop(false);\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  showDeletePop(false);\r\n                  alertContext.setAlert(\"Porosia nuk u anullua!\", \"info\");\r\n                }}\r\n                className=\"btn-delete-opa\"\r\n                variant=\"contained\"\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {orderDetailss && (\r\n        <div className=\"order-details-pop\">\r\n          <div\r\n            className=\"order-details-pop-opa\"\r\n            onClick={() => {\r\n              showOrderDetails(false);\r\n              setOrderDetailsContent([]);\r\n            }}\r\n          ></div>\r\n          <div className=\"order-details-pop-content\">\r\n            {orderContentDetails.map((order) => (\r\n              <div className=\"order-details-pop-content-item\" key={order.ID}>\r\n                <div className=\"order-details-pop-content-item-image\">\r\n                  <img\r\n                    src={`https://192.168.88.250/demo_react_server/images/${order.image}`}\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"order-details-pop-content-item-title\">\r\n                  <h2> {order.titulli} </h2>\r\n                  <p> {order.pershkrimi} </p>\r\n                </div>\r\n                <div className=\"order-details-pop-content-item-price\">\r\n                  <h3> {order.cmimiProduktit} Leke</h3>\r\n                  <p>Sasia: {order.qty} </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"porosite-header\">\r\n        <div className=\"porosite-header-item\">\r\n          <div className=\"porosite-header-item-left\">\r\n            <p>Porosi gjithsej</p>\r\n            <h2> {porosite.length} </h2>\r\n            <p></p>\r\n          </div>\r\n          <div className=\"porosite-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"porosite-header-item\">\r\n          <div className=\"porosite-header-item-left\">\r\n            <p>Porosi aktive</p>\r\n            <h2>\r\n              {\" \"}\r\n              {\r\n                porosite.filter((porosi) => porosi.order_status === 1).length\r\n              }{\" \"}\r\n            </h2>\r\n            <p></p>\r\n          </div>\r\n          <div className=\"porosite-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"porosite-header-item\">\r\n          <div className=\"porosite-header-item-left\">\r\n            <p>Porosi ne pritje</p>\r\n            <h2>\r\n              {\" \"}\r\n              {\r\n                porosite.filter((porosi) => porosi.order_status === 2).length\r\n              }{\" \"}\r\n            </h2>\r\n            <p></p>\r\n          </div>\r\n          <div className=\"porosite-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"porosite-header-item\">\r\n          <div className=\"porosite-header-item-left\">\r\n            <p>Porosi te anulluara</p>\r\n            <h2>\r\n              {\" \"}\r\n              {\r\n                porosite.filter((porosi) => porosi.order_status === 3).length\r\n              }{\" \"}\r\n            </h2>\r\n            <p></p>\r\n          </div>\r\n          <div className=\"porosite-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"porosite-header-item\">\r\n          <div className=\"porosite-header-item-left\">\r\n            <p>Porosi te perfunduara</p>\r\n            <h2>\r\n              {\" \"}\r\n              {\r\n                porosite.filter((porosi) => porosi.order_status === 4).length\r\n              }{\" \"}\r\n            </h2>\r\n            <p></p>\r\n          </div>\r\n          <div className=\"porosite-header-item-right\">\r\n            <LocalMallOutlinedIcon style={{ fontSize: \"40px\" }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"porosite-data-table\">\r\n        <div className=\"porosite-data-table-header\">\r\n          <h2>Porosite</h2>\r\n          <div className=\"porosite-data-table-buttons\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              type=\"search\"\r\n              size=\"small\"\r\n              label=\"Kerko\"\r\n              placeholder=\"Kerko...\"\r\n              onChange={(e) => setSearchFilter(e.target.value)}\r\n            />\r\n            <Button\r\n              startIcon={<AddIcon />}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{\r\n                backgroundColor: \"#2A7EBF\",\r\n                borderRadius: \"8px\",\r\n                padding: \"10px 20px\",\r\n              }}\r\n            >\r\n              Shto Porosi\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell onClick={() => requestSort(\"ID\")}>\r\n                ID\r\n                {propertyName.key === \"ID\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"ID\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                onClick={() => requestSort(\"klient_emer\")}\r\n              >\r\n                Emri\r\n                {propertyName.key === \"klient_emer\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"klient_emer\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"left\" onClick={() => requestSort(\"order_date\")}>\r\n                Data\r\n                {propertyName.key === \"order_date\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"order_date\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                onClick={() => requestSort(\"klient_zona\")}\r\n              >\r\n                Zona\r\n                {propertyName.key === \"klient_zona\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"klient_zona\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                onClick={() => requestSort(\"total_price\")}\r\n              >\r\n                Vlera\r\n                {propertyName.key === \"total_price\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"total_price\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"left\"\r\n                onClick={() => requestSort(\"order_status\")}\r\n              >\r\n                Porosia\r\n                {propertyName.key === \"order_status\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"order_status\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"center\">Veprimet</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {filteredOrder.slice(start, end).map((order) => (\r\n              <TableRow key={order.ID}>\r\n                <TableCell style={{ color: \"#287DBF\" }}>#{order.ID} </TableCell>\r\n                <TableCell> {order.klient_emer} </TableCell>\r\n                <TableCell> {order.order_date} </TableCell>\r\n                <TableCell> {order.klient_zona} </TableCell>\r\n                <TableCell> {order.total_price} Leke </TableCell>\r\n                <TableCell>\r\n                  <p className=\"status-text\">\r\n                    {\" \"}\r\n                    <span\r\n                      className=\"status-pulse\"\r\n                      style={{\r\n                        backgroundColor: renderButtonColorsStatus(\r\n                          order.order_status\r\n                        ),\r\n                      }}\r\n                    ></span>{\" \"}\r\n                    {renderButtonStatus(order.order_status)}{\" \"}\r\n                  </p>\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\">\r\n                  <div className=\"veprime\" style={{ cursor: \"pointer\" }}>\r\n                    <VisibilityOutlinedIcon\r\n                      onClick={() => {\r\n                        showOrderDetails(true);\r\n                        axios\r\n                          .get(\r\n                            `https://192.168.88.250/demo_react_server/api/config/get_orderDetails.php?klient=${order.klientID}&order_id=${order.ID}`\r\n                          )\r\n                          .then((res) => setOrderDetailsContent(res.data));\r\n                      }}\r\n                    />\r\n                    <EditOutlinedIcon\r\n                      onClick={() => {\r\n                        setEditOrderPop(true);\r\n                        depoContext.getOrderDetails(order);\r\n                      }}\r\n                    />\r\n                    <DeleteOutlineOutlinedIcon\r\n                      onClick={() => {\r\n                        showDeletePop(true);\r\n                        setDeleteId(order.ID);\r\n                      }}\r\n                      style={{\r\n                        display: order.order_status === 3 ? \"none\" : \"\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className=\"pagination\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n              Porosi ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(filteredOrder.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriProduktesh.jsx",["219"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\n\r\nexport default function ShtoKategoriProduktesh() {\r\n  const [shtoKategoriPop, showKategoriPop] = useState(false);\r\n  const [editKategoriPop, showEditKategoriPop] = useState(false);\r\n  const [deleteKategoriPop, showDeleteKategoriPop] = useState(false);\r\n  const [editKategoriName, setEditKategoriName] = useState(\"\");\r\n  const [editID, setEditID] = useState(\"\");\r\n  const [deleteID, setDeleteID] = useState(\"\");\r\n  const [kategoriName, setKategoriName] = useState(\"\");\r\n  const depoContext = useContext(DepoContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { categoryProducts } = depoContext;\r\n  const [page, setPage] = useState(1);\r\n  const [itemPage, setItempage] = useState(5);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"id\",\r\n    direction: \"descending\",\r\n  });\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  if (propertyName !== null) {\r\n    categoryProducts.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    depoContext.getCategoryProducts();\r\n  }, []);\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      {deleteKategoriPop && (\r\n        <div className=\"produkt-kategori-delete-pop\">\r\n          <div\r\n            className=\"produkt-kategori-delete-pop-opa\"\r\n            onClick={() => {\r\n              showDeleteKategoriPop(false);\r\n              setDeleteID(\"\");\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"produkt-kategori-delete-pop-container\">\r\n            <p>Jeni te sigurt qe doni ta fshini?</p>\r\n            <div className=\"produkt-kategori-delete-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/delete_categoryProduct.php\",\r\n                      { id: deleteID }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        showDeleteKategoriPop(false);\r\n                        setDeleteID(\"\");\r\n                        depoContext.getCategoryProducts();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  showDeleteKategoriPop(false);\r\n                  setDeleteID(\"\");\r\n                }}\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {editKategoriPop && (\r\n        <div className=\"produkt-kategori-edit-pop\">\r\n          <div\r\n            className=\"produkt-kategori-edit-pop-opa\"\r\n            onClick={() => {\r\n              showEditKategoriPop(false);\r\n              setEditID(\"\");\r\n              setEditKategoriName(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"produkt-kategori-edit-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showEditKategoriPop(false);\r\n                setEditID(\"\");\r\n                setEditKategoriName(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"60%\" }}\r\n              variant=\"outlined\"\r\n              label=\"Emri i kategorise\"\r\n              value={editKategoriName}\r\n              onChange={(e) => setEditKategoriName(e.target.value)}\r\n            />\r\n\r\n            <div className=\"produkt-kategori-edit-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/edit_productCategory.php\",\r\n                      { id: editID, name: editKategoriName }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        showKategoriPop(false);\r\n                        setEditID(\"\");\r\n                        setEditKategoriName(\"\");\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  showEditKategoriPop(false);\r\n                  setEditID(\"\");\r\n                  setEditKategoriName(\"\");\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoKategoriPop && (\r\n        <div className=\"shto-kategori-pop\">\r\n          <div\r\n            className=\"shto-kategori-pop-opa\"\r\n            onClick={() => {\r\n              showKategoriPop(false);\r\n              setKategoriName(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"shto-kategori-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showKategoriPop(false);\r\n                setKategoriName(\"\");\r\n              }}\r\n            />\r\n\r\n            <TextField\r\n              value={kategoriName}\r\n              style={{ width: \"60%\" }}\r\n              variant=\"outlined\"\r\n              label=\"Emri i kategorise\"\r\n              onChange={(e) => setKategoriName(e.target.value)}\r\n            />\r\n            <div className=\"shto-kategori-pop-container-buttons\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/add_product_category.php\",\r\n                      { name: kategoriName }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        setKategoriName(\"\");\r\n                        showKategoriPop(false);\r\n                        depoContext.getCategoryProducts();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Shto\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  showKategoriPop(false);\r\n                  setKategoriName(\"\");\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"shto-kategori-produktesh\">\r\n        <div className=\"shto-kategori-produktesh-header\">\r\n          <h3>Kategorite e produkteve</h3>\r\n          <Button\r\n            startIcon={<AddBoxOutlinedIcon />}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              showKategoriPop(true);\r\n            }}\r\n          >\r\n            Shto kategori\r\n          </Button>\r\n        </div>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"id\")}\r\n              >\r\n                ID\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"name\")}\r\n              >\r\n                Emri\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell style={{ cursor: \"pointer\" }} align=\"center\">\r\n                Veprimet\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categoryProducts.slice(start, end).map((category) => (\r\n              <TableRow key={category.id}>\r\n                <TableCell align=\"center\"> {category.id} </TableCell>\r\n                <TableCell align=\"center\"> {category.name} </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EditOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      showEditKategoriPop(true);\r\n                      setEditKategoriName(category.name);\r\n                      setEditID(category.id);\r\n                    }}\r\n                  />\r\n                  <DeleteOutlineOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      setDeleteID(category.id);\r\n                      showDeleteKategoriPop(true);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <div className=\"pagination\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n              Kategori ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n              <MenuItem value={25}>25</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(categoryProducts.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoZonaKlientesh.jsx",["220"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\n\r\nexport default function ShtoZonaKlientesh() {\r\n  const depoContext = useContext(DepoContext);\r\n  const { zonaClients } = depoContext;\r\n  const alertContext = useContext(AlertContext);\r\n  const [shtoZonaPop, showShtoZonaPop] = useState(false);\r\n  const [emriZones, setEmriZones] = useState(\"\");\r\n  const [deleteZonaPop, showDeleteZonaPop] = useState(false);\r\n  const [deleteID, setDeleteID] = useState(\"\");\r\n  const [editZonaPop, showEditZonaPop] = useState(false);\r\n  const [editZonaName, setEditZonaName] = useState(\"\");\r\n  const [editZonaID, setEditZonaID] = useState(\"\");\r\n  const [itemPage, setItempage] = useState(5);\r\n  const [page, setPage] = useState(1);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"id\",\r\n    direction: \"descending\",\r\n  });\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  if (propertyName !== null) {\r\n    zonaClients.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    depoContext.getZonaClients();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {editZonaPop && (\r\n        <div className=\"edit-klient-zona-pop\">\r\n          <div\r\n            className=\"edit-klient-zona-pop-opa\"\r\n            onClick={() => {\r\n              showEditZonaPop(false);\r\n              setEditZonaID(\"\");\r\n              setEditZonaName(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"edit-klient-zona-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showEditZonaPop(false);\r\n                setEditZonaID(\"\");\r\n                setEditZonaName(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Emri i zones\"\r\n              value={editZonaName}\r\n              onChange={(e) => {\r\n                setEditZonaName(e.target.value);\r\n              }}\r\n              style={{ width: \"60%\" }}\r\n            />\r\n            <div className=\"edit-klient-zona-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/edit_zona_clients.php\",\r\n                      { id: editZonaID, name: editZonaName }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        depoContext.getZonaClients();\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        setEditZonaName(\"\");\r\n                        setEditZonaID(\"\");\r\n                        showEditZonaPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setEditZonaName(\"\");\r\n                  setEditZonaID(\"\");\r\n                  showEditZonaPop(false);\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {deleteZonaPop && (\r\n        <div className=\"delete-klient-zona-pop\">\r\n          <div\r\n            className=\"delete-klient-zona-pop-opa\"\r\n            onClick={() => {\r\n              showDeleteZonaPop(false);\r\n              setDeleteID(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"delete-klient-zona-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showDeleteZonaPop(false);\r\n                setDeleteID(\"\");\r\n              }}\r\n            />\r\n            <h4>Jeni te sigurt qe doni te fshini zonen?</h4>\r\n            <div className=\"delete-klient-zona-pop-container-buttons\">\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/delete_zona_clients.php\",\r\n                      { id: deleteID }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        depoContext.getZonaClients();\r\n                        setDeleteID(\"\");\r\n                        showDeleteZonaPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                PO\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setDeleteID(\"\");\r\n                  showDeleteZonaPop(false);\r\n                }}\r\n              >\r\n                JO\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoZonaPop && (\r\n        <div className=\"shto-klient-zona-pop\">\r\n          <div\r\n            className=\"shto-klient-zona-pop-opa\"\r\n            onClick={() => {\r\n              showShtoZonaPop(false);\r\n              setEmriZones(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"shto-klient-zona-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showShtoZonaPop(false);\r\n                setEmriZones(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Emri i zones\"\r\n              style={{ width: \"60%\" }}\r\n              value={emriZones}\r\n              onChange={(e) => setEmriZones(e.target.value)}\r\n              variant=\"outlined\"\r\n            />\r\n            <div className=\"shto-klient-zona-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/add_zona_client.php\",\r\n                      { name: emriZones }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        depoContext.getZonaClients();\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        setEmriZones(\"\");\r\n                        showShtoZonaPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  setEmriZones(\"\");\r\n                  showShtoZonaPop(false);\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"shto-klient-zona\">\r\n        <div className=\"shto-klient-zona-header\">\r\n          <h4>Zonat e klienteve</h4>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            startIcon={<AddBoxOutlinedIcon />}\r\n            onClick={() => {\r\n              showShtoZonaPop(true);\r\n            }}\r\n          >\r\n            Shto zone\r\n          </Button>\r\n        </div>\r\n\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"id\")}\r\n              >\r\n                ID\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"name\")}\r\n              >\r\n                Emri\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"center\">Veprimet</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {zonaClients.slice(start, end).map((zona) => (\r\n              <TableRow>\r\n                <TableCell align=\"center\">{zona.id}</TableCell>\r\n                <TableCell align=\"center\">{zona.name}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EditOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      showEditZonaPop(true);\r\n                      setEditZonaID(zona.id);\r\n                      setEditZonaName(zona.name);\r\n                    }}\r\n                  />\r\n                  <DeleteOutlineOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      showDeleteZonaPop(true);\r\n                      setDeleteID(zona.id);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className=\"pagination\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n              Zona ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(zonaClients.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKategoriKlientesh.jsx",["221"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\n\r\nexport default function ShtoKategoriKlientesh() {\r\n  const depoContext = useContext(DepoContext);\r\n  const { categoryClients } = depoContext;\r\n  const alertContext = useContext(AlertContext);\r\n  const [shtoKategoriPop, showShtoKategoriPop] = useState(false);\r\n  const [deleteKategoriPop, showDeleteKategoriPop] = useState(false);\r\n  const [editKategoriPopm, showEditKategoriPop] = useState(false);\r\n  const [editKategoriName, setEditKategoriName] = useState(\"\");\r\n  const [editIDKategori, setEditIDKategori] = useState(\"\");\r\n  const [emriKategorise, setEmriKategorise] = useState(\"\");\r\n  const [deleteID, setDeleteID] = useState(\"\");\r\n  const [itemPage, setItempage] = useState(5);\r\n  const [page, setPage] = useState(1);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"id\",\r\n    direction: \"descending\",\r\n  });\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  if (propertyName !== null) {\r\n    categoryClients.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    depoContext.getCategoryClients();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {editKategoriPopm && (\r\n        <div className=\"edit-kategori-klientesh-pop\">\r\n          <div\r\n            className=\"edit-kategori-klientesh-pop-opa\"\r\n            onClick={() => {\r\n              showEditKategoriPop(false);\r\n              setEditKategoriName(\"\");\r\n              setEditIDKategori(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"edit-kategori-klientesh-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showEditKategoriPop(false);\r\n                setEditKategoriName(\"\");\r\n                setEditIDKategori(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              value={editKategoriName}\r\n              onChange={(e) => {\r\n                setEditKategoriName(e.target.value);\r\n              }}\r\n              variant=\"outlined\"\r\n              label=\"Emri i kategorise\"\r\n              style={{ width: \"60%\" }}\r\n            />\r\n            <div className=\"edit-kategori-klientesh-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/edit_category_client.php\",\r\n                      { id: editIDKategori, name: editKategoriName }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        showEditKategoriPop(false);\r\n                        setEditKategoriName(\"\");\r\n                        setEditIDKategori(\"\");\r\n                        depoContext.getCategoryClients();\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  showEditKategoriPop(false);\r\n                  setEditKategoriName(\"\");\r\n                  setEditIDKategori(\"\");\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {deleteKategoriPop && (\r\n        <div className=\"delete-kategori-klientesh-pop\">\r\n          <div\r\n            className=\"delete-kategori-klientesh-pop-opa\"\r\n            onClick={() => {\r\n              showDeleteKategoriPop(false);\r\n              setDeleteID(\"\");\r\n            }}\r\n          ></div>\r\n\r\n          <div className=\"delete-kategori-klientesh-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showDeleteKategoriPop(false);\r\n                setDeleteID(\"\");\r\n              }}\r\n            />\r\n            <h4>Jeni te sigurt qe doni te fshni kateogrine?</h4>\r\n            <div className=\"delete-kategori-klientesh-pop-container-buttons\">\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/delete_category_client.php\",\r\n                      { id: deleteID }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        showDeleteKategoriPop(false);\r\n                        setDeleteID(\"\");\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        depoContext.getCategoryClients();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Po\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  showDeleteKategoriPop(false);\r\n                  setDeleteID(\"\");\r\n                }}\r\n              >\r\n                Jo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoKategoriPop && (\r\n        <div className=\"shto-kategori-klientesh-pop\">\r\n          <div\r\n            className=\"shto-kategori-klientesh-pop-opa\"\r\n            onClick={() => {\r\n              showShtoKategoriPop(false);\r\n              setEmriKategorise(\"\");\r\n            }}\r\n          ></div>\r\n          <div className=\"shto-kategori-klientesh-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => {\r\n                showShtoKategoriPop(false);\r\n                setEmriKategorise(\"\");\r\n              }}\r\n            />\r\n            <TextField\r\n              style={{ width: \"60%\" }}\r\n              label=\"Emri i kategorise\"\r\n              variant=\"outlined\"\r\n              value={emriKategorise}\r\n              onChange={(e) => {\r\n                setEmriKategorise(e.target.value);\r\n              }}\r\n            />\r\n            <div className=\"shto-kategori-klientesh-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/add_category_client.php\",\r\n                      { name: emriKategorise }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        showShtoKategoriPop(false);\r\n                        depoContext.getCategoryClients();\r\n                        setEmriKategorise(\"\");\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  showShtoKategoriPop(false);\r\n                  setEmriKategorise(\"\");\r\n                }}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"shto-kategori-klientesh\">\r\n        <div className=\"shto-kategori-klientesh-header\">\r\n          <h3>Kategorite e klienteve</h3>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            startIcon={<AddBoxOutlinedIcon />}\r\n            onClick={() => {\r\n              showShtoKategoriPop(true);\r\n            }}\r\n          >\r\n            Shto kategori\r\n          </Button>\r\n        </div>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"id\")}\r\n              >\r\n                ID\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell\r\n                style={{ cursor: \"pointer\" }}\r\n                align=\"center\"\r\n                onClick={() => requestSort(\"name\")}\r\n              >\r\n                Emri\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell style={{ cursor: \"pointer\" }} align=\"center\">\r\n                Veprimet\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {categoryClients.slice(start, end).map((category) => (\r\n              <TableRow>\r\n                <TableCell align=\"center\">{category.id}</TableCell>\r\n                <TableCell align=\"center\">{category.name}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EditOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      setEditIDKategori(category.id);\r\n                      setEditKategoriName(category.name);\r\n                      showEditKategoriPop(true);\r\n                    }}\r\n                  />\r\n                  <DeleteOutlineOutlinedIcon\r\n                    onClick={() => {\r\n                      showDeleteKategoriPop(true);\r\n                      setDeleteID(category.id);\r\n                    }}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className=\"pagination\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n              Kategori ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(categoryClients.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoAttributes.jsx",["222"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport RemoveRedEyeOutlinedIcon from \"@material-ui/icons/RemoveRedEyeOutlined\";\r\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\r\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\r\n\r\nexport default function ShtoAttributes() {\r\n  const [shtoAttrPop, showAttrPop] = useState(false);\r\n  const [attrValue, setAttrValue] = useState(\"\");\r\n  const [shtoValueAttrPop, showAttrPopValue] = useState(false);\r\n  const [attrFromSelect, getAttrFromSelect] = useState(\"\");\r\n  const [attrnameValue, setAttrNameValue] = useState(\"\");\r\n  const alertContext = useContext(AlertContext);\r\n  const depoContext = useContext(DepoContext);\r\n  const { attrNames, attrValues } = depoContext;\r\n  const [seeAttrNames, showAllAttrNames] = useState(false);\r\n  const [itemPage, setItempage] = useState(5);\r\n  const [editPop, showEditPop] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const start = (page - 1) * itemPage;\r\n  const end = page * itemPage;\r\n  const [editValue, setEditvalue] = useState(\"\");\r\n  const [editID, setEditID] = useState(\"\");\r\n  const [deletePop, showDeletePop] = useState(false);\r\n  const [deleteID, setDeleteID] = useState(\"\");\r\n  const [propertyName, setProperty] = useState({\r\n    key: \"id\",\r\n    direction: \"descending\",\r\n  });\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      propertyName &&\r\n      propertyName.key === key &&\r\n      propertyName.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setProperty({ key, direction });\r\n  };\r\n  if (propertyName !== null) {\r\n    attrValues.sort((a, b) => {\r\n      if (a[propertyName.key] < b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? -1 : 1;\r\n      }\r\n      if (a[propertyName.key] > b[propertyName.key]) {\r\n        return propertyName.direction === \"ascending\" ? 1 : -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    depoContext.getAttrNames();\r\n    depoContext.getAttrValues();\r\n  }, []);\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  return (\r\n    <>\r\n      {deletePop && (\r\n        <div className=\"delete-attr-pop\">\r\n          <div\r\n            className=\"delete-attr-pop-opa\"\r\n            onClick={() => showDeletePop(false)}\r\n          ></div>\r\n\r\n          <div className=\"delete-attr-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => showDeletePop(false)}\r\n            />\r\n            <p>Jeni te sigurt qe deshironi ta fshini?</p>\r\n            <div className=\"delete-attr-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                size=\"large\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/delete_attr_value.php\",\r\n                      { id: deleteID }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        depoContext.getAttrValues();\r\n                        showDeletePop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                PO\r\n              </Button>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"outlined\"\r\n                size=\"large\"\r\n                onClick={() => showDeletePop(false)}\r\n              >\r\n                JO\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {editPop && (\r\n        <div className=\"edit-attr-pop\">\r\n          <div\r\n            className=\"edit-attr-pop-opa\"\r\n            onClick={() => showEditPop(false)}\r\n          ></div>\r\n          <div className=\"edit-attr-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => showEditPop(false)}\r\n            />\r\n\r\n            <TextField\r\n              value={editValue}\r\n              variant=\"outlined\"\r\n              onChange={(e) => setEditvalue(e.target.value)}\r\n              style={{ width: \"50%\" }}\r\n              type=\"text\"\r\n            />\r\n\r\n            <div className=\"edit-attr-pop-container-buttons\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/edit_attr_value.php\",\r\n                      { name_id: editID, value: editValue }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        showEditPop(false);\r\n                        depoContext.getAttrValues();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={() => showEditPop(false)}\r\n              >\r\n                Anullo\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {seeAttrNames && (\r\n        <div className=\"see-attr-names-pop\">\r\n          <div\r\n            className=\"see-attr-names-pop-opa\"\r\n            onClick={() => showAllAttrNames(false)}\r\n          ></div>\r\n          <div className=\"see-attr-names-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                top: \"5px\",\r\n                right: \"5px\",\r\n                cursor: \"pointer\",\r\n                position: \"absolute\",\r\n              }}\r\n              onClick={() => showAllAttrNames(false)}\r\n            />\r\n\r\n            {attrNames.length > 0 ? (\r\n              <>\r\n                {attrNames.map((attr) => (\r\n                  <Chip\r\n                    style={{ marginRight: \"20px\" }}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    label={attr.name}\r\n                    size=\"medium\"\r\n                    clickable\r\n                    onDelete={() => {\r\n                      axios\r\n                        .post(\r\n                          \"https://192.168.88.250/demo_react_server/api/config/delete_attr.php\",\r\n                          { id: attr.id_name }\r\n                        )\r\n                        .then((res) => {\r\n                          if (res.data.status === 1) {\r\n                            depoContext.getAttrValues();\r\n                            depoContext.getAttrNames();\r\n                            alertContext.setAlert(\r\n                              `${res.data.message}`,\r\n                              \"success\"\r\n                            );\r\n                          } else {\r\n                            alertContext.setAlert(\r\n                              `${res.data.message}`,\r\n                              \"error\"\r\n                            );\r\n                          }\r\n                        });\r\n                    }}\r\n                  />\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <p>Ska atribute</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoValueAttrPop && (\r\n        <div className=\"shto-attributes-values-pop\">\r\n          <div\r\n            className=\"shto-attributes-values-pop-opa\"\r\n            onClick={() => showAttrPopValue(false)}\r\n          ></div>\r\n          <div className=\"shto-attributes-values-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => showAttrPopValue(false)}\r\n            />\r\n            <div style={{ width: \"50%\" }}>\r\n              <InputLabel id=\"zonaForm\">Attributes</InputLabel>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                labelId=\"zonaForm\"\r\n                value={attrFromSelect}\r\n                onChange={(e) => getAttrFromSelect(e.target.value)}\r\n                variant=\"outlined\"\r\n              >\r\n                <MenuItem value=\"None\"></MenuItem>\r\n\r\n                {attrNames.map((attr) => (\r\n                  <MenuItem value={attr.id_name}> {attr.name} </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </div>\r\n            <TextField\r\n              value={attrnameValue}\r\n              style={{ width: \"50%\" }}\r\n              onChange={(e) => setAttrNameValue(e.target.value)}\r\n              variant=\"outlined\"\r\n              label=\"Vlera e atributit\"\r\n            />\r\n            <div className=\"shto-attributes-values-pop-conatainer-buttons\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/add_values_in_attributes.php\",\r\n                      { name_id: attrFromSelect, value: attrnameValue }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        getAttrFromSelect(\"\");\r\n                        setAttrNameValue(\"\");\r\n                        depoContext.getAttrValues();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/add_values_in_attributes.php\",\r\n                      { name_id: attrFromSelect, value: attrnameValue }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        alertContext.setAlert(`${res.data.message}`, \"success\");\r\n                        getAttrFromSelect(\"\");\r\n                        setAttrNameValue(\"\");\r\n                        showAttrPopValue(false);\r\n                        axios.get(\r\n                          \"https://192.168.88.250/demo_react_server/api/config/get_name_values_attribues.php\"\r\n                        );\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.message}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj dhe Dil\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {shtoAttrPop && (\r\n        <div className=\"shto-attributes-pop\">\r\n          <div\r\n            className=\"shto-attributes-pop-opa\"\r\n            onClick={() => showAttrPop(false)}\r\n          ></div>\r\n          <div className=\"shto-attributes-pop-container\">\r\n            <CloseOutlinedIcon\r\n              style={{\r\n                alignSelf: \"flex-end\",\r\n                marginRight: \"20px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => showAttrPop(false)}\r\n            />\r\n            <TextField\r\n              onChange={(e) => setAttrValue(e.target.value)}\r\n              label=\"Emri i Atributit\"\r\n              variant=\"outlined\"\r\n              style={{ width: \"60%\" }}\r\n              value={attrValue}\r\n            />\r\n            <div className=\"shto-attributes-pop-container-buttons\">\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/add_new_attribute.php\",\r\n                      { name: attrValue }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        setAttrValue(\"\");\r\n                        alertContext.setAlert(\r\n                          `${res.data.messagge}`,\r\n                          \"success\"\r\n                        );\r\n                        depoContext.getAttrNames();\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.messagge}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                Ruaj\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  axios\r\n                    .post(\r\n                      \"https://192.168.88.250/demo_react_server/api/config/add_new_attribute.php\",\r\n                      { name: attrValue }\r\n                    )\r\n                    .then((res) => {\r\n                      if (res.data.status === 1) {\r\n                        setAttrValue(\"\");\r\n                        alertContext.setAlert(\r\n                          `${res.data.messagge}`,\r\n                          \"success\"\r\n                        );\r\n                        depoContext.getAttrNames();\r\n                        showAttrPop(false);\r\n                      } else {\r\n                        alertContext.setAlert(`${res.data.messagge}`, \"error\");\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Ruaj dhe Dil{\" \"}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"shto-attributes\">\r\n        <div className=\"shto-attributes-header\">\r\n          <h3>Attributet</h3>\r\n          <div className=\"shto-attributes-header-buttons\">\r\n            <Button\r\n              startIcon={<RemoveRedEyeOutlinedIcon />}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => showAllAttrNames(true)}\r\n            >\r\n              {\" \"}\r\n              Shiko atributet{\" \"}\r\n            </Button>\r\n            <Button\r\n              startIcon={<AddCircleOutlineOutlinedIcon />}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                showAttrPop(true);\r\n              }}\r\n            >\r\n              Shto atribut te ri\r\n            </Button>\r\n            <Button\r\n              startIcon={<AddCircleOutlineOutlinedIcon />}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => showAttrPopValue(true)}\r\n            >\r\n              Shto vlera ne atribut\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\" onClick={() => requestSort(\"id\")}>\r\n                ID\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"id\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"center\" onClick={() => requestSort(\"name\")}>\r\n                Emri\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"name\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"center\" onClick={() => requestSort(\"value\")}>\r\n                Vlera\r\n                {propertyName.key === \"value\" &&\r\n                  propertyName.direction === \"ascending\" && (\r\n                    <ArrowUpwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n                {propertyName.key === \"value\" &&\r\n                  propertyName.direction === \"descending\" && (\r\n                    <ArrowDownwardOutlinedIcon style={{ fontSize: \"17px\" }} />\r\n                  )}\r\n              </TableCell>\r\n              <TableCell align=\"center\">Veprimet</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {attrValues.slice(start, end).map((attr) => (\r\n              <TableRow>\r\n                <TableCell align=\"center\"> {attr.id} </TableCell>\r\n                <TableCell align=\"center\"> {attr.name} </TableCell>\r\n                <TableCell align=\"center\"> {attr.value} </TableCell>\r\n                <TableCell align=\"center\">\r\n                  <EditOutlinedIcon\r\n                    onClick={() => {\r\n                      showEditPop(true);\r\n                      setEditvalue(attr.value);\r\n                      setEditID(attr.id);\r\n                    }}\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                  <DeleteOutlineOutlinedIcon\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => {\r\n                      showDeletePop(true);\r\n                      setDeleteID(attr.id);\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className=\"pagination\">\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <InputLabel style={{ marginRight: \"10px\" }} id=\"row\">\r\n              Attribute ne faqe\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"row\"\r\n              onChange={(e) => {\r\n                setItempage(e.target.value);\r\n              }}\r\n              value={itemPage}\r\n            >\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={8}>8</MenuItem>\r\n              <MenuItem value={10}>10</MenuItem>\r\n              <MenuItem value={15}>15</MenuItem>\r\n              <MenuItem value={20}>20</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <Pagination\r\n            count={Math.ceil(attrValues.length / itemPage)}\r\n            color=\"primary\"\r\n            page={page}\r\n            size=\"large\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoProduktPopup.jsx",["223","224","225"],"C:\\Users\\User\\Desktop\\a-move\\src\\pages\\adminDashboard\\components\\ShtoKlientPopup.jsx",["226"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport AlertContext from \"../../../context/alertContext/AlertContext\";\r\nimport DepoContext from \"../../../context/depoContext/DepoContext\";\r\nimport DeleteOutlineOutlinedIcon from \"@material-ui/icons/DeleteOutlineOutlined\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nexport default function ShtoKlientPopup({ closePopup }) {\r\n  const [emri, setEmer] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [zonaForm, setZonaForm] = useState(\"\");\r\n  const [kategoriForm, setKategoriForm] = useState(\"\");\r\n  const [image, setAvatar] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const depoContext = useContext(DepoContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { categoryClients, zonaClients } = depoContext;\r\n\r\n  useEffect(() => {\r\n    depoContext.getCategoryClients();\r\n    depoContext.getZonaClients();\r\n  }, []);\r\n\r\n  const shtoKlient = (e) => {\r\n    e.preventDefault();\r\n\r\n    let avatar = new FormData();\r\n\r\n    avatar.append(\"name\", emri);\r\n    avatar.append(\"email\", email);\r\n    avatar.append(\"password\", password);\r\n    avatar.append(\"role\", 3);\r\n    avatar.append(\"zona\", zonaForm);\r\n    avatar.append(\"kategoria\", kategoriForm);\r\n    avatar.append(\"image\", image);\r\n\r\n    const config = {\r\n      headers: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n    axios\r\n      .post(\r\n        \"https://192.168.88.250/demo_react_server/api/config/register_klient.php\",\r\n        avatar,\r\n        config\r\n      )\r\n      .then((res) => {\r\n        if (res.data.status === 0) {\r\n          alertContext.setAlert(\"Plotesoni te gjitha fushat!\", \"error\");\r\n        } else if (res.data.status === 1) {\r\n          alertContext.setAlert(\"Klienti u shtua!\", \"success\");\r\n          depoContext.getAllClients();\r\n          closePopup();\r\n          setEmer(\"\");\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          setZonaForm(\"\");\r\n          setKategoriForm(\"\");\r\n          setAvatar(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"shtoklient-popup\">\r\n      <div className=\"shtoklient-popup-opa\" onClick={() => closePopup()}></div>\r\n      <div className=\"shtoklient-popup-container\">\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            padding: \"2px 5px\",\r\n          }}\r\n        >\r\n          <CloseOutlinedIcon\r\n            color=\"secondary\"\r\n            fontSize={\"large\"}\r\n            cursor=\"pointer\"\r\n            onClick={() => closePopup()}\r\n          />\r\n        </div>\r\n        <form className=\"shtoklient-popup-form\" onSubmit={shtoKlient}>\r\n          <TextField\r\n            className=\"input-popup\"\r\n            label=\"Emri\"\r\n            variant=\"outlined\"\r\n            value={emri}\r\n            onChange={(e) => setEmer(e.target.value)}\r\n          />\r\n          <TextField\r\n            className=\"input-popup\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            value={email}\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <TextField\r\n            className=\"input-popup\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            value={password}\r\n            type=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <div className=\"select-group\">\r\n            <InputLabel id=\"zonaForm\" >Zona</InputLabel>\r\n            <Select\r\n              className=\"input-select\"\r\n              labelId=\"zonaForm\"\r\n              value={zonaForm}\r\n              onChange={(e) => setZonaForm(e.target.value)}\r\n              variant=\"outlined\"\r\n            >\r\n              <MenuItem value=\"None\"></MenuItem>\r\n\r\n              {zonaClients.map((zona) => (\r\n                <MenuItem value={zona.name}>{zona.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n            <InputLabel id=\"kategoriForm\">Kategoria</InputLabel>\r\n            <Select\r\n              className=\"input-select\"\r\n              labelId=\"kategoriForm\"\r\n              value={kategoriForm}\r\n              onChange={(e) => setKategoriForm(e.target.value)}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              <MenuItem value=\"None\"></MenuItem>\r\n              {categoryClients.map((category) => (\r\n                <MenuItem value={category.name}>{category.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n          {image === \"\" ? (\r\n            <>\r\n              <InputLabel\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                htmlFor=\"image\"\r\n              >\r\n                <AddIcon style={{ fontSize: \"70px\" }} /> Upload image{\" \"}\r\n              </InputLabel>\r\n              <Input\r\n                type=\"file\"\r\n                id=\"image\"\r\n                className=\"input-file\"\r\n                style={{ display: \"none\" }}\r\n                onChange={(e) => {\r\n                  setAvatar(e.target.files[0]);\r\n                  setFile(URL.createObjectURL(e.target.files[0]));\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <div className=\"image-klient-form\">\r\n              <DeleteOutlineOutlinedIcon\r\n                onClick={() => {\r\n                  setAvatar(\"\");\r\n                  setFile(\"\");\r\n                }}\r\n                className=\"delete-icon-image\"\r\n              />\r\n              <img src={file} alt=\"\" />\r\n            </div>\r\n          )}\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            style={{ width: \"40%\", marginTop: \"50px\", marginBottom: \"40px\" }}\r\n          >\r\n            Shto\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseState.jsx",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\types.js",[],"C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollapseReducer.jsx",["227"],"import { SET_COLLAPSE_FALSE, SET_COLLAPSE_TRUE } from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_COLLAPSE_TRUE:\r\n      return action.payload;\r\n    case SET_COLLAPSE_FALSE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n","C:\\Users\\User\\Desktop\\a-move\\src\\context\\collpaseContext\\CollpaseContext.jsx",[],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":25,"column":6,"nodeType":"234","endLine":25,"endColumn":8,"suggestions":"235"},{"ruleId":"232","severity":1,"message":"236","line":36,"column":6,"nodeType":"234","endLine":36,"endColumn":8,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":10,"column":16,"nodeType":"240","messageId":"241","endLine":10,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":15,"column":1,"nodeType":"244","endLine":42,"endColumn":3},{"ruleId":"242","severity":1,"message":"243","line":9,"column":1,"nodeType":"244","endLine":24,"endColumn":3},{"ruleId":"242","severity":1,"message":"243","line":3,"column":1,"nodeType":"244","endLine":12,"endColumn":3},{"ruleId":"232","severity":1,"message":"245","line":33,"column":6,"nodeType":"234","endLine":33,"endColumn":8,"suggestions":"246"},{"ruleId":"238","severity":1,"message":"239","line":40,"column":16,"nodeType":"240","messageId":"241","endLine":40,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":42,"column":23,"nodeType":"240","messageId":"241","endLine":42,"endColumn":25},{"ruleId":"238","severity":1,"message":"239","line":44,"column":23,"nodeType":"240","messageId":"241","endLine":44,"endColumn":25},{"ruleId":"238","severity":1,"message":"239","line":52,"column":16,"nodeType":"240","messageId":"241","endLine":52,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":54,"column":23,"nodeType":"240","messageId":"241","endLine":54,"endColumn":25},{"ruleId":"238","severity":1,"message":"239","line":56,"column":23,"nodeType":"240","messageId":"241","endLine":56,"endColumn":25},{"ruleId":"232","severity":1,"message":"233","line":28,"column":6,"nodeType":"234","endLine":28,"endColumn":8,"suggestions":"247"},{"ruleId":"232","severity":1,"message":"233","line":41,"column":6,"nodeType":"234","endLine":41,"endColumn":8,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":60,"column":12,"nodeType":"251","messageId":"252","endLine":60,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":248,"column":47,"nodeType":"240","messageId":"241","endLine":248,"endColumn":49},{"ruleId":"238","severity":1,"message":"239","line":19,"column":59,"nodeType":"240","messageId":"241","endLine":19,"endColumn":61},{"ruleId":"232","severity":1,"message":"236","line":103,"column":6,"nodeType":"234","endLine":103,"endColumn":8,"suggestions":"253"},{"ruleId":"249","severity":1,"message":"254","line":3,"column":8,"nodeType":"251","messageId":"252","endLine":3,"endColumn":23},{"ruleId":"232","severity":1,"message":"236","line":124,"column":6,"nodeType":"234","endLine":124,"endColumn":8,"suggestions":"255"},{"ruleId":"238","severity":1,"message":"239","line":131,"column":14,"nodeType":"240","messageId":"241","endLine":131,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":465,"column":59,"nodeType":"240","messageId":"241","endLine":465,"endColumn":61},{"ruleId":"232","severity":1,"message":"236","line":76,"column":6,"nodeType":"234","endLine":76,"endColumn":8,"suggestions":"256"},{"ruleId":"232","severity":1,"message":"236","line":67,"column":6,"nodeType":"234","endLine":67,"endColumn":8,"suggestions":"257"},{"ruleId":"232","severity":1,"message":"236","line":72,"column":6,"nodeType":"234","endLine":72,"endColumn":8,"suggestions":"258"},{"ruleId":"232","severity":1,"message":"236","line":72,"column":6,"nodeType":"234","endLine":72,"endColumn":8,"suggestions":"259"},{"ruleId":"232","severity":1,"message":"236","line":75,"column":6,"nodeType":"234","endLine":75,"endColumn":8,"suggestions":"260"},{"ruleId":"232","severity":1,"message":"236","line":28,"column":6,"nodeType":"234","endLine":28,"endColumn":8,"suggestions":"261"},{"ruleId":"232","severity":1,"message":"262","line":63,"column":6,"nodeType":"234","endLine":63,"endColumn":8,"suggestions":"263"},{"ruleId":"238","severity":1,"message":"239","line":66,"column":53,"nodeType":"240","messageId":"241","endLine":66,"endColumn":55},{"ruleId":"232","severity":1,"message":"236","line":30,"column":6,"nodeType":"234","endLine":30,"endColumn":8,"suggestions":"264"},{"ruleId":"242","severity":1,"message":"243","line":3,"column":1,"nodeType":"244","endLine":12,"endColumn":3},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'klientContext'. Either include it or remove the dependency array.","ArrayExpression",["267"],"React Hook useEffect has a missing dependency: 'depoContext'. Either include it or remove the dependency array.",["268"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'klientConext'. Either include it or remove the dependency array.",["269"],["270"],["271"],"no-unused-vars","'sortByProperty' is defined but never used.","Identifier","unusedVar",["272"],"'AddOutlinedIcon' is defined but never used.",["273"],["274"],["275"],["276"],["277"],["278"],["279"],"React Hook useEffect has missing dependencies: 'arrayOfObjects' and 'attrValues'. Either include them or remove the dependency array. You can also do a functional update 'setArrayofObjects(a => ...)' if you only need 'arrayOfObjects' in the 'setArrayofObjects' call.",["280"],["281"],"no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"282","fix":"288"},{"desc":"282","fix":"289"},{"desc":"284","fix":"290"},{"desc":"284","fix":"291"},{"desc":"284","fix":"292"},{"desc":"284","fix":"293"},{"desc":"284","fix":"294"},{"desc":"284","fix":"295"},{"desc":"284","fix":"296"},{"desc":"284","fix":"297"},{"desc":"298","fix":"299"},{"desc":"284","fix":"300"},"Update the dependencies array to be: [klientContext]",{"range":"301","text":"302"},"Update the dependencies array to be: [depoContext]",{"range":"303","text":"304"},"Update the dependencies array to be: [klientConext]",{"range":"305","text":"306"},{"range":"307","text":"302"},{"range":"308","text":"302"},{"range":"309","text":"304"},{"range":"310","text":"304"},{"range":"311","text":"304"},{"range":"312","text":"304"},{"range":"313","text":"304"},{"range":"314","text":"304"},{"range":"315","text":"304"},{"range":"316","text":"304"},"Update the dependencies array to be: [arrayOfObjects, attrValues]",{"range":"317","text":"318"},{"range":"319","text":"304"},[1018,1020],"[klientContext]",[1815,1817],"[depoContext]",[1586,1588],"[klientConext]",[1432,1434],[1921,1923],[4588,4590],[5047,5049],[3477,3479],[2835,2837],[2864,2866],[2931,2933],[3186,3188],[1419,1421],[2644,2646],"[arrayOfObjects, attrValues]",[1374,1376]]